//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DCCDomainsDataCache.Impl.DomainsDataCacheWS
{


  /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DomainsDataCacheSoap", Namespace="urn:DomainsDataCacheWebSvc")]
    public partial class DomainsDataCache : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllTldDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldDataByTldIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedemptionGracePeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationGracePeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDomainInfoStatusDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainInfoStatusDataByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEMCDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMCDataByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllHubDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHubDataByTldIdAndInternalRegistrarIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHubDataByTldIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldmlByTldIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldmlByTldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTldlanguageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldLanguageDataByTldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTldLanguageDataByTldIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReloadDomainsDataCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback MonitorDomainsDataCacheOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DomainsDataCache() {
            this.Url = global::Atlantis.Framework.DCCDomainsDataCache.Impl.Properties.Settings.Default.Atlantis_Framework_DCCDomainsDataCache_Impl_DomainsDataCacheWS_DomainsDataCache;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllTldDataCompletedEventHandler GetAllTldDataCompleted;
        
        /// <remarks/>
        public event GetTldIdCompletedEventHandler GetTldIdCompleted;
        
        /// <remarks/>
        public event GetTldDataByTldIdCompletedEventHandler GetTldDataByTldIdCompleted;
        
        /// <remarks/>
        public event GetTldNameCompletedEventHandler GetTldNameCompleted;
        
        /// <remarks/>
        public event GetRedemptionGracePeriodCompletedEventHandler GetRedemptionGracePeriodCompleted;
        
        /// <remarks/>
        public event GetRegistrationGracePeriodCompletedEventHandler GetRegistrationGracePeriodCompleted;
        
        /// <remarks/>
        public event GetAllDomainInfoStatusDataCompletedEventHandler GetAllDomainInfoStatusDataCompleted;
        
        /// <remarks/>
        public event GetDomainInfoStatusDataByStatusCompletedEventHandler GetDomainInfoStatusDataByStatusCompleted;
        
        /// <remarks/>
        public event GetAllEMCDataCompletedEventHandler GetAllEMCDataCompleted;
        
        /// <remarks/>
        public event GetEMCDataByIdCompletedEventHandler GetEMCDataByIdCompleted;
        
        /// <remarks/>
        public event GetAllHubDataCompletedEventHandler GetAllHubDataCompleted;
        
        /// <remarks/>
        public event GetHubDataByTldIdAndInternalRegistrarIdCompletedEventHandler GetHubDataByTldIdAndInternalRegistrarIdCompleted;
        
        /// <remarks/>
        public event GetHubDataByTldIdCompletedEventHandler GetHubDataByTldIdCompleted;
        
        /// <remarks/>
        public event GetTldmlByTldIdCompletedEventHandler GetTldmlByTldIdCompleted;
        
        /// <remarks/>
        public event GetTldmlByTldNameCompletedEventHandler GetTldmlByTldNameCompleted;
        
        /// <remarks/>
        public event GetAllTldlanguageDataCompletedEventHandler GetAllTldlanguageDataCompleted;
        
        /// <remarks/>
        public event GetTldLanguageDataByTldCompletedEventHandler GetTldLanguageDataByTldCompleted;
        
        /// <remarks/>
        public event GetTldLanguageDataByTldIdCompletedEventHandler GetTldLanguageDataByTldIdCompleted;
        
        /// <remarks/>
        public event ReloadDomainsDataCacheCompletedEventHandler ReloadDomainsDataCacheCompleted;
        
        /// <remarks/>
        public event MonitorDomainsDataCacheCompletedEventHandler MonitorDomainsDataCacheCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetAllTldData", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllTldData() {
            object[] results = this.Invoke("GetAllTldData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTldDataAsync() {
            this.GetAllTldDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTldDataAsync(object userState) {
            if ((this.GetAllTldDataOperationCompleted == null)) {
                this.GetAllTldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTldDataOperationCompleted);
            }
            this.InvokeAsync("GetAllTldData", new object[0], this.GetAllTldDataOperationCompleted, userState);
        }
        
        private void OnGetAllTldDataOperationCompleted(object arg) {
            if ((this.GetAllTldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTldDataCompleted(this, new GetAllTldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldId", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldId(string sTldName) {
            object[] results = this.Invoke("GetTldId", new object[] {
                        sTldName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldIdAsync(string sTldName) {
            this.GetTldIdAsync(sTldName, null);
        }
        
        /// <remarks/>
        public void GetTldIdAsync(string sTldName, object userState) {
            if ((this.GetTldIdOperationCompleted == null)) {
                this.GetTldIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldIdOperationCompleted);
            }
            this.InvokeAsync("GetTldId", new object[] {
                        sTldName}, this.GetTldIdOperationCompleted, userState);
        }
        
        private void OnGetTldIdOperationCompleted(object arg) {
            if ((this.GetTldIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldIdCompleted(this, new GetTldIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldDataByTldId", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldDataByTldId(long lTldId) {
            object[] results = this.Invoke("GetTldDataByTldId", new object[] {
                        lTldId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldDataByTldIdAsync(long lTldId) {
            this.GetTldDataByTldIdAsync(lTldId, null);
        }
        
        /// <remarks/>
        public void GetTldDataByTldIdAsync(long lTldId, object userState) {
            if ((this.GetTldDataByTldIdOperationCompleted == null)) {
                this.GetTldDataByTldIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldDataByTldIdOperationCompleted);
            }
            this.InvokeAsync("GetTldDataByTldId", new object[] {
                        lTldId}, this.GetTldDataByTldIdOperationCompleted, userState);
        }
        
        private void OnGetTldDataByTldIdOperationCompleted(object arg) {
            if ((this.GetTldDataByTldIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldDataByTldIdCompleted(this, new GetTldDataByTldIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldName", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldName(long lTldId) {
            object[] results = this.Invoke("GetTldName", new object[] {
                        lTldId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldNameAsync(long lTldId) {
            this.GetTldNameAsync(lTldId, null);
        }
        
        /// <remarks/>
        public void GetTldNameAsync(long lTldId, object userState) {
            if ((this.GetTldNameOperationCompleted == null)) {
                this.GetTldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldNameOperationCompleted);
            }
            this.InvokeAsync("GetTldName", new object[] {
                        lTldId}, this.GetTldNameOperationCompleted, userState);
        }
        
        private void OnGetTldNameOperationCompleted(object arg) {
            if ((this.GetTldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldNameCompleted(this, new GetTldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetRedemptionGracePeriod", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRedemptionGracePeriod(long lTldId) {
            object[] results = this.Invoke("GetRedemptionGracePeriod", new object[] {
                        lTldId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedemptionGracePeriodAsync(long lTldId) {
            this.GetRedemptionGracePeriodAsync(lTldId, null);
        }
        
        /// <remarks/>
        public void GetRedemptionGracePeriodAsync(long lTldId, object userState) {
            if ((this.GetRedemptionGracePeriodOperationCompleted == null)) {
                this.GetRedemptionGracePeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedemptionGracePeriodOperationCompleted);
            }
            this.InvokeAsync("GetRedemptionGracePeriod", new object[] {
                        lTldId}, this.GetRedemptionGracePeriodOperationCompleted, userState);
        }
        
        private void OnGetRedemptionGracePeriodOperationCompleted(object arg) {
            if ((this.GetRedemptionGracePeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedemptionGracePeriodCompleted(this, new GetRedemptionGracePeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetRegistrationGracePeriod", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRegistrationGracePeriod(long lTldId) {
            object[] results = this.Invoke("GetRegistrationGracePeriod", new object[] {
                        lTldId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationGracePeriodAsync(long lTldId) {
            this.GetRegistrationGracePeriodAsync(lTldId, null);
        }
        
        /// <remarks/>
        public void GetRegistrationGracePeriodAsync(long lTldId, object userState) {
            if ((this.GetRegistrationGracePeriodOperationCompleted == null)) {
                this.GetRegistrationGracePeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationGracePeriodOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationGracePeriod", new object[] {
                        lTldId}, this.GetRegistrationGracePeriodOperationCompleted, userState);
        }
        
        private void OnGetRegistrationGracePeriodOperationCompleted(object arg) {
            if ((this.GetRegistrationGracePeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationGracePeriodCompleted(this, new GetRegistrationGracePeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetAllDomainInfoStatusData", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllDomainInfoStatusData() {
            object[] results = this.Invoke("GetAllDomainInfoStatusData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDomainInfoStatusDataAsync() {
            this.GetAllDomainInfoStatusDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDomainInfoStatusDataAsync(object userState) {
            if ((this.GetAllDomainInfoStatusDataOperationCompleted == null)) {
                this.GetAllDomainInfoStatusDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDomainInfoStatusDataOperationCompleted);
            }
            this.InvokeAsync("GetAllDomainInfoStatusData", new object[0], this.GetAllDomainInfoStatusDataOperationCompleted, userState);
        }
        
        private void OnGetAllDomainInfoStatusDataOperationCompleted(object arg) {
            if ((this.GetAllDomainInfoStatusDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDomainInfoStatusDataCompleted(this, new GetAllDomainInfoStatusDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetDomainInfoStatusDataByStatus", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDomainInfoStatusDataByStatus(long lStatus) {
            object[] results = this.Invoke("GetDomainInfoStatusDataByStatus", new object[] {
                        lStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainInfoStatusDataByStatusAsync(long lStatus) {
            this.GetDomainInfoStatusDataByStatusAsync(lStatus, null);
        }
        
        /// <remarks/>
        public void GetDomainInfoStatusDataByStatusAsync(long lStatus, object userState) {
            if ((this.GetDomainInfoStatusDataByStatusOperationCompleted == null)) {
                this.GetDomainInfoStatusDataByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainInfoStatusDataByStatusOperationCompleted);
            }
            this.InvokeAsync("GetDomainInfoStatusDataByStatus", new object[] {
                        lStatus}, this.GetDomainInfoStatusDataByStatusOperationCompleted, userState);
        }
        
        private void OnGetDomainInfoStatusDataByStatusOperationCompleted(object arg) {
            if ((this.GetDomainInfoStatusDataByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainInfoStatusDataByStatusCompleted(this, new GetDomainInfoStatusDataByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetAllEMCData", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllEMCData() {
            object[] results = this.Invoke("GetAllEMCData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEMCDataAsync() {
            this.GetAllEMCDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEMCDataAsync(object userState) {
            if ((this.GetAllEMCDataOperationCompleted == null)) {
                this.GetAllEMCDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEMCDataOperationCompleted);
            }
            this.InvokeAsync("GetAllEMCData", new object[0], this.GetAllEMCDataOperationCompleted, userState);
        }
        
        private void OnGetAllEMCDataOperationCompleted(object arg) {
            if ((this.GetAllEMCDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEMCDataCompleted(this, new GetAllEMCDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetEMCDataById", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEMCDataById(long lEmailTemplateLookupId) {
            object[] results = this.Invoke("GetEMCDataById", new object[] {
                        lEmailTemplateLookupId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMCDataByIdAsync(long lEmailTemplateLookupId) {
            this.GetEMCDataByIdAsync(lEmailTemplateLookupId, null);
        }
        
        /// <remarks/>
        public void GetEMCDataByIdAsync(long lEmailTemplateLookupId, object userState) {
            if ((this.GetEMCDataByIdOperationCompleted == null)) {
                this.GetEMCDataByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMCDataByIdOperationCompleted);
            }
            this.InvokeAsync("GetEMCDataById", new object[] {
                        lEmailTemplateLookupId}, this.GetEMCDataByIdOperationCompleted, userState);
        }
        
        private void OnGetEMCDataByIdOperationCompleted(object arg) {
            if ((this.GetEMCDataByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMCDataByIdCompleted(this, new GetEMCDataByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetAllHubData", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllHubData() {
            object[] results = this.Invoke("GetAllHubData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllHubDataAsync() {
            this.GetAllHubDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAllHubDataAsync(object userState) {
            if ((this.GetAllHubDataOperationCompleted == null)) {
                this.GetAllHubDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllHubDataOperationCompleted);
            }
            this.InvokeAsync("GetAllHubData", new object[0], this.GetAllHubDataOperationCompleted, userState);
        }
        
        private void OnGetAllHubDataOperationCompleted(object arg) {
            if ((this.GetAllHubDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllHubDataCompleted(this, new GetAllHubDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetHubDataByTldIdAndInternalRegistrarId", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHubDataByTldIdAndInternalRegistrarId(long lTldId, long lInternalRegistrarId, long lRegistrationApiId) {
            object[] results = this.Invoke("GetHubDataByTldIdAndInternalRegistrarId", new object[] {
                        lTldId,
                        lInternalRegistrarId,
                        lRegistrationApiId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHubDataByTldIdAndInternalRegistrarIdAsync(long lTldId, long lInternalRegistrarId, long lRegistrationApiId) {
            this.GetHubDataByTldIdAndInternalRegistrarIdAsync(lTldId, lInternalRegistrarId, lRegistrationApiId, null);
        }
        
        /// <remarks/>
        public void GetHubDataByTldIdAndInternalRegistrarIdAsync(long lTldId, long lInternalRegistrarId, long lRegistrationApiId, object userState) {
            if ((this.GetHubDataByTldIdAndInternalRegistrarIdOperationCompleted == null)) {
                this.GetHubDataByTldIdAndInternalRegistrarIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHubDataByTldIdAndInternalRegistrarIdOperationCompleted);
            }
            this.InvokeAsync("GetHubDataByTldIdAndInternalRegistrarId", new object[] {
                        lTldId,
                        lInternalRegistrarId,
                        lRegistrationApiId}, this.GetHubDataByTldIdAndInternalRegistrarIdOperationCompleted, userState);
        }
        
        private void OnGetHubDataByTldIdAndInternalRegistrarIdOperationCompleted(object arg) {
            if ((this.GetHubDataByTldIdAndInternalRegistrarIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHubDataByTldIdAndInternalRegistrarIdCompleted(this, new GetHubDataByTldIdAndInternalRegistrarIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetHubDataByTldId", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHubDataByTldId(long lTldId, long lRegistrationApiId) {
            object[] results = this.Invoke("GetHubDataByTldId", new object[] {
                        lTldId,
                        lRegistrationApiId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHubDataByTldIdAsync(long lTldId, long lRegistrationApiId) {
            this.GetHubDataByTldIdAsync(lTldId, lRegistrationApiId, null);
        }
        
        /// <remarks/>
        public void GetHubDataByTldIdAsync(long lTldId, long lRegistrationApiId, object userState) {
            if ((this.GetHubDataByTldIdOperationCompleted == null)) {
                this.GetHubDataByTldIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHubDataByTldIdOperationCompleted);
            }
            this.InvokeAsync("GetHubDataByTldId", new object[] {
                        lTldId,
                        lRegistrationApiId}, this.GetHubDataByTldIdOperationCompleted, userState);
        }
        
        private void OnGetHubDataByTldIdOperationCompleted(object arg) {
            if ((this.GetHubDataByTldIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHubDataByTldIdCompleted(this, new GetHubDataByTldIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldmlByTldId", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldmlByTldId(long lTldId) {
            object[] results = this.Invoke("GetTldmlByTldId", new object[] {
                        lTldId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldmlByTldIdAsync(long lTldId) {
            this.GetTldmlByTldIdAsync(lTldId, null);
        }
        
        /// <remarks/>
        public void GetTldmlByTldIdAsync(long lTldId, object userState) {
            if ((this.GetTldmlByTldIdOperationCompleted == null)) {
                this.GetTldmlByTldIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldmlByTldIdOperationCompleted);
            }
            this.InvokeAsync("GetTldmlByTldId", new object[] {
                        lTldId}, this.GetTldmlByTldIdOperationCompleted, userState);
        }
        
        private void OnGetTldmlByTldIdOperationCompleted(object arg) {
            if ((this.GetTldmlByTldIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldmlByTldIdCompleted(this, new GetTldmlByTldIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldmlByTldName", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldmlByTldName(string sTldName) {
            object[] results = this.Invoke("GetTldmlByTldName", new object[] {
                        sTldName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldmlByTldNameAsync(string sTldName) {
            this.GetTldmlByTldNameAsync(sTldName, null);
        }
        
        /// <remarks/>
        public void GetTldmlByTldNameAsync(string sTldName, object userState) {
            if ((this.GetTldmlByTldNameOperationCompleted == null)) {
                this.GetTldmlByTldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldmlByTldNameOperationCompleted);
            }
            this.InvokeAsync("GetTldmlByTldName", new object[] {
                        sTldName}, this.GetTldmlByTldNameOperationCompleted, userState);
        }
        
        private void OnGetTldmlByTldNameOperationCompleted(object arg) {
            if ((this.GetTldmlByTldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldmlByTldNameCompleted(this, new GetTldmlByTldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetAllTldlanguageData", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllTldlanguageData() {
            object[] results = this.Invoke("GetAllTldlanguageData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTldlanguageDataAsync() {
            this.GetAllTldlanguageDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTldlanguageDataAsync(object userState) {
            if ((this.GetAllTldlanguageDataOperationCompleted == null)) {
                this.GetAllTldlanguageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTldlanguageDataOperationCompleted);
            }
            this.InvokeAsync("GetAllTldlanguageData", new object[0], this.GetAllTldlanguageDataOperationCompleted, userState);
        }
        
        private void OnGetAllTldlanguageDataOperationCompleted(object arg) {
            if ((this.GetAllTldlanguageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTldlanguageDataCompleted(this, new GetAllTldlanguageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldLanguageDataByTld", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldLanguageDataByTld(string sTld) {
            object[] results = this.Invoke("GetTldLanguageDataByTld", new object[] {
                        sTld});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldLanguageDataByTldAsync(string sTld) {
            this.GetTldLanguageDataByTldAsync(sTld, null);
        }
        
        /// <remarks/>
        public void GetTldLanguageDataByTldAsync(string sTld, object userState) {
            if ((this.GetTldLanguageDataByTldOperationCompleted == null)) {
                this.GetTldLanguageDataByTldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldLanguageDataByTldOperationCompleted);
            }
            this.InvokeAsync("GetTldLanguageDataByTld", new object[] {
                        sTld}, this.GetTldLanguageDataByTldOperationCompleted, userState);
        }
        
        private void OnGetTldLanguageDataByTldOperationCompleted(object arg) {
            if ((this.GetTldLanguageDataByTldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldLanguageDataByTldCompleted(this, new GetTldLanguageDataByTldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/GetTldLanguageDataByTldId", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTldLanguageDataByTldId(long lTldId) {
            object[] results = this.Invoke("GetTldLanguageDataByTldId", new object[] {
                        lTldId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTldLanguageDataByTldIdAsync(long lTldId) {
            this.GetTldLanguageDataByTldIdAsync(lTldId, null);
        }
        
        /// <remarks/>
        public void GetTldLanguageDataByTldIdAsync(long lTldId, object userState) {
            if ((this.GetTldLanguageDataByTldIdOperationCompleted == null)) {
                this.GetTldLanguageDataByTldIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTldLanguageDataByTldIdOperationCompleted);
            }
            this.InvokeAsync("GetTldLanguageDataByTldId", new object[] {
                        lTldId}, this.GetTldLanguageDataByTldIdOperationCompleted, userState);
        }
        
        private void OnGetTldLanguageDataByTldIdOperationCompleted(object arg) {
            if ((this.GetTldLanguageDataByTldIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTldLanguageDataByTldIdCompleted(this, new GetTldLanguageDataByTldIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/ReloadDomainsDataCache", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReloadDomainsDataCache(string sEncryptedPassword) {
            object[] results = this.Invoke("ReloadDomainsDataCache", new object[] {
                        sEncryptedPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReloadDomainsDataCacheAsync(string sEncryptedPassword) {
            this.ReloadDomainsDataCacheAsync(sEncryptedPassword, null);
        }
        
        /// <remarks/>
        public void ReloadDomainsDataCacheAsync(string sEncryptedPassword, object userState) {
            if ((this.ReloadDomainsDataCacheOperationCompleted == null)) {
                this.ReloadDomainsDataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReloadDomainsDataCacheOperationCompleted);
            }
            this.InvokeAsync("ReloadDomainsDataCache", new object[] {
                        sEncryptedPassword}, this.ReloadDomainsDataCacheOperationCompleted, userState);
        }
        
        private void OnReloadDomainsDataCacheOperationCompleted(object arg) {
            if ((this.ReloadDomainsDataCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReloadDomainsDataCacheCompleted(this, new ReloadDomainsDataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DomainsDataCacheWebSvc/MonitorDomainsDataCache", RequestNamespace="urn:DomainsDataCacheWebSvc", ResponseNamespace="urn:DomainsDataCacheWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MonitorDomainsDataCache() {
            object[] results = this.Invoke("MonitorDomainsDataCache", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MonitorDomainsDataCacheAsync() {
            this.MonitorDomainsDataCacheAsync(null);
        }
        
        /// <remarks/>
        public void MonitorDomainsDataCacheAsync(object userState) {
            if ((this.MonitorDomainsDataCacheOperationCompleted == null)) {
                this.MonitorDomainsDataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMonitorDomainsDataCacheOperationCompleted);
            }
            this.InvokeAsync("MonitorDomainsDataCache", new object[0], this.MonitorDomainsDataCacheOperationCompleted, userState);
        }
        
        private void OnMonitorDomainsDataCacheOperationCompleted(object arg) {
            if ((this.MonitorDomainsDataCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MonitorDomainsDataCacheCompleted(this, new MonitorDomainsDataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllTldDataCompletedEventHandler(object sender, GetAllTldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldIdCompletedEventHandler(object sender, GetTldIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldDataByTldIdCompletedEventHandler(object sender, GetTldDataByTldIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldDataByTldIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldDataByTldIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldNameCompletedEventHandler(object sender, GetTldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRedemptionGracePeriodCompletedEventHandler(object sender, GetRedemptionGracePeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRedemptionGracePeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRedemptionGracePeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRegistrationGracePeriodCompletedEventHandler(object sender, GetRegistrationGracePeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationGracePeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationGracePeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllDomainInfoStatusDataCompletedEventHandler(object sender, GetAllDomainInfoStatusDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDomainInfoStatusDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDomainInfoStatusDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDomainInfoStatusDataByStatusCompletedEventHandler(object sender, GetDomainInfoStatusDataByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainInfoStatusDataByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainInfoStatusDataByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllEMCDataCompletedEventHandler(object sender, GetAllEMCDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEMCDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEMCDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEMCDataByIdCompletedEventHandler(object sender, GetEMCDataByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMCDataByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMCDataByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllHubDataCompletedEventHandler(object sender, GetAllHubDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllHubDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllHubDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHubDataByTldIdAndInternalRegistrarIdCompletedEventHandler(object sender, GetHubDataByTldIdAndInternalRegistrarIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHubDataByTldIdAndInternalRegistrarIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHubDataByTldIdAndInternalRegistrarIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHubDataByTldIdCompletedEventHandler(object sender, GetHubDataByTldIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHubDataByTldIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHubDataByTldIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldmlByTldIdCompletedEventHandler(object sender, GetTldmlByTldIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldmlByTldIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldmlByTldIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldmlByTldNameCompletedEventHandler(object sender, GetTldmlByTldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldmlByTldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldmlByTldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllTldlanguageDataCompletedEventHandler(object sender, GetAllTldlanguageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTldlanguageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTldlanguageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldLanguageDataByTldCompletedEventHandler(object sender, GetTldLanguageDataByTldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldLanguageDataByTldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldLanguageDataByTldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTldLanguageDataByTldIdCompletedEventHandler(object sender, GetTldLanguageDataByTldIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTldLanguageDataByTldIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTldLanguageDataByTldIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReloadDomainsDataCacheCompletedEventHandler(object sender, ReloadDomainsDataCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReloadDomainsDataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReloadDomainsDataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MonitorDomainsDataCacheCompletedEventHandler(object sender, MonitorDomainsDataCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MonitorDomainsDataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MonitorDomainsDataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591