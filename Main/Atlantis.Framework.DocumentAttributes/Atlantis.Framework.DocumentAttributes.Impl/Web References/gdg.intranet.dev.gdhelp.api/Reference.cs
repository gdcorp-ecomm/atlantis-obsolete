//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DocumentAttributes.Impl.gdg.intranet.dev.gdhelp.api
{


	/// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DocumentServiceBinding", Namespace="HCDocument")]
    public partial class DocumentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback documentOperationCompleted;
        
        private System.Threading.SendOrPostCallback documentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback documentAttributesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DocumentService() {
            this.Url = global::Atlantis.Framework.DocumentAttributes.Impl.Properties.Settings.Default.Atlantis_Framework_DocumentAttributes_Impl_gdg_intranet_dev_gdhelp_api_DocumentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event documentCompletedEventHandler documentCompleted;
        
        /// <remarks/>
        public event documentListCompletedEventHandler documentListCompleted;
        
        /// <remarks/>
        public event documentAttributesCompletedEventHandler documentAttributesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:HCDocument#document", RequestNamespace="HCDocument", ResponseNamespace="HCDocument")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string document(string xmlcmd) {
            object[] results = this.Invoke("document", new object[] {
                        xmlcmd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void documentAsync(string xmlcmd) {
            this.documentAsync(xmlcmd, null);
        }
        
        /// <remarks/>
        public void documentAsync(string xmlcmd, object userState) {
            if ((this.documentOperationCompleted == null)) {
                this.documentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndocumentOperationCompleted);
            }
            this.InvokeAsync("document", new object[] {
                        xmlcmd}, this.documentOperationCompleted, userState);
        }
        
        private void OndocumentOperationCompleted(object arg) {
            if ((this.documentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.documentCompleted(this, new documentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:HCDocument#document", RequestNamespace="HCDocument", ResponseNamespace="HCDocument")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string documentList(string request) {
            object[] results = this.Invoke("documentList", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void documentListAsync(string request) {
            this.documentListAsync(request, null);
        }
        
        /// <remarks/>
        public void documentListAsync(string request, object userState) {
            if ((this.documentListOperationCompleted == null)) {
                this.documentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndocumentListOperationCompleted);
            }
            this.InvokeAsync("documentList", new object[] {
                        request}, this.documentListOperationCompleted, userState);
        }
        
        private void OndocumentListOperationCompleted(object arg) {
            if ((this.documentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.documentListCompleted(this, new documentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:HCDocument#document", RequestNamespace="HCDocument", ResponseNamespace="HCDocument")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string documentAttributes(string xmlcmd) {
            object[] results = this.Invoke("documentAttributes", new object[] {
                        xmlcmd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void documentAttributesAsync(string xmlcmd) {
            this.documentAttributesAsync(xmlcmd, null);
        }
        
        /// <remarks/>
        public void documentAttributesAsync(string xmlcmd, object userState) {
            if ((this.documentAttributesOperationCompleted == null)) {
                this.documentAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndocumentAttributesOperationCompleted);
            }
            this.InvokeAsync("documentAttributes", new object[] {
                        xmlcmd}, this.documentAttributesOperationCompleted, userState);
        }
        
        private void OndocumentAttributesOperationCompleted(object arg) {
            if ((this.documentAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.documentAttributesCompleted(this, new documentAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void documentCompletedEventHandler(object sender, documentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class documentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal documentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void documentListCompletedEventHandler(object sender, documentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class documentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal documentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void documentAttributesCompletedEventHandler(object sender, documentAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class documentAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal documentAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591