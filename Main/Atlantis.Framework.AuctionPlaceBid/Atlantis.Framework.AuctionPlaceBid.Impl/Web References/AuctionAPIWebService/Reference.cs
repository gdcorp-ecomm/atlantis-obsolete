//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.AuctionPlaceBid.Impl.AuctionAPIWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="trpBiddingServiceSoap", Namespace="trpBiddingService")]
    public partial class trpBiddingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getServiceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceExternalBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmBidBulkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmBackorderBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBuyNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmBuyNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmBuyNowBulkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOffersOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceCounterOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmCounterOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceAcceptOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmAcceptOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidHistoryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public trpBiddingService() {
            this.Url = global::Atlantis.Framework.AuctionPlaceBid.Impl.Properties.Settings.Default.Atlantis_Framework_AuctionPlaceBid_Impl_AuctionAPIWebService_trpBiddingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getServiceStatusCompletedEventHandler getServiceStatusCompleted;
        
        /// <remarks/>
        public event ResetCacheCompletedEventHandler ResetCacheCompleted;
        
        /// <remarks/>
        public event GetAuctionInfoCompletedEventHandler GetAuctionInfoCompleted;
        
        /// <remarks/>
        public event GetBidInformationCompletedEventHandler GetBidInformationCompleted;
        
        /// <remarks/>
        public event PlaceExternalBidCompletedEventHandler PlaceExternalBidCompleted;
        
        /// <remarks/>
        public event PlaceBidCompletedEventHandler PlaceBidCompleted;
        
        /// <remarks/>
        public event ConfirmBidCompletedEventHandler ConfirmBidCompleted;
        
        /// <remarks/>
        public event ConfirmBidBulkCompletedEventHandler ConfirmBidBulkCompleted;
        
        /// <remarks/>
        public event ConfirmBackorderBidCompletedEventHandler ConfirmBackorderBidCompleted;
        
        /// <remarks/>
        public event PlaceBuyNowCompletedEventHandler PlaceBuyNowCompleted;
        
        /// <remarks/>
        public event ConfirmBuyNowCompletedEventHandler ConfirmBuyNowCompleted;
        
        /// <remarks/>
        public event ConfirmBuyNowBulkCompletedEventHandler ConfirmBuyNowBulkCompleted;
        
        /// <remarks/>
        public event GetOffersCompletedEventHandler GetOffersCompleted;
        
        /// <remarks/>
        public event PlaceCounterOfferCompletedEventHandler PlaceCounterOfferCompleted;
        
        /// <remarks/>
        public event ConfirmCounterOfferCompletedEventHandler ConfirmCounterOfferCompleted;
        
        /// <remarks/>
        public event PlaceAcceptOfferCompletedEventHandler PlaceAcceptOfferCompleted;
        
        /// <remarks/>
        public event ConfirmAcceptOfferCompletedEventHandler ConfirmAcceptOfferCompleted;
        
        /// <remarks/>
        public event GetBidHistoryCompletedEventHandler GetBidHistoryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/getServiceStatus", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getServiceStatus() {
            object[] results = this.Invoke("getServiceStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceStatusAsync() {
            this.getServiceStatusAsync(null);
        }
        
        /// <remarks/>
        public void getServiceStatusAsync(object userState) {
            if ((this.getServiceStatusOperationCompleted == null)) {
                this.getServiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceStatusOperationCompleted);
            }
            this.InvokeAsync("getServiceStatus", new object[0], this.getServiceStatusOperationCompleted, userState);
        }
        
        private void OngetServiceStatusOperationCompleted(object arg) {
            if ((this.getServiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceStatusCompleted(this, new getServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ResetCache", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetCache() {
            object[] results = this.Invoke("ResetCache", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetCacheAsync() {
            this.ResetCacheAsync(null);
        }
        
        /// <remarks/>
        public void ResetCacheAsync(object userState) {
            if ((this.ResetCacheOperationCompleted == null)) {
                this.ResetCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetCacheOperationCompleted);
            }
            this.InvokeAsync("ResetCache", new object[0], this.ResetCacheOperationCompleted, userState);
        }
        
        private void OnResetCacheOperationCompleted(object arg) {
            if ((this.ResetCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetCacheCompleted(this, new ResetCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/GetAuctionInfo", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionInfo(string sDomainName) {
            object[] results = this.Invoke("GetAuctionInfo", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionInfoAsync(string sDomainName) {
            this.GetAuctionInfoAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void GetAuctionInfoAsync(string sDomainName, object userState) {
            if ((this.GetAuctionInfoOperationCompleted == null)) {
                this.GetAuctionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionInfoOperationCompleted);
            }
            this.InvokeAsync("GetAuctionInfo", new object[] {
                        sDomainName}, this.GetAuctionInfoOperationCompleted, userState);
        }
        
        private void OnGetAuctionInfoOperationCompleted(object arg) {
            if ((this.GetAuctionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionInfoCompleted(this, new GetAuctionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/GetBidInformation", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBidInformation(string sDomainName) {
            object[] results = this.Invoke("GetBidInformation", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidInformationAsync(string sDomainName) {
            this.GetBidInformationAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void GetBidInformationAsync(string sDomainName, object userState) {
            if ((this.GetBidInformationOperationCompleted == null)) {
                this.GetBidInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidInformationOperationCompleted);
            }
            this.InvokeAsync("GetBidInformation", new object[] {
                        sDomainName}, this.GetBidInformationOperationCompleted, userState);
        }
        
        private void OnGetBidInformationOperationCompleted(object arg) {
            if ((this.GetBidInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidInformationCompleted(this, new GetBidInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/PlaceExternalBid", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceExternalBid(string sDomain, string sBidderShopperID, string sBidAmount) {
            object[] results = this.Invoke("PlaceExternalBid", new object[] {
                        sDomain,
                        sBidderShopperID,
                        sBidAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceExternalBidAsync(string sDomain, string sBidderShopperID, string sBidAmount) {
            this.PlaceExternalBidAsync(sDomain, sBidderShopperID, sBidAmount, null);
        }
        
        /// <remarks/>
        public void PlaceExternalBidAsync(string sDomain, string sBidderShopperID, string sBidAmount, object userState) {
            if ((this.PlaceExternalBidOperationCompleted == null)) {
                this.PlaceExternalBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceExternalBidOperationCompleted);
            }
            this.InvokeAsync("PlaceExternalBid", new object[] {
                        sDomain,
                        sBidderShopperID,
                        sBidAmount}, this.PlaceExternalBidOperationCompleted, userState);
        }
        
        private void OnPlaceExternalBidOperationCompleted(object arg) {
            if ((this.PlaceExternalBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceExternalBidCompleted(this, new PlaceExternalBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/PlaceBid", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBid(string sMemberItemID, string sBidderShopperID, string sBidAmount) {
            object[] results = this.Invoke("PlaceBid", new object[] {
                        sMemberItemID,
                        sBidderShopperID,
                        sBidAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBidAsync(string sMemberItemID, string sBidderShopperID, string sBidAmount) {
            this.PlaceBidAsync(sMemberItemID, sBidderShopperID, sBidAmount, null);
        }
        
        /// <remarks/>
        public void PlaceBidAsync(string sMemberItemID, string sBidderShopperID, string sBidAmount, object userState) {
            if ((this.PlaceBidOperationCompleted == null)) {
                this.PlaceBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBidOperationCompleted);
            }
            this.InvokeAsync("PlaceBid", new object[] {
                        sMemberItemID,
                        sBidderShopperID,
                        sBidAmount}, this.PlaceBidOperationCompleted, userState);
        }
        
        private void OnPlaceBidOperationCompleted(object arg) {
            if ((this.PlaceBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBidCompleted(this, new PlaceBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmBid", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmBid(int sourceSystemID, string sMemberItemID, string sBidderShopperID, string sBidAmount, string sComments) {
            object[] results = this.Invoke("ConfirmBid", new object[] {
                        sourceSystemID,
                        sMemberItemID,
                        sBidderShopperID,
                        sBidAmount,
                        sComments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmBidAsync(int sourceSystemID, string sMemberItemID, string sBidderShopperID, string sBidAmount, string sComments) {
            this.ConfirmBidAsync(sourceSystemID, sMemberItemID, sBidderShopperID, sBidAmount, sComments, null);
        }
        
        /// <remarks/>
        public void ConfirmBidAsync(int sourceSystemID, string sMemberItemID, string sBidderShopperID, string sBidAmount, string sComments, object userState) {
            if ((this.ConfirmBidOperationCompleted == null)) {
                this.ConfirmBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmBidOperationCompleted);
            }
            this.InvokeAsync("ConfirmBid", new object[] {
                        sourceSystemID,
                        sMemberItemID,
                        sBidderShopperID,
                        sBidAmount,
                        sComments}, this.ConfirmBidOperationCompleted, userState);
        }
        
        private void OnConfirmBidOperationCompleted(object arg) {
            if ((this.ConfirmBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmBidCompleted(this, new ConfirmBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmBidBulk", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmBidBulk(string xmlInput) {
            object[] results = this.Invoke("ConfirmBidBulk", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmBidBulkAsync(string xmlInput) {
            this.ConfirmBidBulkAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void ConfirmBidBulkAsync(string xmlInput, object userState) {
            if ((this.ConfirmBidBulkOperationCompleted == null)) {
                this.ConfirmBidBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmBidBulkOperationCompleted);
            }
            this.InvokeAsync("ConfirmBidBulk", new object[] {
                        xmlInput}, this.ConfirmBidBulkOperationCompleted, userState);
        }
        
        private void OnConfirmBidBulkOperationCompleted(object arg) {
            if ((this.ConfirmBidBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmBidBulkCompleted(this, new ConfirmBidBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmBackorderBid", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmBackorderBid(string sMemberItemID, string sBidderShopperID, string sBidAmount, string sBackorderTypeID, string sBackorderId) {
            object[] results = this.Invoke("ConfirmBackorderBid", new object[] {
                        sMemberItemID,
                        sBidderShopperID,
                        sBidAmount,
                        sBackorderTypeID,
                        sBackorderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmBackorderBidAsync(string sMemberItemID, string sBidderShopperID, string sBidAmount, string sBackorderTypeID, string sBackorderId) {
            this.ConfirmBackorderBidAsync(sMemberItemID, sBidderShopperID, sBidAmount, sBackorderTypeID, sBackorderId, null);
        }
        
        /// <remarks/>
        public void ConfirmBackorderBidAsync(string sMemberItemID, string sBidderShopperID, string sBidAmount, string sBackorderTypeID, string sBackorderId, object userState) {
            if ((this.ConfirmBackorderBidOperationCompleted == null)) {
                this.ConfirmBackorderBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmBackorderBidOperationCompleted);
            }
            this.InvokeAsync("ConfirmBackorderBid", new object[] {
                        sMemberItemID,
                        sBidderShopperID,
                        sBidAmount,
                        sBackorderTypeID,
                        sBackorderId}, this.ConfirmBackorderBidOperationCompleted, userState);
        }
        
        private void OnConfirmBackorderBidOperationCompleted(object arg) {
            if ((this.ConfirmBackorderBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmBackorderBidCompleted(this, new ConfirmBackorderBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/PlaceBuyNow", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBuyNow(string sMemberItemID, string sBidderShopperID) {
            object[] results = this.Invoke("PlaceBuyNow", new object[] {
                        sMemberItemID,
                        sBidderShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBuyNowAsync(string sMemberItemID, string sBidderShopperID) {
            this.PlaceBuyNowAsync(sMemberItemID, sBidderShopperID, null);
        }
        
        /// <remarks/>
        public void PlaceBuyNowAsync(string sMemberItemID, string sBidderShopperID, object userState) {
            if ((this.PlaceBuyNowOperationCompleted == null)) {
                this.PlaceBuyNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBuyNowOperationCompleted);
            }
            this.InvokeAsync("PlaceBuyNow", new object[] {
                        sMemberItemID,
                        sBidderShopperID}, this.PlaceBuyNowOperationCompleted, userState);
        }
        
        private void OnPlaceBuyNowOperationCompleted(object arg) {
            if ((this.PlaceBuyNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBuyNowCompleted(this, new PlaceBuyNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmBuyNow", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmBuyNow(string sMemberItemID, string sBidderShopperID, string sComments) {
            object[] results = this.Invoke("ConfirmBuyNow", new object[] {
                        sMemberItemID,
                        sBidderShopperID,
                        sComments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmBuyNowAsync(string sMemberItemID, string sBidderShopperID, string sComments) {
            this.ConfirmBuyNowAsync(sMemberItemID, sBidderShopperID, sComments, null);
        }
        
        /// <remarks/>
        public void ConfirmBuyNowAsync(string sMemberItemID, string sBidderShopperID, string sComments, object userState) {
            if ((this.ConfirmBuyNowOperationCompleted == null)) {
                this.ConfirmBuyNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmBuyNowOperationCompleted);
            }
            this.InvokeAsync("ConfirmBuyNow", new object[] {
                        sMemberItemID,
                        sBidderShopperID,
                        sComments}, this.ConfirmBuyNowOperationCompleted, userState);
        }
        
        private void OnConfirmBuyNowOperationCompleted(object arg) {
            if ((this.ConfirmBuyNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmBuyNowCompleted(this, new ConfirmBuyNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmBuyNowBulk", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmBuyNowBulk(string xmlInput) {
            object[] results = this.Invoke("ConfirmBuyNowBulk", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmBuyNowBulkAsync(string xmlInput) {
            this.ConfirmBuyNowBulkAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void ConfirmBuyNowBulkAsync(string xmlInput, object userState) {
            if ((this.ConfirmBuyNowBulkOperationCompleted == null)) {
                this.ConfirmBuyNowBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmBuyNowBulkOperationCompleted);
            }
            this.InvokeAsync("ConfirmBuyNowBulk", new object[] {
                        xmlInput}, this.ConfirmBuyNowBulkOperationCompleted, userState);
        }
        
        private void OnConfirmBuyNowBulkOperationCompleted(object arg) {
            if ((this.ConfirmBuyNowBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmBuyNowBulkCompleted(this, new ConfirmBuyNowBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/GetOffers", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOffers(string sMemberItemID, string sShopperID) {
            object[] results = this.Invoke("GetOffers", new object[] {
                        sMemberItemID,
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOffersAsync(string sMemberItemID, string sShopperID) {
            this.GetOffersAsync(sMemberItemID, sShopperID, null);
        }
        
        /// <remarks/>
        public void GetOffersAsync(string sMemberItemID, string sShopperID, object userState) {
            if ((this.GetOffersOperationCompleted == null)) {
                this.GetOffersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOffersOperationCompleted);
            }
            this.InvokeAsync("GetOffers", new object[] {
                        sMemberItemID,
                        sShopperID}, this.GetOffersOperationCompleted, userState);
        }
        
        private void OnGetOffersOperationCompleted(object arg) {
            if ((this.GetOffersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOffersCompleted(this, new GetOffersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/PlaceCounterOffer", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceCounterOffer(string sMemberItemID, string sItemBidID, string sShopperID, string sBidAmount, string sComments) {
            object[] results = this.Invoke("PlaceCounterOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID,
                        sBidAmount,
                        sComments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceCounterOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID, string sBidAmount, string sComments) {
            this.PlaceCounterOfferAsync(sMemberItemID, sItemBidID, sShopperID, sBidAmount, sComments, null);
        }
        
        /// <remarks/>
        public void PlaceCounterOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID, string sBidAmount, string sComments, object userState) {
            if ((this.PlaceCounterOfferOperationCompleted == null)) {
                this.PlaceCounterOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceCounterOfferOperationCompleted);
            }
            this.InvokeAsync("PlaceCounterOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID,
                        sBidAmount,
                        sComments}, this.PlaceCounterOfferOperationCompleted, userState);
        }
        
        private void OnPlaceCounterOfferOperationCompleted(object arg) {
            if ((this.PlaceCounterOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceCounterOfferCompleted(this, new PlaceCounterOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmCounterOffer", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmCounterOffer(string sMemberItemID, string sItemBidID, string sShopperID, string sBidAmount, string sComments) {
            object[] results = this.Invoke("ConfirmCounterOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID,
                        sBidAmount,
                        sComments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmCounterOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID, string sBidAmount, string sComments) {
            this.ConfirmCounterOfferAsync(sMemberItemID, sItemBidID, sShopperID, sBidAmount, sComments, null);
        }
        
        /// <remarks/>
        public void ConfirmCounterOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID, string sBidAmount, string sComments, object userState) {
            if ((this.ConfirmCounterOfferOperationCompleted == null)) {
                this.ConfirmCounterOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmCounterOfferOperationCompleted);
            }
            this.InvokeAsync("ConfirmCounterOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID,
                        sBidAmount,
                        sComments}, this.ConfirmCounterOfferOperationCompleted, userState);
        }
        
        private void OnConfirmCounterOfferOperationCompleted(object arg) {
            if ((this.ConfirmCounterOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmCounterOfferCompleted(this, new ConfirmCounterOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/PlaceAcceptOffer", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceAcceptOffer(string sMemberItemID, string sItemBidID, string sShopperID) {
            object[] results = this.Invoke("PlaceAcceptOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceAcceptOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID) {
            this.PlaceAcceptOfferAsync(sMemberItemID, sItemBidID, sShopperID, null);
        }
        
        /// <remarks/>
        public void PlaceAcceptOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID, object userState) {
            if ((this.PlaceAcceptOfferOperationCompleted == null)) {
                this.PlaceAcceptOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceAcceptOfferOperationCompleted);
            }
            this.InvokeAsync("PlaceAcceptOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID}, this.PlaceAcceptOfferOperationCompleted, userState);
        }
        
        private void OnPlaceAcceptOfferOperationCompleted(object arg) {
            if ((this.PlaceAcceptOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceAcceptOfferCompleted(this, new PlaceAcceptOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/ConfirmAcceptOffer", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmAcceptOffer(string sMemberItemID, string sItemBidID, string sShopperID) {
            object[] results = this.Invoke("ConfirmAcceptOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmAcceptOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID) {
            this.ConfirmAcceptOfferAsync(sMemberItemID, sItemBidID, sShopperID, null);
        }
        
        /// <remarks/>
        public void ConfirmAcceptOfferAsync(string sMemberItemID, string sItemBidID, string sShopperID, object userState) {
            if ((this.ConfirmAcceptOfferOperationCompleted == null)) {
                this.ConfirmAcceptOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmAcceptOfferOperationCompleted);
            }
            this.InvokeAsync("ConfirmAcceptOffer", new object[] {
                        sMemberItemID,
                        sItemBidID,
                        sShopperID}, this.ConfirmAcceptOfferOperationCompleted, userState);
        }
        
        private void OnConfirmAcceptOfferOperationCompleted(object arg) {
            if ((this.ConfirmAcceptOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmAcceptOfferCompleted(this, new ConfirmAcceptOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpBiddingService/GetBidHistory", RequestNamespace="trpBiddingService", ResponseNamespace="trpBiddingService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBidHistory(string xmlInput) {
            object[] results = this.Invoke("GetBidHistory", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidHistoryAsync(string xmlInput) {
            this.GetBidHistoryAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetBidHistoryAsync(string xmlInput, object userState) {
            if ((this.GetBidHistoryOperationCompleted == null)) {
                this.GetBidHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidHistoryOperationCompleted);
            }
            this.InvokeAsync("GetBidHistory", new object[] {
                        xmlInput}, this.GetBidHistoryOperationCompleted, userState);
        }
        
        private void OnGetBidHistoryOperationCompleted(object arg) {
            if ((this.GetBidHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidHistoryCompleted(this, new GetBidHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceStatusCompletedEventHandler(object sender, getServiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResetCacheCompletedEventHandler(object sender, ResetCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionInfoCompletedEventHandler(object sender, GetAuctionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBidInformationCompletedEventHandler(object sender, GetBidInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceExternalBidCompletedEventHandler(object sender, PlaceExternalBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceExternalBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceExternalBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceBidCompletedEventHandler(object sender, PlaceBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmBidCompletedEventHandler(object sender, ConfirmBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmBidBulkCompletedEventHandler(object sender, ConfirmBidBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmBidBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmBidBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmBackorderBidCompletedEventHandler(object sender, ConfirmBackorderBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmBackorderBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmBackorderBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceBuyNowCompletedEventHandler(object sender, PlaceBuyNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBuyNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBuyNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmBuyNowCompletedEventHandler(object sender, ConfirmBuyNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmBuyNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmBuyNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmBuyNowBulkCompletedEventHandler(object sender, ConfirmBuyNowBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmBuyNowBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmBuyNowBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOffersCompletedEventHandler(object sender, GetOffersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOffersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOffersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceCounterOfferCompletedEventHandler(object sender, PlaceCounterOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceCounterOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceCounterOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmCounterOfferCompletedEventHandler(object sender, ConfirmCounterOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmCounterOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmCounterOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceAcceptOfferCompletedEventHandler(object sender, PlaceAcceptOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceAcceptOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceAcceptOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmAcceptOfferCompletedEventHandler(object sender, ConfirmAcceptOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmAcceptOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmAcceptOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBidHistoryCompletedEventHandler(object sender, GetBidHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591