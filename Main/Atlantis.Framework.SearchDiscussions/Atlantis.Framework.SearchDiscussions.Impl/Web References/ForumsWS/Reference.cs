//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.SearchDiscussions.Impl.ForumsWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdministrationSoap", Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class Administration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateForumNoOrionAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOtherForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGoDaddyForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWSTForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWSTForumUsingProjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumByUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumByApplicationAndProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumByOrionAccountUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForumSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForumStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForumCssResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForumWSTResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserVisitCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEMailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEMailAddressByForumUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAuthenticationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserByForumUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecentActivityCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsUnreadByAdminCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUsersPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUsersPageSinceDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumAdminUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUsersByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUsersPageByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserByForumIdAndLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewGoDaddyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewOrUpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToForumFromGoDaddyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForumUserRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumUserRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumUserAutoPostOnOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumUserUserProfileIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumUserUserStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveForumUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteForumUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DenyForumUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevokeForumUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserByUserProfileIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserProfileIdByForumUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumTopLevelCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumSubCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnouncementCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumCategoriesWithParentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReorderSpecialCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementCategoryOrderNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecrementCategoryOrderNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewThreadOperationCompleted;
        
        private ForumHeader forumHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXThreadsFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXAnnouncementThreadsFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetStickyThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFeatureThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetThreadMarkAsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkAllAsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementThreadViewCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetThreadPublishStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCommentViewedByAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommentBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedCommentsByCommentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXCommentsFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastPageOfCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXCommentsFromYByStatusIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentApprovedCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCommentPublishStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentReviewByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommentReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovePostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXCommentReviewsFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentReviewCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMessageStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXMessageViewFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageViewByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasReachMessageLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedDiscussionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXDiscussionsFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXDiscussionsFromY_AdminUnreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextXNewDiscussionsFromYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumDiscussionCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisteredDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnusedDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsForumActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogForumApplicationExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncryptUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncryptPasswordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptPasswordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateWSTAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddForumUserToReceiveEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveForumUserToReceiveEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserToReceiveEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUserThreadsWithEMailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendThreadEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUsersEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumUsersEMailEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThreadCategoryTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterPageLayoutByForumIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumStyleSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNavigationUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiscussionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiscussionsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDiscussionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturedDiscussionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeToADiscussionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnSubscribeToADiscussionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEmailSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewEmailSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmailSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailSubscriberViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDiscussionLastViewDateOneWayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailSubscribedDiscussionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteForumAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddForumAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertForumSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForumSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteForumSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionViewsByDiscussionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Administration() {
            this.Url = global::Atlantis.Framework.SearchDiscussions.Impl.Properties.Settings.Default.Atlantis_Framework_SearchDiscussions_Impl_ForumsWS_Administration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ForumHeader ForumHeaderValue {
            get {
                return this.forumHeaderValueField;
            }
            set {
                this.forumHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event CreateForumNoOrionAccountCompletedEventHandler CreateForumNoOrionAccountCompleted;
        
        /// <remarks/>
        public event CreateOtherForumCompletedEventHandler CreateOtherForumCompleted;
        
        /// <remarks/>
        public event CreateGoDaddyForumCompletedEventHandler CreateGoDaddyForumCompleted;
        
        /// <remarks/>
        public event CreateWSTForumCompletedEventHandler CreateWSTForumCompleted;
        
        /// <remarks/>
        public event CreateWSTForumUsingProjectIdCompletedEventHandler CreateWSTForumUsingProjectIdCompleted;
        
        /// <remarks/>
        public event GetForumByUrlCompletedEventHandler GetForumByUrlCompleted;
        
        /// <remarks/>
        public event GetForumByIdCompletedEventHandler GetForumByIdCompleted;
        
        /// <remarks/>
        public event GetForumByApplicationAndProfileCompletedEventHandler GetForumByApplicationAndProfileCompleted;
        
        /// <remarks/>
        public event GetForumCompletedEventHandler GetForumCompleted;
        
        /// <remarks/>
        public event UpdateForumCompletedEventHandler UpdateForumCompleted;
        
        /// <remarks/>
        public event GetForumByOrionAccountUidCompletedEventHandler GetForumByOrionAccountUidCompleted;
        
        /// <remarks/>
        public event GetForumSettingsCompletedEventHandler GetForumSettingsCompleted;
        
        /// <remarks/>
        public event SetForumSettingsCompletedEventHandler SetForumSettingsCompleted;
        
        /// <remarks/>
        public event SetForumStatusCompletedEventHandler SetForumStatusCompleted;
        
        /// <remarks/>
        public event DisableForumCompletedEventHandler DisableForumCompleted;
        
        /// <remarks/>
        public event EnableForumCompletedEventHandler EnableForumCompleted;
        
        /// <remarks/>
        public event SetForumCssResourcesCompletedEventHandler SetForumCssResourcesCompleted;
        
        /// <remarks/>
        public event SetForumWSTResourcesCompletedEventHandler SetForumWSTResourcesCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetForumUserStatisticsCompletedEventHandler GetForumUserStatisticsCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event UpdateUserVisitCountCompletedEventHandler UpdateUserVisitCountCompleted;
        
        /// <remarks/>
        public event UpdateEMailAddressCompletedEventHandler UpdateEMailAddressCompleted;
        
        /// <remarks/>
        public event UpdateEMailAddressByForumUserCompletedEventHandler UpdateEMailAddressByForumUserCompleted;
        
        /// <remarks/>
        public event UpdateUserAuthenticationDetailsCompletedEventHandler UpdateUserAuthenticationDetailsCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        public event RenameUserNameCompletedEventHandler RenameUserNameCompleted;
        
        /// <remarks/>
        public event GetForumUserCompletedEventHandler GetForumUserCompleted;
        
        /// <remarks/>
        public event GetForumUserByIdCompletedEventHandler GetForumUserByIdCompleted;
        
        /// <remarks/>
        public event GetForumUserByForumUserIdCompletedEventHandler GetForumUserByForumUserIdCompleted;
        
        /// <remarks/>
        public event GetForumUsersCompletedEventHandler GetForumUsersCompleted;
        
        /// <remarks/>
        public event GetForumUserCountsCompletedEventHandler GetForumUserCountsCompleted;
        
        /// <remarks/>
        public event GetRecentActivityCountsCompletedEventHandler GetRecentActivityCountsCompleted;
        
        /// <remarks/>
        public event GetCommentsUnreadByAdminCountCompletedEventHandler GetCommentsUnreadByAdminCountCompleted;
        
        /// <remarks/>
        public event GetForumUserCountCompletedEventHandler GetForumUserCountCompleted;
        
        /// <remarks/>
        public event GetForumUsersPageCompletedEventHandler GetForumUsersPageCompleted;
        
        /// <remarks/>
        public event GetForumUsersPageSinceDateCompletedEventHandler GetForumUsersPageSinceDateCompleted;
        
        /// <remarks/>
        public event GetForumAdminUsersCompletedEventHandler GetForumAdminUsersCompleted;
        
        /// <remarks/>
        public event GetForumUsersByStatusCompletedEventHandler GetForumUsersByStatusCompleted;
        
        /// <remarks/>
        public event GetForumUsersPageByStatusCompletedEventHandler GetForumUsersPageByStatusCompleted;
        
        /// <remarks/>
        public event GetForumUserIdCompletedEventHandler GetForumUserIdCompleted;
        
        /// <remarks/>
        public event GetForumUserByForumIdAndLoginNameCompletedEventHandler GetForumUserByForumIdAndLoginNameCompleted;
        
        /// <remarks/>
        public event GetUserByUserNameCompletedEventHandler GetUserByUserNameCompleted;
        
        /// <remarks/>
        public event AddNewUserCompletedEventHandler AddNewUserCompleted;
        
        /// <remarks/>
        public event AddNewGoDaddyUserCompletedEventHandler AddNewGoDaddyUserCompleted;
        
        /// <remarks/>
        public event AddNewOrUpdateUserCompletedEventHandler AddNewOrUpdateUserCompleted;
        
        /// <remarks/>
        public event AddUserToForumCompletedEventHandler AddUserToForumCompleted;
        
        /// <remarks/>
        public event AddUserToForumFromGoDaddyCompletedEventHandler AddUserToForumFromGoDaddyCompleted;
        
        /// <remarks/>
        public event SetForumUserRoleCompletedEventHandler SetForumUserRoleCompleted;
        
        /// <remarks/>
        public event UpdateForumUserRoleCompletedEventHandler UpdateForumUserRoleCompleted;
        
        /// <remarks/>
        public event UpdateForumUserAutoPostOnCompletedEventHandler UpdateForumUserAutoPostOnCompleted;
        
        /// <remarks/>
        public event UpdateForumUserUserProfileIdCompletedEventHandler UpdateForumUserUserProfileIdCompleted;
        
        /// <remarks/>
        public event UpdateForumUserUserStatusCompletedEventHandler UpdateForumUserUserStatusCompleted;
        
        /// <remarks/>
        public event ApproveForumUserCompletedEventHandler ApproveForumUserCompleted;
        
        /// <remarks/>
        public event DeleteForumUserCompletedEventHandler DeleteForumUserCompleted;
        
        /// <remarks/>
        public event DenyForumUserCompletedEventHandler DenyForumUserCompleted;
        
        /// <remarks/>
        public event RevokeForumUserCompletedEventHandler RevokeForumUserCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event GetForumUserByUserProfileIdCompletedEventHandler GetForumUserByUserProfileIdCompleted;
        
        /// <remarks/>
        public event GetUserProfileIdByForumUserIdCompletedEventHandler GetUserProfileIdByForumUserIdCompleted;
        
        /// <remarks/>
        public event GetCategoryCompletedEventHandler GetCategoryCompleted;
        
        /// <remarks/>
        public event GetForumCategoriesCompletedEventHandler GetForumCategoriesCompleted;
        
        /// <remarks/>
        public event GetForumTopLevelCategoriesCompletedEventHandler GetForumTopLevelCategoriesCompleted;
        
        /// <remarks/>
        public event GetForumSubCategoriesCompletedEventHandler GetForumSubCategoriesCompleted;
        
        /// <remarks/>
        public event GetAnnouncementCategoriesCompletedEventHandler GetAnnouncementCategoriesCompleted;
        
        /// <remarks/>
        public event UpdateForumCategoriesCompletedEventHandler UpdateForumCategoriesCompleted;
        
        /// <remarks/>
        public event UpdateForumCategoriesWithParentCompletedEventHandler UpdateForumCategoriesWithParentCompleted;
        
        /// <remarks/>
        public event ReorderSpecialCategoriesCompletedEventHandler ReorderSpecialCategoriesCompleted;
        
        /// <remarks/>
        public event AddNewCategoryCompletedEventHandler AddNewCategoryCompleted;
        
        /// <remarks/>
        public event UpdateCategoryCompletedEventHandler UpdateCategoryCompleted;
        
        /// <remarks/>
        public event DeleteCategoryCompletedEventHandler DeleteCategoryCompleted;
        
        /// <remarks/>
        public event IncrementCategoryOrderNumberCompletedEventHandler IncrementCategoryOrderNumberCompleted;
        
        /// <remarks/>
        public event DecrementCategoryOrderNumberCompletedEventHandler DecrementCategoryOrderNumberCompleted;
        
        /// <remarks/>
        public event AddNewThreadCompletedEventHandler AddNewThreadCompleted;
        
        /// <remarks/>
        public event GetThreadCompletedEventHandler GetThreadCompleted;
        
        /// <remarks/>
        public event UpdateThreadCompletedEventHandler UpdateThreadCompleted;
        
        /// <remarks/>
        public event GetNextXThreadsFromYCompletedEventHandler GetNextXThreadsFromYCompleted;
        
        /// <remarks/>
        public event GetNextXAnnouncementThreadsFromYCompletedEventHandler GetNextXAnnouncementThreadsFromYCompleted;
        
        /// <remarks/>
        public event LockThreadCompletedEventHandler LockThreadCompleted;
        
        /// <remarks/>
        public event UnlockThreadCompletedEventHandler UnlockThreadCompleted;
        
        /// <remarks/>
        public event SetStickyThreadCompletedEventHandler SetStickyThreadCompleted;
        
        /// <remarks/>
        public event SetFeatureThreadCompletedEventHandler SetFeatureThreadCompleted;
        
        /// <remarks/>
        public event SetThreadMarkAsReadCompletedEventHandler SetThreadMarkAsReadCompleted;
        
        /// <remarks/>
        public event MarkAllAsReadCompletedEventHandler MarkAllAsReadCompleted;
        
        /// <remarks/>
        public event IncrementThreadViewCountCompletedEventHandler IncrementThreadViewCountCompleted;
        
        /// <remarks/>
        public event DeleteThreadCompletedEventHandler DeleteThreadCompleted;
        
        /// <remarks/>
        public event ApproveThreadCompletedEventHandler ApproveThreadCompleted;
        
        /// <remarks/>
        public event SetThreadPublishStatusCompletedEventHandler SetThreadPublishStatusCompleted;
        
        /// <remarks/>
        public event AddNewCommentCompletedEventHandler AddNewCommentCompleted;
        
        /// <remarks/>
        public event GetCommentCompletedEventHandler GetCommentCompleted;
        
        /// <remarks/>
        public event SetCommentViewedByAdminCompletedEventHandler SetCommentViewedByAdminCompleted;
        
        /// <remarks/>
        public event UpdateCommentCompletedEventHandler UpdateCommentCompleted;
        
        /// <remarks/>
        public event UpdateCommentBodyCompletedEventHandler UpdateCommentBodyCompleted;
        
        /// <remarks/>
        public event GetPagedCommentsCompletedEventHandler GetPagedCommentsCompleted;
        
        /// <remarks/>
        public event GetPagedCommentsByCommentIdCompletedEventHandler GetPagedCommentsByCommentIdCompleted;
        
        /// <remarks/>
        public event GetNextXCommentsFromYCompletedEventHandler GetNextXCommentsFromYCompleted;
        
        /// <remarks/>
        public event GetLastPageOfCommentsCompletedEventHandler GetLastPageOfCommentsCompleted;
        
        /// <remarks/>
        public event GetNextXCommentsFromYByStatusIdCompletedEventHandler GetNextXCommentsFromYByStatusIdCompleted;
        
        /// <remarks/>
        public event GetCommentCountsCompletedEventHandler GetCommentCountsCompleted;
        
        /// <remarks/>
        public event GetCommentApprovedCountCompletedEventHandler GetCommentApprovedCountCompleted;
        
        /// <remarks/>
        public event DeleteCommentCompletedEventHandler DeleteCommentCompleted;
        
        /// <remarks/>
        public event SetCommentPublishStatusCompletedEventHandler SetCommentPublishStatusCompleted;
        
        /// <remarks/>
        public event AddNewReviewCompletedEventHandler AddNewReviewCompleted;
        
        /// <remarks/>
        public event GetCommentReviewCompletedEventHandler GetCommentReviewCompleted;
        
        /// <remarks/>
        public event GetCommentReviewByIdCompletedEventHandler GetCommentReviewByIdCompleted;
        
        /// <remarks/>
        public event UpdateCommentReviewCompletedEventHandler UpdateCommentReviewCompleted;
        
        /// <remarks/>
        public event ApprovePostCompletedEventHandler ApprovePostCompleted;
        
        /// <remarks/>
        public event DeletePostCompletedEventHandler DeletePostCompleted;
        
        /// <remarks/>
        public event GetNextXCommentReviewsFromYCompletedEventHandler GetNextXCommentReviewsFromYCompleted;
        
        /// <remarks/>
        public event GetCommentReviewCountsCompletedEventHandler GetCommentReviewCountsCompleted;
        
        /// <remarks/>
        public event AddNewMessageCompletedEventHandler AddNewMessageCompleted;
        
        /// <remarks/>
        public event UpdateMessageCompletedEventHandler UpdateMessageCompleted;
        
        /// <remarks/>
        public event GetMessageCompletedEventHandler GetMessageCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event SetMessageStatusCompletedEventHandler SetMessageStatusCompleted;
        
        /// <remarks/>
        public event GetNextXMessageViewFromYCompletedEventHandler GetNextXMessageViewFromYCompleted;
        
        /// <remarks/>
        public event GetMessageViewByIdCompletedEventHandler GetMessageViewByIdCompleted;
        
        /// <remarks/>
        public event HasReachMessageLimitCompletedEventHandler HasReachMessageLimitCompleted;
        
        /// <remarks/>
        public event GetPagedDiscussionsCompletedEventHandler GetPagedDiscussionsCompleted;
        
        /// <remarks/>
        public event GetNextXDiscussionsFromYCompletedEventHandler GetNextXDiscussionsFromYCompleted;
        
        /// <remarks/>
        public event GetNextXDiscussionsFromY_AdminUnreadCompletedEventHandler GetNextXDiscussionsFromY_AdminUnreadCompleted;
        
        /// <remarks/>
        public event GetNextXNewDiscussionsFromYCompletedEventHandler GetNextXNewDiscussionsFromYCompleted;
        
        /// <remarks/>
        public event GetForumDiscussionCountCompletedEventHandler GetForumDiscussionCountCompleted;
        
        /// <remarks/>
        public event GetContentFilterCompletedEventHandler GetContentFilterCompleted;
        
        /// <remarks/>
        public event UpdateContentFilterCompletedEventHandler UpdateContentFilterCompleted;
        
        /// <remarks/>
        public event GetRegisteredDomainsCompletedEventHandler GetRegisteredDomainsCompleted;
        
        /// <remarks/>
        public event GetUnusedDomainsCompletedEventHandler GetUnusedDomainsCompleted;
        
        /// <remarks/>
        public event IsForumActiveCompletedEventHandler IsForumActiveCompleted;
        
        /// <remarks/>
        public event GetLoginDataCompletedEventHandler GetLoginDataCompleted;
        
        /// <remarks/>
        public event LogForumApplicationExceptionCompletedEventHandler LogForumApplicationExceptionCompleted;
        
        /// <remarks/>
        public event EncryptUserPasswordCompletedEventHandler EncryptUserPasswordCompleted;
        
        /// <remarks/>
        public event EncryptPasswordsCompletedEventHandler EncryptPasswordsCompleted;
        
        /// <remarks/>
        public event DecryptUserPasswordCompletedEventHandler DecryptUserPasswordCompleted;
        
        /// <remarks/>
        public event DecryptPasswordsCompletedEventHandler DecryptPasswordsCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event AuthenticateWSTAccountCompletedEventHandler AuthenticateWSTAccountCompleted;
        
        /// <remarks/>
        public event AddForumUserToReceiveEMailCompletedEventHandler AddForumUserToReceiveEMailCompleted;
        
        /// <remarks/>
        public event RemoveForumUserToReceiveEMailCompletedEventHandler RemoveForumUserToReceiveEMailCompleted;
        
        /// <remarks/>
        public event GetForumUserToReceiveEMailCompletedEventHandler GetForumUserToReceiveEMailCompleted;
        
        /// <remarks/>
        public event GetForumUserThreadsWithEMailStatusCompletedEventHandler GetForumUserThreadsWithEMailStatusCompleted;
        
        /// <remarks/>
        public event SendThreadEMailCompletedEventHandler SendThreadEMailCompleted;
        
        /// <remarks/>
        public event SendUsersEMailCompletedEventHandler SendUsersEMailCompleted;
        
        /// <remarks/>
        public event GetForumUsersEMailEnabledCompletedEventHandler GetForumUsersEMailEnabledCompleted;
        
        /// <remarks/>
        public event GetThreadCategoryTypeCompletedEventHandler GetThreadCategoryTypeCompleted;
        
        /// <remarks/>
        public event GetMasterPageLayoutByForumIdCompletedEventHandler GetMasterPageLayoutByForumIdCompleted;
        
        /// <remarks/>
        public event GetForumStyleSheetCompletedEventHandler GetForumStyleSheetCompleted;
        
        /// <remarks/>
        public event GetNavigationUrlCompletedEventHandler GetNavigationUrlCompleted;
        
        /// <remarks/>
        public event GetDiscussionCompletedEventHandler GetDiscussionCompleted;
        
        /// <remarks/>
        public event GetDiscussionsCountCompletedEventHandler GetDiscussionsCountCompleted;
        
        /// <remarks/>
        public event SearchCommentsCompletedEventHandler SearchCommentsCompleted;
        
        /// <remarks/>
        public event SearchDiscussionsCompletedEventHandler SearchDiscussionsCompleted;
        
        /// <remarks/>
        public event GetFeaturedDiscussionsCompletedEventHandler GetFeaturedDiscussionsCompleted;
        
        /// <remarks/>
        public event SubscribeToADiscussionCompletedEventHandler SubscribeToADiscussionCompleted;
        
        /// <remarks/>
        public event UnSubscribeToADiscussionCompletedEventHandler UnSubscribeToADiscussionCompleted;
        
        /// <remarks/>
        public event IsEmailSubscriberCompletedEventHandler IsEmailSubscriberCompleted;
        
        /// <remarks/>
        public event AddNewEmailSubscriberCompletedEventHandler AddNewEmailSubscriberCompleted;
        
        /// <remarks/>
        public event UpdateEmailSubscriberCompletedEventHandler UpdateEmailSubscriberCompleted;
        
        /// <remarks/>
        public event GetEmailSubscriberViewsCompletedEventHandler GetEmailSubscriberViewsCompleted;
        
        /// <remarks/>
        public event UpdateDiscussionLastViewDateOneWayCompletedEventHandler UpdateDiscussionLastViewDateOneWayCompleted;
        
        /// <remarks/>
        public event GetEmailSubscribedDiscussionsCompletedEventHandler GetEmailSubscribedDiscussionsCompleted;
        
        /// <remarks/>
        public event GetForumAliasCompletedEventHandler GetForumAliasCompleted;
        
        /// <remarks/>
        public event DeleteForumAliasCompletedEventHandler DeleteForumAliasCompleted;
        
        /// <remarks/>
        public event AddForumAliasCompletedEventHandler AddForumAliasCompleted;
        
        /// <remarks/>
        public event UpdateForumAliasCompletedEventHandler UpdateForumAliasCompleted;
        
        /// <remarks/>
        public event GetSettingCompletedEventHandler GetSettingCompleted;
        
        /// <remarks/>
        public event DeleteSettingCompletedEventHandler DeleteSettingCompleted;
        
        /// <remarks/>
        public event AddSettingCompletedEventHandler AddSettingCompleted;
        
        /// <remarks/>
        public event UpdateSettingCompletedEventHandler UpdateSettingCompleted;
        
        /// <remarks/>
        public event GetForumSettingCompletedEventHandler GetForumSettingCompleted;
        
        /// <remarks/>
        public event InsertForumSettingCompletedEventHandler InsertForumSettingCompleted;
        
        /// <remarks/>
        public event UpdateForumSettingCompletedEventHandler UpdateForumSettingCompleted;
        
        /// <remarks/>
        public event DeleteForumSettingCompletedEventHandler DeleteForumSettingCompleted;
        
        /// <remarks/>
        public event GetActionViewsByDiscussionCompletedEventHandler GetActionViewsByDiscussionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetVersion", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/CreateForumNoOrionAccount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum CreateForumNoOrionAccount(ref WsForum forum) {
            object[] results = this.Invoke("CreateForumNoOrionAccount", new object[] {
                        forum});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void CreateForumNoOrionAccountAsync(WsForum forum) {
            this.CreateForumNoOrionAccountAsync(forum, null);
        }
        
        /// <remarks/>
        public void CreateForumNoOrionAccountAsync(WsForum forum, object userState) {
            if ((this.CreateForumNoOrionAccountOperationCompleted == null)) {
                this.CreateForumNoOrionAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateForumNoOrionAccountOperationCompleted);
            }
            this.InvokeAsync("CreateForumNoOrionAccount", new object[] {
                        forum}, this.CreateForumNoOrionAccountOperationCompleted, userState);
        }
        
        private void OnCreateForumNoOrionAccountOperationCompleted(object arg) {
            if ((this.CreateForumNoOrionAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateForumNoOrionAccountCompleted(this, new CreateForumNoOrionAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/CreateOtherForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum CreateOtherForum(ref WsForum forum) {
            object[] results = this.Invoke("CreateOtherForum", new object[] {
                        forum});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOtherForumAsync(WsForum forum) {
            this.CreateOtherForumAsync(forum, null);
        }
        
        /// <remarks/>
        public void CreateOtherForumAsync(WsForum forum, object userState) {
            if ((this.CreateOtherForumOperationCompleted == null)) {
                this.CreateOtherForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOtherForumOperationCompleted);
            }
            this.InvokeAsync("CreateOtherForum", new object[] {
                        forum}, this.CreateOtherForumOperationCompleted, userState);
        }
        
        private void OnCreateOtherForumOperationCompleted(object arg) {
            if ((this.CreateOtherForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOtherForumCompleted(this, new CreateOtherForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/CreateGoDaddyForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum CreateGoDaddyForum(ref WsForum forum) {
            object[] results = this.Invoke("CreateGoDaddyForum", new object[] {
                        forum});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGoDaddyForumAsync(WsForum forum) {
            this.CreateGoDaddyForumAsync(forum, null);
        }
        
        /// <remarks/>
        public void CreateGoDaddyForumAsync(WsForum forum, object userState) {
            if ((this.CreateGoDaddyForumOperationCompleted == null)) {
                this.CreateGoDaddyForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGoDaddyForumOperationCompleted);
            }
            this.InvokeAsync("CreateGoDaddyForum", new object[] {
                        forum}, this.CreateGoDaddyForumOperationCompleted, userState);
        }
        
        private void OnCreateGoDaddyForumOperationCompleted(object arg) {
            if ((this.CreateGoDaddyForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGoDaddyForumCompleted(this, new CreateGoDaddyForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/CreateWSTForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum CreateWSTForum(System.Guid orionAccountUid, ref WsForum forum) {
            object[] results = this.Invoke("CreateWSTForum", new object[] {
                        orionAccountUid,
                        forum});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWSTForumAsync(System.Guid orionAccountUid, WsForum forum) {
            this.CreateWSTForumAsync(orionAccountUid, forum, null);
        }
        
        /// <remarks/>
        public void CreateWSTForumAsync(System.Guid orionAccountUid, WsForum forum, object userState) {
            if ((this.CreateWSTForumOperationCompleted == null)) {
                this.CreateWSTForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWSTForumOperationCompleted);
            }
            this.InvokeAsync("CreateWSTForum", new object[] {
                        orionAccountUid,
                        forum}, this.CreateWSTForumOperationCompleted, userState);
        }
        
        private void OnCreateWSTForumOperationCompleted(object arg) {
            if ((this.CreateWSTForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWSTForumCompleted(this, new CreateWSTForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/CreateWSTForumUsingProjectId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum CreateWSTForumUsingProjectId(int wstProjectId, ref WsForum forum) {
            object[] results = this.Invoke("CreateWSTForumUsingProjectId", new object[] {
                        wstProjectId,
                        forum});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWSTForumUsingProjectIdAsync(int wstProjectId, WsForum forum) {
            this.CreateWSTForumUsingProjectIdAsync(wstProjectId, forum, null);
        }
        
        /// <remarks/>
        public void CreateWSTForumUsingProjectIdAsync(int wstProjectId, WsForum forum, object userState) {
            if ((this.CreateWSTForumUsingProjectIdOperationCompleted == null)) {
                this.CreateWSTForumUsingProjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWSTForumUsingProjectIdOperationCompleted);
            }
            this.InvokeAsync("CreateWSTForumUsingProjectId", new object[] {
                        wstProjectId,
                        forum}, this.CreateWSTForumUsingProjectIdOperationCompleted, userState);
        }
        
        private void OnCreateWSTForumUsingProjectIdOperationCompleted(object arg) {
            if ((this.CreateWSTForumUsingProjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWSTForumUsingProjectIdCompleted(this, new CreateWSTForumUsingProjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumByUrl", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForum GetForumByUrl(string url) {
            object[] results = this.Invoke("GetForumByUrl", new object[] {
                        url});
            return ((WsForum)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumByUrlAsync(string url) {
            this.GetForumByUrlAsync(url, null);
        }
        
        /// <remarks/>
        public void GetForumByUrlAsync(string url, object userState) {
            if ((this.GetForumByUrlOperationCompleted == null)) {
                this.GetForumByUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumByUrlOperationCompleted);
            }
            this.InvokeAsync("GetForumByUrl", new object[] {
                        url}, this.GetForumByUrlOperationCompleted, userState);
        }
        
        private void OnGetForumByUrlOperationCompleted(object arg) {
            if ((this.GetForumByUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumByUrlCompleted(this, new GetForumByUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumById", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForum GetForumById(int forumId) {
            object[] results = this.Invoke("GetForumById", new object[] {
                        forumId});
            return ((WsForum)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumByIdAsync(int forumId) {
            this.GetForumByIdAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumByIdAsync(int forumId, object userState) {
            if ((this.GetForumByIdOperationCompleted == null)) {
                this.GetForumByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumByIdOperationCompleted);
            }
            this.InvokeAsync("GetForumById", new object[] {
                        forumId}, this.GetForumByIdOperationCompleted, userState);
        }
        
        private void OnGetForumByIdOperationCompleted(object arg) {
            if ((this.GetForumByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumByIdCompleted(this, new GetForumByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumByApplicationAndProfile", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForum GetForumByApplicationAndProfile(int applicationId, long userProfileId) {
            object[] results = this.Invoke("GetForumByApplicationAndProfile", new object[] {
                        applicationId,
                        userProfileId});
            return ((WsForum)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumByApplicationAndProfileAsync(int applicationId, long userProfileId) {
            this.GetForumByApplicationAndProfileAsync(applicationId, userProfileId, null);
        }
        
        /// <remarks/>
        public void GetForumByApplicationAndProfileAsync(int applicationId, long userProfileId, object userState) {
            if ((this.GetForumByApplicationAndProfileOperationCompleted == null)) {
                this.GetForumByApplicationAndProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumByApplicationAndProfileOperationCompleted);
            }
            this.InvokeAsync("GetForumByApplicationAndProfile", new object[] {
                        applicationId,
                        userProfileId}, this.GetForumByApplicationAndProfileOperationCompleted, userState);
        }
        
        private void OnGetForumByApplicationAndProfileOperationCompleted(object arg) {
            if ((this.GetForumByApplicationAndProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumByApplicationAndProfileCompleted(this, new GetForumByApplicationAndProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForum GetForum(int forumId) {
            object[] results = this.Invoke("GetForum", new object[] {
                        forumId});
            return ((WsForum)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumAsync(int forumId) {
            this.GetForumAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumAsync(int forumId, object userState) {
            if ((this.GetForumOperationCompleted == null)) {
                this.GetForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumOperationCompleted);
            }
            this.InvokeAsync("GetForum", new object[] {
                        forumId}, this.GetForumOperationCompleted, userState);
        }
        
        private void OnGetForumOperationCompleted(object arg) {
            if ((this.GetForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumCompleted(this, new GetForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum UpdateForum(ref WsForum forum) {
            object[] results = this.Invoke("UpdateForum", new object[] {
                        forum});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumAsync(WsForum forum) {
            this.UpdateForumAsync(forum, null);
        }
        
        /// <remarks/>
        public void UpdateForumAsync(WsForum forum, object userState) {
            if ((this.UpdateForumOperationCompleted == null)) {
                this.UpdateForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumOperationCompleted);
            }
            this.InvokeAsync("UpdateForum", new object[] {
                        forum}, this.UpdateForumOperationCompleted, userState);
        }
        
        private void OnUpdateForumOperationCompleted(object arg) {
            if ((this.UpdateForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumCompleted(this, new UpdateForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumByOrionAccountUid", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForum GetForumByOrionAccountUid(System.Guid orionAccountUid) {
            object[] results = this.Invoke("GetForumByOrionAccountUid", new object[] {
                        orionAccountUid});
            return ((WsForum)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumByOrionAccountUidAsync(System.Guid orionAccountUid) {
            this.GetForumByOrionAccountUidAsync(orionAccountUid, null);
        }
        
        /// <remarks/>
        public void GetForumByOrionAccountUidAsync(System.Guid orionAccountUid, object userState) {
            if ((this.GetForumByOrionAccountUidOperationCompleted == null)) {
                this.GetForumByOrionAccountUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumByOrionAccountUidOperationCompleted);
            }
            this.InvokeAsync("GetForumByOrionAccountUid", new object[] {
                        orionAccountUid}, this.GetForumByOrionAccountUidOperationCompleted, userState);
        }
        
        private void OnGetForumByOrionAccountUidOperationCompleted(object arg) {
            if ((this.GetForumByOrionAccountUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumByOrionAccountUidCompleted(this, new GetForumByOrionAccountUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumSettings", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsSettings GetForumSettings(int forumId) {
            object[] results = this.Invoke("GetForumSettings", new object[] {
                        forumId});
            return ((WsSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumSettingsAsync(int forumId) {
            this.GetForumSettingsAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumSettingsAsync(int forumId, object userState) {
            if ((this.GetForumSettingsOperationCompleted == null)) {
                this.GetForumSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumSettingsOperationCompleted);
            }
            this.InvokeAsync("GetForumSettings", new object[] {
                        forumId}, this.GetForumSettingsOperationCompleted, userState);
        }
        
        private void OnGetForumSettingsOperationCompleted(object arg) {
            if ((this.GetForumSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumSettingsCompleted(this, new GetForumSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetForumSettings", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForum SetForumSettings(int forumId, WsSettings settings) {
            object[] results = this.Invoke("SetForumSettings", new object[] {
                        forumId,
                        settings});
            return ((WsForum)(results[0]));
        }
        
        /// <remarks/>
        public void SetForumSettingsAsync(int forumId, WsSettings settings) {
            this.SetForumSettingsAsync(forumId, settings, null);
        }
        
        /// <remarks/>
        public void SetForumSettingsAsync(int forumId, WsSettings settings, object userState) {
            if ((this.SetForumSettingsOperationCompleted == null)) {
                this.SetForumSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForumSettingsOperationCompleted);
            }
            this.InvokeAsync("SetForumSettings", new object[] {
                        forumId,
                        settings}, this.SetForumSettingsOperationCompleted, userState);
        }
        
        private void OnSetForumSettingsOperationCompleted(object arg) {
            if ((this.SetForumSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForumSettingsCompleted(this, new SetForumSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetForumStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetForumStatus(int forumId, AccountStatusEnum status) {
            object[] results = this.Invoke("SetForumStatus", new object[] {
                        forumId,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetForumStatusAsync(int forumId, AccountStatusEnum status) {
            this.SetForumStatusAsync(forumId, status, null);
        }
        
        /// <remarks/>
        public void SetForumStatusAsync(int forumId, AccountStatusEnum status, object userState) {
            if ((this.SetForumStatusOperationCompleted == null)) {
                this.SetForumStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForumStatusOperationCompleted);
            }
            this.InvokeAsync("SetForumStatus", new object[] {
                        forumId,
                        status}, this.SetForumStatusOperationCompleted, userState);
        }
        
        private void OnSetForumStatusOperationCompleted(object arg) {
            if ((this.SetForumStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForumStatusCompleted(this, new SetForumStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DisableForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableForum(int forumId) {
            object[] results = this.Invoke("DisableForum", new object[] {
                        forumId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableForumAsync(int forumId) {
            this.DisableForumAsync(forumId, null);
        }
        
        /// <remarks/>
        public void DisableForumAsync(int forumId, object userState) {
            if ((this.DisableForumOperationCompleted == null)) {
                this.DisableForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableForumOperationCompleted);
            }
            this.InvokeAsync("DisableForum", new object[] {
                        forumId}, this.DisableForumOperationCompleted, userState);
        }
        
        private void OnDisableForumOperationCompleted(object arg) {
            if ((this.DisableForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableForumCompleted(this, new DisableForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/EnableForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnableForum(int forumId) {
            object[] results = this.Invoke("EnableForum", new object[] {
                        forumId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableForumAsync(int forumId) {
            this.EnableForumAsync(forumId, null);
        }
        
        /// <remarks/>
        public void EnableForumAsync(int forumId, object userState) {
            if ((this.EnableForumOperationCompleted == null)) {
                this.EnableForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableForumOperationCompleted);
            }
            this.InvokeAsync("EnableForum", new object[] {
                        forumId}, this.EnableForumOperationCompleted, userState);
        }
        
        private void OnEnableForumOperationCompleted(object arg) {
            if ((this.EnableForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableForumCompleted(this, new EnableForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetForumCssResources", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum SetForumCssResources(int forumId, string cssResources, out WsForum forum) {
            object[] results = this.Invoke("SetForumCssResources", new object[] {
                        forumId,
                        cssResources});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void SetForumCssResourcesAsync(int forumId, string cssResources) {
            this.SetForumCssResourcesAsync(forumId, cssResources, null);
        }
        
        /// <remarks/>
        public void SetForumCssResourcesAsync(int forumId, string cssResources, object userState) {
            if ((this.SetForumCssResourcesOperationCompleted == null)) {
                this.SetForumCssResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForumCssResourcesOperationCompleted);
            }
            this.InvokeAsync("SetForumCssResources", new object[] {
                        forumId,
                        cssResources}, this.SetForumCssResourcesOperationCompleted, userState);
        }
        
        private void OnSetForumCssResourcesOperationCompleted(object arg) {
            if ((this.SetForumCssResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForumCssResourcesCompleted(this, new SetForumCssResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetForumWSTResources", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum SetForumWSTResources(int forumId, string cssResources, string banner, out WsForum forum) {
            object[] results = this.Invoke("SetForumWSTResources", new object[] {
                        forumId,
                        cssResources,
                        banner});
            forum = ((WsForum)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void SetForumWSTResourcesAsync(int forumId, string cssResources, string banner) {
            this.SetForumWSTResourcesAsync(forumId, cssResources, banner, null);
        }
        
        /// <remarks/>
        public void SetForumWSTResourcesAsync(int forumId, string cssResources, string banner, object userState) {
            if ((this.SetForumWSTResourcesOperationCompleted == null)) {
                this.SetForumWSTResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForumWSTResourcesOperationCompleted);
            }
            this.InvokeAsync("SetForumWSTResources", new object[] {
                        forumId,
                        cssResources,
                        banner}, this.SetForumWSTResourcesOperationCompleted, userState);
        }
        
        private void OnSetForumWSTResourcesOperationCompleted(object arg) {
            if ((this.SetForumWSTResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForumWSTResourcesCompleted(this, new SetForumWSTResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsUser GetUser(int userId) {
            object[] results = this.Invoke("GetUser", new object[] {
                        userId});
            return ((WsUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(int userId) {
            this.GetUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(int userId, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        userId}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserStatistics", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUserStatistics GetForumUserStatistics(long forumUserId, int forumId) {
            object[] results = this.Invoke("GetForumUserStatistics", new object[] {
                        forumUserId,
                        forumId});
            return ((WsForumUserStatistics)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserStatisticsAsync(long forumUserId, int forumId) {
            this.GetForumUserStatisticsAsync(forumUserId, forumId, null);
        }
        
        /// <remarks/>
        public void GetForumUserStatisticsAsync(long forumUserId, int forumId, object userState) {
            if ((this.GetForumUserStatisticsOperationCompleted == null)) {
                this.GetForumUserStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetForumUserStatistics", new object[] {
                        forumUserId,
                        forumId}, this.GetForumUserStatisticsOperationCompleted, userState);
        }
        
        private void OnGetForumUserStatisticsOperationCompleted(object arg) {
            if ((this.GetForumUserStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserStatisticsCompleted(this, new GetForumUserStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum UpdateUser(int forumId, ref WsUser user) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        forumId,
                        user});
            user = ((WsUser)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int forumId, WsUser user) {
            this.UpdateUserAsync(forumId, user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int forumId, WsUser user, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        forumId,
                        user}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateUserVisitCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum UpdateUserVisitCount(int forumId, string userName) {
            object[] results = this.Invoke("UpdateUserVisitCount", new object[] {
                        forumId,
                        userName});
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserVisitCountAsync(int forumId, string userName) {
            this.UpdateUserVisitCountAsync(forumId, userName, null);
        }
        
        /// <remarks/>
        public void UpdateUserVisitCountAsync(int forumId, string userName, object userState) {
            if ((this.UpdateUserVisitCountOperationCompleted == null)) {
                this.UpdateUserVisitCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserVisitCountOperationCompleted);
            }
            this.InvokeAsync("UpdateUserVisitCount", new object[] {
                        forumId,
                        userName}, this.UpdateUserVisitCountOperationCompleted, userState);
        }
        
        private void OnUpdateUserVisitCountOperationCompleted(object arg) {
            if ((this.UpdateUserVisitCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserVisitCountCompleted(this, new UpdateUserVisitCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateEMailAddress", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum UpdateEMailAddress(int userId, string emailAddress) {
            object[] results = this.Invoke("UpdateEMailAddress", new object[] {
                        userId,
                        emailAddress});
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEMailAddressAsync(int userId, string emailAddress) {
            this.UpdateEMailAddressAsync(userId, emailAddress, null);
        }
        
        /// <remarks/>
        public void UpdateEMailAddressAsync(int userId, string emailAddress, object userState) {
            if ((this.UpdateEMailAddressOperationCompleted == null)) {
                this.UpdateEMailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEMailAddressOperationCompleted);
            }
            this.InvokeAsync("UpdateEMailAddress", new object[] {
                        userId,
                        emailAddress}, this.UpdateEMailAddressOperationCompleted, userState);
        }
        
        private void OnUpdateEMailAddressOperationCompleted(object arg) {
            if ((this.UpdateEMailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEMailAddressCompleted(this, new UpdateEMailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateEMailAddressByForumUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEMailAddressByForumUser(int forumUserId, string emailAddress) {
            object[] results = this.Invoke("UpdateEMailAddressByForumUser", new object[] {
                        forumUserId,
                        emailAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEMailAddressByForumUserAsync(int forumUserId, string emailAddress) {
            this.UpdateEMailAddressByForumUserAsync(forumUserId, emailAddress, null);
        }
        
        /// <remarks/>
        public void UpdateEMailAddressByForumUserAsync(int forumUserId, string emailAddress, object userState) {
            if ((this.UpdateEMailAddressByForumUserOperationCompleted == null)) {
                this.UpdateEMailAddressByForumUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEMailAddressByForumUserOperationCompleted);
            }
            this.InvokeAsync("UpdateEMailAddressByForumUser", new object[] {
                        forumUserId,
                        emailAddress}, this.UpdateEMailAddressByForumUserOperationCompleted, userState);
        }
        
        private void OnUpdateEMailAddressByForumUserOperationCompleted(object arg) {
            if ((this.UpdateEMailAddressByForumUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEMailAddressByForumUserCompleted(this, new UpdateEMailAddressByForumUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateUserAuthenticationDetails", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum UpdateUserAuthenticationDetails(int forumId, ref WsUser user) {
            object[] results = this.Invoke("UpdateUserAuthenticationDetails", new object[] {
                        forumId,
                        user});
            user = ((WsUser)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAuthenticationDetailsAsync(int forumId, WsUser user) {
            this.UpdateUserAuthenticationDetailsAsync(forumId, user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAuthenticationDetailsAsync(int forumId, WsUser user, object userState) {
            if ((this.UpdateUserAuthenticationDetailsOperationCompleted == null)) {
                this.UpdateUserAuthenticationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAuthenticationDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAuthenticationDetails", new object[] {
                        forumId,
                        user}, this.UpdateUserAuthenticationDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateUserAuthenticationDetailsOperationCompleted(object arg) {
            if ((this.UpdateUserAuthenticationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAuthenticationDetailsCompleted(this, new UpdateUserAuthenticationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateUserInfo", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserInfo(WsUser user) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        user});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(WsUser user) {
            this.UpdateUserInfoAsync(user, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(WsUser user, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        user}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/RenameUserName", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RenameUserName(int forumId, int forumUserId, string newUserName) {
            object[] results = this.Invoke("RenameUserName", new object[] {
                        forumId,
                        forumUserId,
                        newUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RenameUserNameAsync(int forumId, int forumUserId, string newUserName) {
            this.RenameUserNameAsync(forumId, forumUserId, newUserName, null);
        }
        
        /// <remarks/>
        public void RenameUserNameAsync(int forumId, int forumUserId, string newUserName, object userState) {
            if ((this.RenameUserNameOperationCompleted == null)) {
                this.RenameUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameUserNameOperationCompleted);
            }
            this.InvokeAsync("RenameUserName", new object[] {
                        forumId,
                        forumUserId,
                        newUserName}, this.RenameUserNameOperationCompleted, userState);
        }
        
        private void OnRenameUserNameOperationCompleted(object arg) {
            if ((this.RenameUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameUserNameCompleted(this, new RenameUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser GetForumUser(int forumId, int userId) {
            object[] results = this.Invoke("GetForumUser", new object[] {
                        forumId,
                        userId});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserAsync(int forumId, int userId) {
            this.GetForumUserAsync(forumId, userId, null);
        }
        
        /// <remarks/>
        public void GetForumUserAsync(int forumId, int userId, object userState) {
            if ((this.GetForumUserOperationCompleted == null)) {
                this.GetForumUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserOperationCompleted);
            }
            this.InvokeAsync("GetForumUser", new object[] {
                        forumId,
                        userId}, this.GetForumUserOperationCompleted, userState);
        }
        
        private void OnGetForumUserOperationCompleted(object arg) {
            if ((this.GetForumUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserCompleted(this, new GetForumUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserById", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser GetForumUserById(int forumId, int forumUserId) {
            object[] results = this.Invoke("GetForumUserById", new object[] {
                        forumId,
                        forumUserId});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserByIdAsync(int forumId, int forumUserId) {
            this.GetForumUserByIdAsync(forumId, forumUserId, null);
        }
        
        /// <remarks/>
        public void GetForumUserByIdAsync(int forumId, int forumUserId, object userState) {
            if ((this.GetForumUserByIdOperationCompleted == null)) {
                this.GetForumUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserByIdOperationCompleted);
            }
            this.InvokeAsync("GetForumUserById", new object[] {
                        forumId,
                        forumUserId}, this.GetForumUserByIdOperationCompleted, userState);
        }
        
        private void OnGetForumUserByIdOperationCompleted(object arg) {
            if ((this.GetForumUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserByIdCompleted(this, new GetForumUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserByForumUserId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser GetForumUserByForumUserId(int forumUserId) {
            object[] results = this.Invoke("GetForumUserByForumUserId", new object[] {
                        forumUserId});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserByForumUserIdAsync(int forumUserId) {
            this.GetForumUserByForumUserIdAsync(forumUserId, null);
        }
        
        /// <remarks/>
        public void GetForumUserByForumUserIdAsync(int forumUserId, object userState) {
            if ((this.GetForumUserByForumUserIdOperationCompleted == null)) {
                this.GetForumUserByForumUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserByForumUserIdOperationCompleted);
            }
            this.InvokeAsync("GetForumUserByForumUserId", new object[] {
                        forumUserId}, this.GetForumUserByForumUserIdOperationCompleted, userState);
        }
        
        private void OnGetForumUserByForumUserIdOperationCompleted(object arg) {
            if ((this.GetForumUserByForumUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserByForumUserIdCompleted(this, new GetForumUserByForumUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUsers", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser[] GetForumUsers(int forumId) {
            object[] results = this.Invoke("GetForumUsers", new object[] {
                        forumId});
            return ((WsForumUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUsersAsync(int forumId) {
            this.GetForumUsersAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumUsersAsync(int forumId, object userState) {
            if ((this.GetForumUsersOperationCompleted == null)) {
                this.GetForumUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUsersOperationCompleted);
            }
            this.InvokeAsync("GetForumUsers", new object[] {
                        forumId}, this.GetForumUsersOperationCompleted, userState);
        }
        
        private void OnGetForumUsersOperationCompleted(object arg) {
            if ((this.GetForumUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUsersCompleted(this, new GetForumUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserCounts", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUserCounts GetForumUserCounts(int forumId) {
            object[] results = this.Invoke("GetForumUserCounts", new object[] {
                        forumId});
            return ((WsForumUserCounts)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserCountsAsync(int forumId) {
            this.GetForumUserCountsAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumUserCountsAsync(int forumId, object userState) {
            if ((this.GetForumUserCountsOperationCompleted == null)) {
                this.GetForumUserCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserCountsOperationCompleted);
            }
            this.InvokeAsync("GetForumUserCounts", new object[] {
                        forumId}, this.GetForumUserCountsOperationCompleted, userState);
        }
        
        private void OnGetForumUserCountsOperationCompleted(object arg) {
            if ((this.GetForumUserCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserCountsCompleted(this, new GetForumUserCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetRecentActivityCounts", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsRecentActivityCounts GetRecentActivityCounts(int forumId, System.DateTime startDate) {
            object[] results = this.Invoke("GetRecentActivityCounts", new object[] {
                        forumId,
                        startDate});
            return ((WsRecentActivityCounts)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecentActivityCountsAsync(int forumId, System.DateTime startDate) {
            this.GetRecentActivityCountsAsync(forumId, startDate, null);
        }
        
        /// <remarks/>
        public void GetRecentActivityCountsAsync(int forumId, System.DateTime startDate, object userState) {
            if ((this.GetRecentActivityCountsOperationCompleted == null)) {
                this.GetRecentActivityCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecentActivityCountsOperationCompleted);
            }
            this.InvokeAsync("GetRecentActivityCounts", new object[] {
                        forumId,
                        startDate}, this.GetRecentActivityCountsOperationCompleted, userState);
        }
        
        private void OnGetRecentActivityCountsOperationCompleted(object arg) {
            if ((this.GetRecentActivityCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecentActivityCountsCompleted(this, new GetRecentActivityCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCommentsUnreadByAdminCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCommentsUnreadByAdminCount(int forumId) {
            object[] results = this.Invoke("GetCommentsUnreadByAdminCount", new object[] {
                        forumId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsUnreadByAdminCountAsync(int forumId) {
            this.GetCommentsUnreadByAdminCountAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetCommentsUnreadByAdminCountAsync(int forumId, object userState) {
            if ((this.GetCommentsUnreadByAdminCountOperationCompleted == null)) {
                this.GetCommentsUnreadByAdminCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsUnreadByAdminCountOperationCompleted);
            }
            this.InvokeAsync("GetCommentsUnreadByAdminCount", new object[] {
                        forumId}, this.GetCommentsUnreadByAdminCountOperationCompleted, userState);
        }
        
        private void OnGetCommentsUnreadByAdminCountOperationCompleted(object arg) {
            if ((this.GetCommentsUnreadByAdminCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsUnreadByAdminCountCompleted(this, new GetCommentsUnreadByAdminCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetForumUserCount(int forumId) {
            object[] results = this.Invoke("GetForumUserCount", new object[] {
                        forumId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserCountAsync(int forumId) {
            this.GetForumUserCountAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumUserCountAsync(int forumId, object userState) {
            if ((this.GetForumUserCountOperationCompleted == null)) {
                this.GetForumUserCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserCountOperationCompleted);
            }
            this.InvokeAsync("GetForumUserCount", new object[] {
                        forumId}, this.GetForumUserCountOperationCompleted, userState);
        }
        
        private void OnGetForumUserCountOperationCompleted(object arg) {
            if ((this.GetForumUserCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserCountCompleted(this, new GetForumUserCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUsersPage", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser[] GetForumUsersPage(int forumId, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetForumUsersPage", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsForumUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUsersPageAsync(int forumId, int maximumRows, int startRowIndex) {
            this.GetForumUsersPageAsync(forumId, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetForumUsersPageAsync(int forumId, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetForumUsersPageOperationCompleted == null)) {
                this.GetForumUsersPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUsersPageOperationCompleted);
            }
            this.InvokeAsync("GetForumUsersPage", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex}, this.GetForumUsersPageOperationCompleted, userState);
        }
        
        private void OnGetForumUsersPageOperationCompleted(object arg) {
            if ((this.GetForumUsersPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUsersPageCompleted(this, new GetForumUsersPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUsersPageSinceDate", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser[] GetForumUsersPageSinceDate(int forumId, int maximumRows, int startRowIndex, System.DateTime startDate, out int totalResults) {
            object[] results = this.Invoke("GetForumUsersPageSinceDate", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        startDate});
            totalResults = ((int)(results[1]));
            return ((WsForumUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUsersPageSinceDateAsync(int forumId, int maximumRows, int startRowIndex, System.DateTime startDate) {
            this.GetForumUsersPageSinceDateAsync(forumId, maximumRows, startRowIndex, startDate, null);
        }
        
        /// <remarks/>
        public void GetForumUsersPageSinceDateAsync(int forumId, int maximumRows, int startRowIndex, System.DateTime startDate, object userState) {
            if ((this.GetForumUsersPageSinceDateOperationCompleted == null)) {
                this.GetForumUsersPageSinceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUsersPageSinceDateOperationCompleted);
            }
            this.InvokeAsync("GetForumUsersPageSinceDate", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        startDate}, this.GetForumUsersPageSinceDateOperationCompleted, userState);
        }
        
        private void OnGetForumUsersPageSinceDateOperationCompleted(object arg) {
            if ((this.GetForumUsersPageSinceDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUsersPageSinceDateCompleted(this, new GetForumUsersPageSinceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumAdminUsers", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser[] GetForumAdminUsers(int forumId) {
            object[] results = this.Invoke("GetForumAdminUsers", new object[] {
                        forumId});
            return ((WsForumUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumAdminUsersAsync(int forumId) {
            this.GetForumAdminUsersAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumAdminUsersAsync(int forumId, object userState) {
            if ((this.GetForumAdminUsersOperationCompleted == null)) {
                this.GetForumAdminUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumAdminUsersOperationCompleted);
            }
            this.InvokeAsync("GetForumAdminUsers", new object[] {
                        forumId}, this.GetForumAdminUsersOperationCompleted, userState);
        }
        
        private void OnGetForumAdminUsersOperationCompleted(object arg) {
            if ((this.GetForumAdminUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumAdminUsersCompleted(this, new GetForumAdminUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUsersByStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser[] GetForumUsersByStatus(int forumId, UserStatusEnum userStatusId) {
            object[] results = this.Invoke("GetForumUsersByStatus", new object[] {
                        forumId,
                        userStatusId});
            return ((WsForumUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUsersByStatusAsync(int forumId, UserStatusEnum userStatusId) {
            this.GetForumUsersByStatusAsync(forumId, userStatusId, null);
        }
        
        /// <remarks/>
        public void GetForumUsersByStatusAsync(int forumId, UserStatusEnum userStatusId, object userState) {
            if ((this.GetForumUsersByStatusOperationCompleted == null)) {
                this.GetForumUsersByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUsersByStatusOperationCompleted);
            }
            this.InvokeAsync("GetForumUsersByStatus", new object[] {
                        forumId,
                        userStatusId}, this.GetForumUsersByStatusOperationCompleted, userState);
        }
        
        private void OnGetForumUsersByStatusOperationCompleted(object arg) {
            if ((this.GetForumUsersByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUsersByStatusCompleted(this, new GetForumUsersByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUsersPageByStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser[] GetForumUsersPageByStatus(int forumId, UserStatusEnum userStatusId, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetForumUsersPageByStatus", new object[] {
                        forumId,
                        userStatusId,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsForumUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUsersPageByStatusAsync(int forumId, UserStatusEnum userStatusId, int maximumRows, int startRowIndex) {
            this.GetForumUsersPageByStatusAsync(forumId, userStatusId, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetForumUsersPageByStatusAsync(int forumId, UserStatusEnum userStatusId, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetForumUsersPageByStatusOperationCompleted == null)) {
                this.GetForumUsersPageByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUsersPageByStatusOperationCompleted);
            }
            this.InvokeAsync("GetForumUsersPageByStatus", new object[] {
                        forumId,
                        userStatusId,
                        maximumRows,
                        startRowIndex}, this.GetForumUsersPageByStatusOperationCompleted, userState);
        }
        
        private void OnGetForumUsersPageByStatusOperationCompleted(object arg) {
            if ((this.GetForumUsersPageByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUsersPageByStatusCompleted(this, new GetForumUsersPageByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetForumUserId(int forumId, string loginName) {
            object[] results = this.Invoke("GetForumUserId", new object[] {
                        forumId,
                        loginName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserIdAsync(int forumId, string loginName) {
            this.GetForumUserIdAsync(forumId, loginName, null);
        }
        
        /// <remarks/>
        public void GetForumUserIdAsync(int forumId, string loginName, object userState) {
            if ((this.GetForumUserIdOperationCompleted == null)) {
                this.GetForumUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserIdOperationCompleted);
            }
            this.InvokeAsync("GetForumUserId", new object[] {
                        forumId,
                        loginName}, this.GetForumUserIdOperationCompleted, userState);
        }
        
        private void OnGetForumUserIdOperationCompleted(object arg) {
            if ((this.GetForumUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserIdCompleted(this, new GetForumUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserByForumIdAndLoginName", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser GetForumUserByForumIdAndLoginName(int forumId, string loginName) {
            object[] results = this.Invoke("GetForumUserByForumIdAndLoginName", new object[] {
                        forumId,
                        loginName});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserByForumIdAndLoginNameAsync(int forumId, string loginName) {
            this.GetForumUserByForumIdAndLoginNameAsync(forumId, loginName, null);
        }
        
        /// <remarks/>
        public void GetForumUserByForumIdAndLoginNameAsync(int forumId, string loginName, object userState) {
            if ((this.GetForumUserByForumIdAndLoginNameOperationCompleted == null)) {
                this.GetForumUserByForumIdAndLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserByForumIdAndLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetForumUserByForumIdAndLoginName", new object[] {
                        forumId,
                        loginName}, this.GetForumUserByForumIdAndLoginNameOperationCompleted, userState);
        }
        
        private void OnGetForumUserByForumIdAndLoginNameOperationCompleted(object arg) {
            if ((this.GetForumUserByForumIdAndLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserByForumIdAndLoginNameCompleted(this, new GetForumUserByForumIdAndLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetUserByUserName", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsUser GetUserByUserName(string userName) {
            object[] results = this.Invoke("GetUserByUserName", new object[] {
                        userName});
            return ((WsUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUserNameAsync(string userName) {
            this.GetUserByUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetUserByUserNameAsync(string userName, object userState) {
            if ((this.GetUserByUserNameOperationCompleted == null)) {
                this.GetUserByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserByUserName", new object[] {
                        userName}, this.GetUserByUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserByUserNameOperationCompleted(object arg) {
            if ((this.GetUserByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUserNameCompleted(this, new GetUserByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum AddNewUser(int forumId, RoleEnum roleId, WsUser user, out WsForumUser forumUser) {
            object[] results = this.Invoke("AddNewUser", new object[] {
                        forumId,
                        roleId,
                        user});
            forumUser = ((WsForumUser)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewUserAsync(int forumId, RoleEnum roleId, WsUser user) {
            this.AddNewUserAsync(forumId, roleId, user, null);
        }
        
        /// <remarks/>
        public void AddNewUserAsync(int forumId, RoleEnum roleId, WsUser user, object userState) {
            if ((this.AddNewUserOperationCompleted == null)) {
                this.AddNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewUserOperationCompleted);
            }
            this.InvokeAsync("AddNewUser", new object[] {
                        forumId,
                        roleId,
                        user}, this.AddNewUserOperationCompleted, userState);
        }
        
        private void OnAddNewUserOperationCompleted(object arg) {
            if ((this.AddNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewUserCompleted(this, new AddNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewGoDaddyUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum AddNewGoDaddyUser(int forumId, RoleEnum roleId, WsUser user, out WsForumUser forumUser) {
            object[] results = this.Invoke("AddNewGoDaddyUser", new object[] {
                        forumId,
                        roleId,
                        user});
            forumUser = ((WsForumUser)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewGoDaddyUserAsync(int forumId, RoleEnum roleId, WsUser user) {
            this.AddNewGoDaddyUserAsync(forumId, roleId, user, null);
        }
        
        /// <remarks/>
        public void AddNewGoDaddyUserAsync(int forumId, RoleEnum roleId, WsUser user, object userState) {
            if ((this.AddNewGoDaddyUserOperationCompleted == null)) {
                this.AddNewGoDaddyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewGoDaddyUserOperationCompleted);
            }
            this.InvokeAsync("AddNewGoDaddyUser", new object[] {
                        forumId,
                        roleId,
                        user}, this.AddNewGoDaddyUserOperationCompleted, userState);
        }
        
        private void OnAddNewGoDaddyUserOperationCompleted(object arg) {
            if ((this.AddNewGoDaddyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewGoDaddyUserCompleted(this, new AddNewGoDaddyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewOrUpdateUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewOrUpdateUser(int forumId, RoleEnum roleId, WsUser user) {
            object[] results = this.Invoke("AddNewOrUpdateUser", new object[] {
                        forumId,
                        roleId,
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewOrUpdateUserAsync(int forumId, RoleEnum roleId, WsUser user) {
            this.AddNewOrUpdateUserAsync(forumId, roleId, user, null);
        }
        
        /// <remarks/>
        public void AddNewOrUpdateUserAsync(int forumId, RoleEnum roleId, WsUser user, object userState) {
            if ((this.AddNewOrUpdateUserOperationCompleted == null)) {
                this.AddNewOrUpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewOrUpdateUserOperationCompleted);
            }
            this.InvokeAsync("AddNewOrUpdateUser", new object[] {
                        forumId,
                        roleId,
                        user}, this.AddNewOrUpdateUserOperationCompleted, userState);
        }
        
        private void OnAddNewOrUpdateUserOperationCompleted(object arg) {
            if ((this.AddNewOrUpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewOrUpdateUserCompleted(this, new AddNewOrUpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddUserToForum", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser AddUserToForum(int userId, int forumId, RoleEnum roleId) {
            object[] results = this.Invoke("AddUserToForum", new object[] {
                        userId,
                        forumId,
                        roleId});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToForumAsync(int userId, int forumId, RoleEnum roleId) {
            this.AddUserToForumAsync(userId, forumId, roleId, null);
        }
        
        /// <remarks/>
        public void AddUserToForumAsync(int userId, int forumId, RoleEnum roleId, object userState) {
            if ((this.AddUserToForumOperationCompleted == null)) {
                this.AddUserToForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToForumOperationCompleted);
            }
            this.InvokeAsync("AddUserToForum", new object[] {
                        userId,
                        forumId,
                        roleId}, this.AddUserToForumOperationCompleted, userState);
        }
        
        private void OnAddUserToForumOperationCompleted(object arg) {
            if ((this.AddUserToForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToForumCompleted(this, new AddUserToForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddUserToForumFromGoDaddy", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser AddUserToForumFromGoDaddy(int userId, int forumId, RoleEnum roleId, string avatar) {
            object[] results = this.Invoke("AddUserToForumFromGoDaddy", new object[] {
                        userId,
                        forumId,
                        roleId,
                        avatar});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToForumFromGoDaddyAsync(int userId, int forumId, RoleEnum roleId, string avatar) {
            this.AddUserToForumFromGoDaddyAsync(userId, forumId, roleId, avatar, null);
        }
        
        /// <remarks/>
        public void AddUserToForumFromGoDaddyAsync(int userId, int forumId, RoleEnum roleId, string avatar, object userState) {
            if ((this.AddUserToForumFromGoDaddyOperationCompleted == null)) {
                this.AddUserToForumFromGoDaddyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToForumFromGoDaddyOperationCompleted);
            }
            this.InvokeAsync("AddUserToForumFromGoDaddy", new object[] {
                        userId,
                        forumId,
                        roleId,
                        avatar}, this.AddUserToForumFromGoDaddyOperationCompleted, userState);
        }
        
        private void OnAddUserToForumFromGoDaddyOperationCompleted(object arg) {
            if ((this.AddUserToForumFromGoDaddyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToForumFromGoDaddyCompleted(this, new AddUserToForumFromGoDaddyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetForumUserRole", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser SetForumUserRole(int forumId, int userId, RoleEnum roleId) {
            object[] results = this.Invoke("SetForumUserRole", new object[] {
                        forumId,
                        userId,
                        roleId});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void SetForumUserRoleAsync(int forumId, int userId, RoleEnum roleId) {
            this.SetForumUserRoleAsync(forumId, userId, roleId, null);
        }
        
        /// <remarks/>
        public void SetForumUserRoleAsync(int forumId, int userId, RoleEnum roleId, object userState) {
            if ((this.SetForumUserRoleOperationCompleted == null)) {
                this.SetForumUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForumUserRoleOperationCompleted);
            }
            this.InvokeAsync("SetForumUserRole", new object[] {
                        forumId,
                        userId,
                        roleId}, this.SetForumUserRoleOperationCompleted, userState);
        }
        
        private void OnSetForumUserRoleOperationCompleted(object arg) {
            if ((this.SetForumUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForumUserRoleCompleted(this, new SetForumUserRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumUserRole", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateForumUserRole(int forumId, int forumUserId, RoleEnum roleId) {
            object[] results = this.Invoke("UpdateForumUserRole", new object[] {
                        forumId,
                        forumUserId,
                        roleId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumUserRoleAsync(int forumId, int forumUserId, RoleEnum roleId) {
            this.UpdateForumUserRoleAsync(forumId, forumUserId, roleId, null);
        }
        
        /// <remarks/>
        public void UpdateForumUserRoleAsync(int forumId, int forumUserId, RoleEnum roleId, object userState) {
            if ((this.UpdateForumUserRoleOperationCompleted == null)) {
                this.UpdateForumUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumUserRoleOperationCompleted);
            }
            this.InvokeAsync("UpdateForumUserRole", new object[] {
                        forumId,
                        forumUserId,
                        roleId}, this.UpdateForumUserRoleOperationCompleted, userState);
        }
        
        private void OnUpdateForumUserRoleOperationCompleted(object arg) {
            if ((this.UpdateForumUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumUserRoleCompleted(this, new UpdateForumUserRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumUserAutoPostOn", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateForumUserAutoPostOn(int forumUserId, bool AutoPostOn) {
            object[] results = this.Invoke("UpdateForumUserAutoPostOn", new object[] {
                        forumUserId,
                        AutoPostOn});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumUserAutoPostOnAsync(int forumUserId, bool AutoPostOn) {
            this.UpdateForumUserAutoPostOnAsync(forumUserId, AutoPostOn, null);
        }
        
        /// <remarks/>
        public void UpdateForumUserAutoPostOnAsync(int forumUserId, bool AutoPostOn, object userState) {
            if ((this.UpdateForumUserAutoPostOnOperationCompleted == null)) {
                this.UpdateForumUserAutoPostOnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumUserAutoPostOnOperationCompleted);
            }
            this.InvokeAsync("UpdateForumUserAutoPostOn", new object[] {
                        forumUserId,
                        AutoPostOn}, this.UpdateForumUserAutoPostOnOperationCompleted, userState);
        }
        
        private void OnUpdateForumUserAutoPostOnOperationCompleted(object arg) {
            if ((this.UpdateForumUserAutoPostOnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumUserAutoPostOnCompleted(this, new UpdateForumUserAutoPostOnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumUserUserProfileId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateForumUserUserProfileId(int forumUserId, long userProfileId) {
            object[] results = this.Invoke("UpdateForumUserUserProfileId", new object[] {
                        forumUserId,
                        userProfileId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumUserUserProfileIdAsync(int forumUserId, long userProfileId) {
            this.UpdateForumUserUserProfileIdAsync(forumUserId, userProfileId, null);
        }
        
        /// <remarks/>
        public void UpdateForumUserUserProfileIdAsync(int forumUserId, long userProfileId, object userState) {
            if ((this.UpdateForumUserUserProfileIdOperationCompleted == null)) {
                this.UpdateForumUserUserProfileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumUserUserProfileIdOperationCompleted);
            }
            this.InvokeAsync("UpdateForumUserUserProfileId", new object[] {
                        forumUserId,
                        userProfileId}, this.UpdateForumUserUserProfileIdOperationCompleted, userState);
        }
        
        private void OnUpdateForumUserUserProfileIdOperationCompleted(object arg) {
            if ((this.UpdateForumUserUserProfileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumUserUserProfileIdCompleted(this, new UpdateForumUserUserProfileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumUserUserStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateForumUserUserStatus(int forumId, int forumUserId, UserStatusEnum userStatusId) {
            object[] results = this.Invoke("UpdateForumUserUserStatus", new object[] {
                        forumId,
                        forumUserId,
                        userStatusId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumUserUserStatusAsync(int forumId, int forumUserId, UserStatusEnum userStatusId) {
            this.UpdateForumUserUserStatusAsync(forumId, forumUserId, userStatusId, null);
        }
        
        /// <remarks/>
        public void UpdateForumUserUserStatusAsync(int forumId, int forumUserId, UserStatusEnum userStatusId, object userState) {
            if ((this.UpdateForumUserUserStatusOperationCompleted == null)) {
                this.UpdateForumUserUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumUserUserStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateForumUserUserStatus", new object[] {
                        forumId,
                        forumUserId,
                        userStatusId}, this.UpdateForumUserUserStatusOperationCompleted, userState);
        }
        
        private void OnUpdateForumUserUserStatusOperationCompleted(object arg) {
            if ((this.UpdateForumUserUserStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumUserUserStatusCompleted(this, new UpdateForumUserUserStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/ApproveForumUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveForumUser(int forumId, int userId) {
            object[] results = this.Invoke("ApproveForumUser", new object[] {
                        forumId,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveForumUserAsync(int forumId, int userId) {
            this.ApproveForumUserAsync(forumId, userId, null);
        }
        
        /// <remarks/>
        public void ApproveForumUserAsync(int forumId, int userId, object userState) {
            if ((this.ApproveForumUserOperationCompleted == null)) {
                this.ApproveForumUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveForumUserOperationCompleted);
            }
            this.InvokeAsync("ApproveForumUser", new object[] {
                        forumId,
                        userId}, this.ApproveForumUserOperationCompleted, userState);
        }
        
        private void OnApproveForumUserOperationCompleted(object arg) {
            if ((this.ApproveForumUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveForumUserCompleted(this, new ApproveForumUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteForumUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteForumUser(int forumId, int userId) {
            object[] results = this.Invoke("DeleteForumUser", new object[] {
                        forumId,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteForumUserAsync(int forumId, int userId) {
            this.DeleteForumUserAsync(forumId, userId, null);
        }
        
        /// <remarks/>
        public void DeleteForumUserAsync(int forumId, int userId, object userState) {
            if ((this.DeleteForumUserOperationCompleted == null)) {
                this.DeleteForumUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteForumUserOperationCompleted);
            }
            this.InvokeAsync("DeleteForumUser", new object[] {
                        forumId,
                        userId}, this.DeleteForumUserOperationCompleted, userState);
        }
        
        private void OnDeleteForumUserOperationCompleted(object arg) {
            if ((this.DeleteForumUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteForumUserCompleted(this, new DeleteForumUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DenyForumUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DenyForumUser(int forumId, int userId) {
            object[] results = this.Invoke("DenyForumUser", new object[] {
                        forumId,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DenyForumUserAsync(int forumId, int userId) {
            this.DenyForumUserAsync(forumId, userId, null);
        }
        
        /// <remarks/>
        public void DenyForumUserAsync(int forumId, int userId, object userState) {
            if ((this.DenyForumUserOperationCompleted == null)) {
                this.DenyForumUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDenyForumUserOperationCompleted);
            }
            this.InvokeAsync("DenyForumUser", new object[] {
                        forumId,
                        userId}, this.DenyForumUserOperationCompleted, userState);
        }
        
        private void OnDenyForumUserOperationCompleted(object arg) {
            if ((this.DenyForumUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DenyForumUserCompleted(this, new DenyForumUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/RevokeForumUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RevokeForumUser(int forumId, int userId) {
            object[] results = this.Invoke("RevokeForumUser", new object[] {
                        forumId,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RevokeForumUserAsync(int forumId, int userId) {
            this.RevokeForumUserAsync(forumId, userId, null);
        }
        
        /// <remarks/>
        public void RevokeForumUserAsync(int forumId, int userId, object userState) {
            if ((this.RevokeForumUserOperationCompleted == null)) {
                this.RevokeForumUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevokeForumUserOperationCompleted);
            }
            this.InvokeAsync("RevokeForumUser", new object[] {
                        forumId,
                        userId}, this.RevokeForumUserOperationCompleted, userState);
        }
        
        private void OnRevokeForumUserOperationCompleted(object arg) {
            if ((this.RevokeForumUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevokeForumUserCompleted(this, new RevokeForumUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AuthenticateUser", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser AuthenticateUser(int forumId, string userName, string password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        forumId,
                        userName,
                        password});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(int forumId, string userName, string password) {
            this.AuthenticateUserAsync(forumId, userName, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(int forumId, string userName, string password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        forumId,
                        userName,
                        password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserByUserProfileId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUser GetForumUserByUserProfileId(int forumId, long userProfileId) {
            object[] results = this.Invoke("GetForumUserByUserProfileId", new object[] {
                        forumId,
                        userProfileId});
            return ((WsForumUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserByUserProfileIdAsync(int forumId, long userProfileId) {
            this.GetForumUserByUserProfileIdAsync(forumId, userProfileId, null);
        }
        
        /// <remarks/>
        public void GetForumUserByUserProfileIdAsync(int forumId, long userProfileId, object userState) {
            if ((this.GetForumUserByUserProfileIdOperationCompleted == null)) {
                this.GetForumUserByUserProfileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserByUserProfileIdOperationCompleted);
            }
            this.InvokeAsync("GetForumUserByUserProfileId", new object[] {
                        forumId,
                        userProfileId}, this.GetForumUserByUserProfileIdOperationCompleted, userState);
        }
        
        private void OnGetForumUserByUserProfileIdOperationCompleted(object arg) {
            if ((this.GetForumUserByUserProfileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserByUserProfileIdCompleted(this, new GetForumUserByUserProfileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetUserProfileIdByForumUserId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserProfileIdByForumUserId(int forumUserId, ref long userProfileId) {
            object[] results = this.Invoke("GetUserProfileIdByForumUserId", new object[] {
                        forumUserId,
                        userProfileId});
            userProfileId = ((long)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserProfileIdByForumUserIdAsync(int forumUserId, long userProfileId) {
            this.GetUserProfileIdByForumUserIdAsync(forumUserId, userProfileId, null);
        }
        
        /// <remarks/>
        public void GetUserProfileIdByForumUserIdAsync(int forumUserId, long userProfileId, object userState) {
            if ((this.GetUserProfileIdByForumUserIdOperationCompleted == null)) {
                this.GetUserProfileIdByForumUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserProfileIdByForumUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserProfileIdByForumUserId", new object[] {
                        forumUserId,
                        userProfileId}, this.GetUserProfileIdByForumUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserProfileIdByForumUserIdOperationCompleted(object arg) {
            if ((this.GetUserProfileIdByForumUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserProfileIdByForumUserIdCompleted(this, new GetUserProfileIdByForumUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCategory", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory GetCategory(int categoryId) {
            object[] results = this.Invoke("GetCategory", new object[] {
                        categoryId});
            return ((WsCategory)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryAsync(int categoryId) {
            this.GetCategoryAsync(categoryId, null);
        }
        
        /// <remarks/>
        public void GetCategoryAsync(int categoryId, object userState) {
            if ((this.GetCategoryOperationCompleted == null)) {
                this.GetCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryOperationCompleted);
            }
            this.InvokeAsync("GetCategory", new object[] {
                        categoryId}, this.GetCategoryOperationCompleted, userState);
        }
        
        private void OnGetCategoryOperationCompleted(object arg) {
            if ((this.GetCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryCompleted(this, new GetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumCategories", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] GetForumCategories(int forumId, bool includeSpecialCategories) {
            object[] results = this.Invoke("GetForumCategories", new object[] {
                        forumId,
                        includeSpecialCategories});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumCategoriesAsync(int forumId, bool includeSpecialCategories) {
            this.GetForumCategoriesAsync(forumId, includeSpecialCategories, null);
        }
        
        /// <remarks/>
        public void GetForumCategoriesAsync(int forumId, bool includeSpecialCategories, object userState) {
            if ((this.GetForumCategoriesOperationCompleted == null)) {
                this.GetForumCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetForumCategories", new object[] {
                        forumId,
                        includeSpecialCategories}, this.GetForumCategoriesOperationCompleted, userState);
        }
        
        private void OnGetForumCategoriesOperationCompleted(object arg) {
            if ((this.GetForumCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumCategoriesCompleted(this, new GetForumCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumTopLevelCategories", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] GetForumTopLevelCategories(int forumId, bool includeSpecialCategories) {
            object[] results = this.Invoke("GetForumTopLevelCategories", new object[] {
                        forumId,
                        includeSpecialCategories});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumTopLevelCategoriesAsync(int forumId, bool includeSpecialCategories) {
            this.GetForumTopLevelCategoriesAsync(forumId, includeSpecialCategories, null);
        }
        
        /// <remarks/>
        public void GetForumTopLevelCategoriesAsync(int forumId, bool includeSpecialCategories, object userState) {
            if ((this.GetForumTopLevelCategoriesOperationCompleted == null)) {
                this.GetForumTopLevelCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumTopLevelCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetForumTopLevelCategories", new object[] {
                        forumId,
                        includeSpecialCategories}, this.GetForumTopLevelCategoriesOperationCompleted, userState);
        }
        
        private void OnGetForumTopLevelCategoriesOperationCompleted(object arg) {
            if ((this.GetForumTopLevelCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumTopLevelCategoriesCompleted(this, new GetForumTopLevelCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumSubCategories", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] GetForumSubCategories(int forumId, int parentCategoryId, bool includeSpecialCategories) {
            object[] results = this.Invoke("GetForumSubCategories", new object[] {
                        forumId,
                        parentCategoryId,
                        includeSpecialCategories});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumSubCategoriesAsync(int forumId, int parentCategoryId, bool includeSpecialCategories) {
            this.GetForumSubCategoriesAsync(forumId, parentCategoryId, includeSpecialCategories, null);
        }
        
        /// <remarks/>
        public void GetForumSubCategoriesAsync(int forumId, int parentCategoryId, bool includeSpecialCategories, object userState) {
            if ((this.GetForumSubCategoriesOperationCompleted == null)) {
                this.GetForumSubCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumSubCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetForumSubCategories", new object[] {
                        forumId,
                        parentCategoryId,
                        includeSpecialCategories}, this.GetForumSubCategoriesOperationCompleted, userState);
        }
        
        private void OnGetForumSubCategoriesOperationCompleted(object arg) {
            if ((this.GetForumSubCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumSubCategoriesCompleted(this, new GetForumSubCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetAnnouncementCategories", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] GetAnnouncementCategories(int forumId) {
            object[] results = this.Invoke("GetAnnouncementCategories", new object[] {
                        forumId});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnouncementCategoriesAsync(int forumId) {
            this.GetAnnouncementCategoriesAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetAnnouncementCategoriesAsync(int forumId, object userState) {
            if ((this.GetAnnouncementCategoriesOperationCompleted == null)) {
                this.GetAnnouncementCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnouncementCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAnnouncementCategories", new object[] {
                        forumId}, this.GetAnnouncementCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAnnouncementCategoriesOperationCompleted(object arg) {
            if ((this.GetAnnouncementCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnouncementCategoriesCompleted(this, new GetAnnouncementCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumCategories", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] UpdateForumCategories(int forumId, WsCategory[] categories) {
            object[] results = this.Invoke("UpdateForumCategories", new object[] {
                        forumId,
                        categories});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumCategoriesAsync(int forumId, WsCategory[] categories) {
            this.UpdateForumCategoriesAsync(forumId, categories, null);
        }
        
        /// <remarks/>
        public void UpdateForumCategoriesAsync(int forumId, WsCategory[] categories, object userState) {
            if ((this.UpdateForumCategoriesOperationCompleted == null)) {
                this.UpdateForumCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumCategoriesOperationCompleted);
            }
            this.InvokeAsync("UpdateForumCategories", new object[] {
                        forumId,
                        categories}, this.UpdateForumCategoriesOperationCompleted, userState);
        }
        
        private void OnUpdateForumCategoriesOperationCompleted(object arg) {
            if ((this.UpdateForumCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumCategoriesCompleted(this, new UpdateForumCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumCategoriesWithParent", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] UpdateForumCategoriesWithParent(int forumId, WsCategory[] categories, int parentCategoryId) {
            object[] results = this.Invoke("UpdateForumCategoriesWithParent", new object[] {
                        forumId,
                        categories,
                        parentCategoryId});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumCategoriesWithParentAsync(int forumId, WsCategory[] categories, int parentCategoryId) {
            this.UpdateForumCategoriesWithParentAsync(forumId, categories, parentCategoryId, null);
        }
        
        /// <remarks/>
        public void UpdateForumCategoriesWithParentAsync(int forumId, WsCategory[] categories, int parentCategoryId, object userState) {
            if ((this.UpdateForumCategoriesWithParentOperationCompleted == null)) {
                this.UpdateForumCategoriesWithParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumCategoriesWithParentOperationCompleted);
            }
            this.InvokeAsync("UpdateForumCategoriesWithParent", new object[] {
                        forumId,
                        categories,
                        parentCategoryId}, this.UpdateForumCategoriesWithParentOperationCompleted, userState);
        }
        
        private void OnUpdateForumCategoriesWithParentOperationCompleted(object arg) {
            if ((this.UpdateForumCategoriesWithParentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumCategoriesWithParentCompleted(this, new UpdateForumCategoriesWithParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/ReorderSpecialCategories", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCategory[] ReorderSpecialCategories(int forumId, WsCategory[] categories) {
            object[] results = this.Invoke("ReorderSpecialCategories", new object[] {
                        forumId,
                        categories});
            return ((WsCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ReorderSpecialCategoriesAsync(int forumId, WsCategory[] categories) {
            this.ReorderSpecialCategoriesAsync(forumId, categories, null);
        }
        
        /// <remarks/>
        public void ReorderSpecialCategoriesAsync(int forumId, WsCategory[] categories, object userState) {
            if ((this.ReorderSpecialCategoriesOperationCompleted == null)) {
                this.ReorderSpecialCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReorderSpecialCategoriesOperationCompleted);
            }
            this.InvokeAsync("ReorderSpecialCategories", new object[] {
                        forumId,
                        categories}, this.ReorderSpecialCategoriesOperationCompleted, userState);
        }
        
        private void OnReorderSpecialCategoriesOperationCompleted(object arg) {
            if ((this.ReorderSpecialCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReorderSpecialCategoriesCompleted(this, new ReorderSpecialCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewCategory", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewCategory(int forumId, string categoryName, string categoryDescription, int parentcategoryId) {
            object[] results = this.Invoke("AddNewCategory", new object[] {
                        forumId,
                        categoryName,
                        categoryDescription,
                        parentcategoryId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewCategoryAsync(int forumId, string categoryName, string categoryDescription, int parentcategoryId) {
            this.AddNewCategoryAsync(forumId, categoryName, categoryDescription, parentcategoryId, null);
        }
        
        /// <remarks/>
        public void AddNewCategoryAsync(int forumId, string categoryName, string categoryDescription, int parentcategoryId, object userState) {
            if ((this.AddNewCategoryOperationCompleted == null)) {
                this.AddNewCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewCategoryOperationCompleted);
            }
            this.InvokeAsync("AddNewCategory", new object[] {
                        forumId,
                        categoryName,
                        categoryDescription,
                        parentcategoryId}, this.AddNewCategoryOperationCompleted, userState);
        }
        
        private void OnAddNewCategoryOperationCompleted(object arg) {
            if ((this.AddNewCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewCategoryCompleted(this, new AddNewCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateCategory", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategory(int categoryId, string name, string description) {
            object[] results = this.Invoke("UpdateCategory", new object[] {
                        categoryId,
                        name,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int categoryId, string name, string description) {
            this.UpdateCategoryAsync(categoryId, name, description, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int categoryId, string name, string description, object userState) {
            if ((this.UpdateCategoryOperationCompleted == null)) {
                this.UpdateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryOperationCompleted);
            }
            this.InvokeAsync("UpdateCategory", new object[] {
                        categoryId,
                        name,
                        description}, this.UpdateCategoryOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryOperationCompleted(object arg) {
            if ((this.UpdateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryCompleted(this, new UpdateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteCategory", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteCategory(int categoryId) {
            object[] results = this.Invoke("DeleteCategory", new object[] {
                        categoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int categoryId) {
            this.DeleteCategoryAsync(categoryId, null);
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int categoryId, object userState) {
            if ((this.DeleteCategoryOperationCompleted == null)) {
                this.DeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteCategory", new object[] {
                        categoryId}, this.DeleteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteCategoryOperationCompleted(object arg) {
            if ((this.DeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCategoryCompleted(this, new DeleteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/IncrementCategoryOrderNumber", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IncrementCategoryOrderNumber(int forumId, int categoryId) {
            object[] results = this.Invoke("IncrementCategoryOrderNumber", new object[] {
                        forumId,
                        categoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementCategoryOrderNumberAsync(int forumId, int categoryId) {
            this.IncrementCategoryOrderNumberAsync(forumId, categoryId, null);
        }
        
        /// <remarks/>
        public void IncrementCategoryOrderNumberAsync(int forumId, int categoryId, object userState) {
            if ((this.IncrementCategoryOrderNumberOperationCompleted == null)) {
                this.IncrementCategoryOrderNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementCategoryOrderNumberOperationCompleted);
            }
            this.InvokeAsync("IncrementCategoryOrderNumber", new object[] {
                        forumId,
                        categoryId}, this.IncrementCategoryOrderNumberOperationCompleted, userState);
        }
        
        private void OnIncrementCategoryOrderNumberOperationCompleted(object arg) {
            if ((this.IncrementCategoryOrderNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementCategoryOrderNumberCompleted(this, new IncrementCategoryOrderNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DecrementCategoryOrderNumber", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DecrementCategoryOrderNumber(int forumId, int categoryId) {
            object[] results = this.Invoke("DecrementCategoryOrderNumber", new object[] {
                        forumId,
                        categoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DecrementCategoryOrderNumberAsync(int forumId, int categoryId) {
            this.DecrementCategoryOrderNumberAsync(forumId, categoryId, null);
        }
        
        /// <remarks/>
        public void DecrementCategoryOrderNumberAsync(int forumId, int categoryId, object userState) {
            if ((this.DecrementCategoryOrderNumberOperationCompleted == null)) {
                this.DecrementCategoryOrderNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecrementCategoryOrderNumberOperationCompleted);
            }
            this.InvokeAsync("DecrementCategoryOrderNumber", new object[] {
                        forumId,
                        categoryId}, this.DecrementCategoryOrderNumberOperationCompleted, userState);
        }
        
        private void OnDecrementCategoryOrderNumberOperationCompleted(object arg) {
            if ((this.DecrementCategoryOrderNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecrementCategoryOrderNumberCompleted(this, new DecrementCategoryOrderNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsThread AddNewThread(int forumId, int categoryId, int forumUserId, WsThread thread, WsComment firstComment) {
            object[] results = this.Invoke("AddNewThread", new object[] {
                        forumId,
                        categoryId,
                        forumUserId,
                        thread,
                        firstComment});
            return ((WsThread)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewThreadAsync(int forumId, int categoryId, int forumUserId, WsThread thread, WsComment firstComment) {
            this.AddNewThreadAsync(forumId, categoryId, forumUserId, thread, firstComment, null);
        }
        
        /// <remarks/>
        public void AddNewThreadAsync(int forumId, int categoryId, int forumUserId, WsThread thread, WsComment firstComment, object userState) {
            if ((this.AddNewThreadOperationCompleted == null)) {
                this.AddNewThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewThreadOperationCompleted);
            }
            this.InvokeAsync("AddNewThread", new object[] {
                        forumId,
                        categoryId,
                        forumUserId,
                        thread,
                        firstComment}, this.AddNewThreadOperationCompleted, userState);
        }
        
        private void OnAddNewThreadOperationCompleted(object arg) {
            if ((this.AddNewThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewThreadCompleted(this, new AddNewThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsThread GetThread(long threadId) {
            object[] results = this.Invoke("GetThread", new object[] {
                        threadId});
            return ((WsThread)(results[0]));
        }
        
        /// <remarks/>
        public void GetThreadAsync(long threadId) {
            this.GetThreadAsync(threadId, null);
        }
        
        /// <remarks/>
        public void GetThreadAsync(long threadId, object userState) {
            if ((this.GetThreadOperationCompleted == null)) {
                this.GetThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThreadOperationCompleted);
            }
            this.InvokeAsync("GetThread", new object[] {
                        threadId}, this.GetThreadOperationCompleted, userState);
        }
        
        private void OnGetThreadOperationCompleted(object arg) {
            if ((this.GetThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThreadCompleted(this, new GetThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsThread UpdateThread(WsThread thread) {
            object[] results = this.Invoke("UpdateThread", new object[] {
                        thread});
            return ((WsThread)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateThreadAsync(WsThread thread) {
            this.UpdateThreadAsync(thread, null);
        }
        
        /// <remarks/>
        public void UpdateThreadAsync(WsThread thread, object userState) {
            if ((this.UpdateThreadOperationCompleted == null)) {
                this.UpdateThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateThreadOperationCompleted);
            }
            this.InvokeAsync("UpdateThread", new object[] {
                        thread}, this.UpdateThreadOperationCompleted, userState);
        }
        
        private void OnUpdateThreadOperationCompleted(object arg) {
            if ((this.UpdateThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateThreadCompleted(this, new UpdateThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXThreadsFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] GetNextXThreadsFromY(long forumId, int categoryId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, out int totalResults) {
            object[] results = this.Invoke("GetNextXThreadsFromY", new object[] {
                        forumId,
                        categoryId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours});
            totalResults = ((int)(results[1]));
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXThreadsFromYAsync(long forumId, int categoryId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours) {
            this.GetNextXThreadsFromYAsync(forumId, categoryId, maximumRows, startRowIndex, sticky, newDate, popularHours, null);
        }
        
        /// <remarks/>
        public void GetNextXThreadsFromYAsync(long forumId, int categoryId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, object userState) {
            if ((this.GetNextXThreadsFromYOperationCompleted == null)) {
                this.GetNextXThreadsFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXThreadsFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXThreadsFromY", new object[] {
                        forumId,
                        categoryId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours}, this.GetNextXThreadsFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXThreadsFromYOperationCompleted(object arg) {
            if ((this.GetNextXThreadsFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXThreadsFromYCompleted(this, new GetNextXThreadsFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXAnnouncementThreadsFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsThread[] GetNextXAnnouncementThreadsFromY(int forumId, int maximumRows, int startRowIndex) {
            object[] results = this.Invoke("GetNextXAnnouncementThreadsFromY", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex});
            return ((WsThread[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXAnnouncementThreadsFromYAsync(int forumId, int maximumRows, int startRowIndex) {
            this.GetNextXAnnouncementThreadsFromYAsync(forumId, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetNextXAnnouncementThreadsFromYAsync(int forumId, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetNextXAnnouncementThreadsFromYOperationCompleted == null)) {
                this.GetNextXAnnouncementThreadsFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXAnnouncementThreadsFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXAnnouncementThreadsFromY", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex}, this.GetNextXAnnouncementThreadsFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXAnnouncementThreadsFromYOperationCompleted(object arg) {
            if ((this.GetNextXAnnouncementThreadsFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXAnnouncementThreadsFromYCompleted(this, new GetNextXAnnouncementThreadsFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/LockThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LockThread(long threadId, int forumUserId) {
            object[] results = this.Invoke("LockThread", new object[] {
                        threadId,
                        forumUserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LockThreadAsync(long threadId, int forumUserId) {
            this.LockThreadAsync(threadId, forumUserId, null);
        }
        
        /// <remarks/>
        public void LockThreadAsync(long threadId, int forumUserId, object userState) {
            if ((this.LockThreadOperationCompleted == null)) {
                this.LockThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockThreadOperationCompleted);
            }
            this.InvokeAsync("LockThread", new object[] {
                        threadId,
                        forumUserId}, this.LockThreadOperationCompleted, userState);
        }
        
        private void OnLockThreadOperationCompleted(object arg) {
            if ((this.LockThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockThreadCompleted(this, new LockThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UnlockThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnlockThread(long threadId) {
            object[] results = this.Invoke("UnlockThread", new object[] {
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockThreadAsync(long threadId) {
            this.UnlockThreadAsync(threadId, null);
        }
        
        /// <remarks/>
        public void UnlockThreadAsync(long threadId, object userState) {
            if ((this.UnlockThreadOperationCompleted == null)) {
                this.UnlockThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockThreadOperationCompleted);
            }
            this.InvokeAsync("UnlockThread", new object[] {
                        threadId}, this.UnlockThreadOperationCompleted, userState);
        }
        
        private void OnUnlockThreadOperationCompleted(object arg) {
            if ((this.UnlockThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockThreadCompleted(this, new UnlockThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetStickyThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetStickyThread(long threadId, bool sticky) {
            object[] results = this.Invoke("SetStickyThread", new object[] {
                        threadId,
                        sticky});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetStickyThreadAsync(long threadId, bool sticky) {
            this.SetStickyThreadAsync(threadId, sticky, null);
        }
        
        /// <remarks/>
        public void SetStickyThreadAsync(long threadId, bool sticky, object userState) {
            if ((this.SetStickyThreadOperationCompleted == null)) {
                this.SetStickyThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetStickyThreadOperationCompleted);
            }
            this.InvokeAsync("SetStickyThread", new object[] {
                        threadId,
                        sticky}, this.SetStickyThreadOperationCompleted, userState);
        }
        
        private void OnSetStickyThreadOperationCompleted(object arg) {
            if ((this.SetStickyThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetStickyThreadCompleted(this, new SetStickyThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetFeatureThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetFeatureThread(long threadId, bool featured) {
            object[] results = this.Invoke("SetFeatureThread", new object[] {
                        threadId,
                        featured});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetFeatureThreadAsync(long threadId, bool featured) {
            this.SetFeatureThreadAsync(threadId, featured, null);
        }
        
        /// <remarks/>
        public void SetFeatureThreadAsync(long threadId, bool featured, object userState) {
            if ((this.SetFeatureThreadOperationCompleted == null)) {
                this.SetFeatureThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFeatureThreadOperationCompleted);
            }
            this.InvokeAsync("SetFeatureThread", new object[] {
                        threadId,
                        featured}, this.SetFeatureThreadOperationCompleted, userState);
        }
        
        private void OnSetFeatureThreadOperationCompleted(object arg) {
            if ((this.SetFeatureThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFeatureThreadCompleted(this, new SetFeatureThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetThreadMarkAsRead", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetThreadMarkAsRead(long threadId) {
            object[] results = this.Invoke("SetThreadMarkAsRead", new object[] {
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetThreadMarkAsReadAsync(long threadId) {
            this.SetThreadMarkAsReadAsync(threadId, null);
        }
        
        /// <remarks/>
        public void SetThreadMarkAsReadAsync(long threadId, object userState) {
            if ((this.SetThreadMarkAsReadOperationCompleted == null)) {
                this.SetThreadMarkAsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetThreadMarkAsReadOperationCompleted);
            }
            this.InvokeAsync("SetThreadMarkAsRead", new object[] {
                        threadId}, this.SetThreadMarkAsReadOperationCompleted, userState);
        }
        
        private void OnSetThreadMarkAsReadOperationCompleted(object arg) {
            if ((this.SetThreadMarkAsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetThreadMarkAsReadCompleted(this, new SetThreadMarkAsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/MarkAllAsRead", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MarkAllAsRead(int forumId) {
            object[] results = this.Invoke("MarkAllAsRead", new object[] {
                        forumId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MarkAllAsReadAsync(int forumId) {
            this.MarkAllAsReadAsync(forumId, null);
        }
        
        /// <remarks/>
        public void MarkAllAsReadAsync(int forumId, object userState) {
            if ((this.MarkAllAsReadOperationCompleted == null)) {
                this.MarkAllAsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkAllAsReadOperationCompleted);
            }
            this.InvokeAsync("MarkAllAsRead", new object[] {
                        forumId}, this.MarkAllAsReadOperationCompleted, userState);
        }
        
        private void OnMarkAllAsReadOperationCompleted(object arg) {
            if ((this.MarkAllAsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkAllAsReadCompleted(this, new MarkAllAsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/IncrementThreadViewCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IncrementThreadViewCount(long threadId) {
            object[] results = this.Invoke("IncrementThreadViewCount", new object[] {
                        threadId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementThreadViewCountAsync(long threadId) {
            this.IncrementThreadViewCountAsync(threadId, null);
        }
        
        /// <remarks/>
        public void IncrementThreadViewCountAsync(long threadId, object userState) {
            if ((this.IncrementThreadViewCountOperationCompleted == null)) {
                this.IncrementThreadViewCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementThreadViewCountOperationCompleted);
            }
            this.InvokeAsync("IncrementThreadViewCount", new object[] {
                        threadId}, this.IncrementThreadViewCountOperationCompleted, userState);
        }
        
        private void OnIncrementThreadViewCountOperationCompleted(object arg) {
            if ((this.IncrementThreadViewCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementThreadViewCountCompleted(this, new IncrementThreadViewCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteThread(long threadId) {
            object[] results = this.Invoke("DeleteThread", new object[] {
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteThreadAsync(long threadId) {
            this.DeleteThreadAsync(threadId, null);
        }
        
        /// <remarks/>
        public void DeleteThreadAsync(long threadId, object userState) {
            if ((this.DeleteThreadOperationCompleted == null)) {
                this.DeleteThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteThreadOperationCompleted);
            }
            this.InvokeAsync("DeleteThread", new object[] {
                        threadId}, this.DeleteThreadOperationCompleted, userState);
        }
        
        private void OnDeleteThreadOperationCompleted(object arg) {
            if ((this.DeleteThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteThreadCompleted(this, new DeleteThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/ApproveThread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveThread(long threadId) {
            object[] results = this.Invoke("ApproveThread", new object[] {
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveThreadAsync(long threadId) {
            this.ApproveThreadAsync(threadId, null);
        }
        
        /// <remarks/>
        public void ApproveThreadAsync(long threadId, object userState) {
            if ((this.ApproveThreadOperationCompleted == null)) {
                this.ApproveThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveThreadOperationCompleted);
            }
            this.InvokeAsync("ApproveThread", new object[] {
                        threadId}, this.ApproveThreadOperationCompleted, userState);
        }
        
        private void OnApproveThreadOperationCompleted(object arg) {
            if ((this.ApproveThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveThreadCompleted(this, new ApproveThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetThreadPublishStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetThreadPublishStatus(long threadId, PublishStatusEnum status) {
            object[] results = this.Invoke("SetThreadPublishStatus", new object[] {
                        threadId,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetThreadPublishStatusAsync(long threadId, PublishStatusEnum status) {
            this.SetThreadPublishStatusAsync(threadId, status, null);
        }
        
        /// <remarks/>
        public void SetThreadPublishStatusAsync(long threadId, PublishStatusEnum status, object userState) {
            if ((this.SetThreadPublishStatusOperationCompleted == null)) {
                this.SetThreadPublishStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetThreadPublishStatusOperationCompleted);
            }
            this.InvokeAsync("SetThreadPublishStatus", new object[] {
                        threadId,
                        status}, this.SetThreadPublishStatusOperationCompleted, userState);
        }
        
        private void OnSetThreadPublishStatusOperationCompleted(object arg) {
            if ((this.SetThreadPublishStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetThreadPublishStatusCompleted(this, new SetThreadPublishStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewComment", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment AddNewComment(long threadId, int forumUserId, WsComment comment) {
            object[] results = this.Invoke("AddNewComment", new object[] {
                        threadId,
                        forumUserId,
                        comment});
            return ((WsComment)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewCommentAsync(long threadId, int forumUserId, WsComment comment) {
            this.AddNewCommentAsync(threadId, forumUserId, comment, null);
        }
        
        /// <remarks/>
        public void AddNewCommentAsync(long threadId, int forumUserId, WsComment comment, object userState) {
            if ((this.AddNewCommentOperationCompleted == null)) {
                this.AddNewCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewCommentOperationCompleted);
            }
            this.InvokeAsync("AddNewComment", new object[] {
                        threadId,
                        forumUserId,
                        comment}, this.AddNewCommentOperationCompleted, userState);
        }
        
        private void OnAddNewCommentOperationCompleted(object arg) {
            if ((this.AddNewCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewCommentCompleted(this, new AddNewCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetComment", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment GetComment(long commentId) {
            object[] results = this.Invoke("GetComment", new object[] {
                        commentId});
            return ((WsComment)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentAsync(long commentId) {
            this.GetCommentAsync(commentId, null);
        }
        
        /// <remarks/>
        public void GetCommentAsync(long commentId, object userState) {
            if ((this.GetCommentOperationCompleted == null)) {
                this.GetCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentOperationCompleted);
            }
            this.InvokeAsync("GetComment", new object[] {
                        commentId}, this.GetCommentOperationCompleted, userState);
        }
        
        private void OnGetCommentOperationCompleted(object arg) {
            if ((this.GetCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentCompleted(this, new GetCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetCommentViewedByAdmin", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetCommentViewedByAdmin(long commentId) {
            object[] results = this.Invoke("SetCommentViewedByAdmin", new object[] {
                        commentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetCommentViewedByAdminAsync(long commentId) {
            this.SetCommentViewedByAdminAsync(commentId, null);
        }
        
        /// <remarks/>
        public void SetCommentViewedByAdminAsync(long commentId, object userState) {
            if ((this.SetCommentViewedByAdminOperationCompleted == null)) {
                this.SetCommentViewedByAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCommentViewedByAdminOperationCompleted);
            }
            this.InvokeAsync("SetCommentViewedByAdmin", new object[] {
                        commentId}, this.SetCommentViewedByAdminOperationCompleted, userState);
        }
        
        private void OnSetCommentViewedByAdminOperationCompleted(object arg) {
            if ((this.SetCommentViewedByAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCommentViewedByAdminCompleted(this, new SetCommentViewedByAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateComment", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment UpdateComment(WsComment comment) {
            object[] results = this.Invoke("UpdateComment", new object[] {
                        comment});
            return ((WsComment)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommentAsync(WsComment comment) {
            this.UpdateCommentAsync(comment, null);
        }
        
        /// <remarks/>
        public void UpdateCommentAsync(WsComment comment, object userState) {
            if ((this.UpdateCommentOperationCompleted == null)) {
                this.UpdateCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateComment", new object[] {
                        comment}, this.UpdateCommentOperationCompleted, userState);
        }
        
        private void OnUpdateCommentOperationCompleted(object arg) {
            if ((this.UpdateCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommentCompleted(this, new UpdateCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateCommentBody", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCommentBody(long commentId, string commentBody) {
            object[] results = this.Invoke("UpdateCommentBody", new object[] {
                        commentId,
                        commentBody});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommentBodyAsync(long commentId, string commentBody) {
            this.UpdateCommentBodyAsync(commentId, commentBody, null);
        }
        
        /// <remarks/>
        public void UpdateCommentBodyAsync(long commentId, string commentBody, object userState) {
            if ((this.UpdateCommentBodyOperationCompleted == null)) {
                this.UpdateCommentBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommentBodyOperationCompleted);
            }
            this.InvokeAsync("UpdateCommentBody", new object[] {
                        commentId,
                        commentBody}, this.UpdateCommentBodyOperationCompleted, userState);
        }
        
        private void OnUpdateCommentBodyOperationCompleted(object arg) {
            if ((this.UpdateCommentBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommentBodyCompleted(this, new UpdateCommentBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetPagedComments", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment[] GetPagedComments(long threadId, int maximumRows, int startRowIndex, bool adminView, out int totalResults) {
            object[] results = this.Invoke("GetPagedComments", new object[] {
                        threadId,
                        maximumRows,
                        startRowIndex,
                        adminView});
            totalResults = ((int)(results[1]));
            return ((WsComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedCommentsAsync(long threadId, int maximumRows, int startRowIndex, bool adminView) {
            this.GetPagedCommentsAsync(threadId, maximumRows, startRowIndex, adminView, null);
        }
        
        /// <remarks/>
        public void GetPagedCommentsAsync(long threadId, int maximumRows, int startRowIndex, bool adminView, object userState) {
            if ((this.GetPagedCommentsOperationCompleted == null)) {
                this.GetPagedCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedCommentsOperationCompleted);
            }
            this.InvokeAsync("GetPagedComments", new object[] {
                        threadId,
                        maximumRows,
                        startRowIndex,
                        adminView}, this.GetPagedCommentsOperationCompleted, userState);
        }
        
        private void OnGetPagedCommentsOperationCompleted(object arg) {
            if ((this.GetPagedCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedCommentsCompleted(this, new GetPagedCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetPagedCommentsByCommentId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment[] GetPagedCommentsByCommentId(long commentId, long threadId, int maximumRows, bool adminView, out int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetPagedCommentsByCommentId", new object[] {
                        commentId,
                        threadId,
                        maximumRows,
                        adminView});
            startRowIndex = ((int)(results[1]));
            totalResults = ((int)(results[2]));
            return ((WsComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedCommentsByCommentIdAsync(long commentId, long threadId, int maximumRows, bool adminView) {
            this.GetPagedCommentsByCommentIdAsync(commentId, threadId, maximumRows, adminView, null);
        }
        
        /// <remarks/>
        public void GetPagedCommentsByCommentIdAsync(long commentId, long threadId, int maximumRows, bool adminView, object userState) {
            if ((this.GetPagedCommentsByCommentIdOperationCompleted == null)) {
                this.GetPagedCommentsByCommentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedCommentsByCommentIdOperationCompleted);
            }
            this.InvokeAsync("GetPagedCommentsByCommentId", new object[] {
                        commentId,
                        threadId,
                        maximumRows,
                        adminView}, this.GetPagedCommentsByCommentIdOperationCompleted, userState);
        }
        
        private void OnGetPagedCommentsByCommentIdOperationCompleted(object arg) {
            if ((this.GetPagedCommentsByCommentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedCommentsByCommentIdCompleted(this, new GetPagedCommentsByCommentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXCommentsFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment[] GetNextXCommentsFromY(long threadId, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetNextXCommentsFromY", new object[] {
                        threadId,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXCommentsFromYAsync(long threadId, int maximumRows, int startRowIndex) {
            this.GetNextXCommentsFromYAsync(threadId, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetNextXCommentsFromYAsync(long threadId, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetNextXCommentsFromYOperationCompleted == null)) {
                this.GetNextXCommentsFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXCommentsFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXCommentsFromY", new object[] {
                        threadId,
                        maximumRows,
                        startRowIndex}, this.GetNextXCommentsFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXCommentsFromYOperationCompleted(object arg) {
            if ((this.GetNextXCommentsFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXCommentsFromYCompleted(this, new GetNextXCommentsFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetLastPageOfComments", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment[] GetLastPageOfComments(long threadId, int maximumRows, out int totalResults) {
            object[] results = this.Invoke("GetLastPageOfComments", new object[] {
                        threadId,
                        maximumRows});
            totalResults = ((int)(results[1]));
            return ((WsComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLastPageOfCommentsAsync(long threadId, int maximumRows) {
            this.GetLastPageOfCommentsAsync(threadId, maximumRows, null);
        }
        
        /// <remarks/>
        public void GetLastPageOfCommentsAsync(long threadId, int maximumRows, object userState) {
            if ((this.GetLastPageOfCommentsOperationCompleted == null)) {
                this.GetLastPageOfCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPageOfCommentsOperationCompleted);
            }
            this.InvokeAsync("GetLastPageOfComments", new object[] {
                        threadId,
                        maximumRows}, this.GetLastPageOfCommentsOperationCompleted, userState);
        }
        
        private void OnGetLastPageOfCommentsOperationCompleted(object arg) {
            if ((this.GetLastPageOfCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastPageOfCommentsCompleted(this, new GetLastPageOfCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXCommentsFromYByStatusId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment[] GetNextXCommentsFromYByStatusId(int forumId, PublishStatusEnum publishStatus, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetNextXCommentsFromYByStatusId", new object[] {
                        forumId,
                        publishStatus,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXCommentsFromYByStatusIdAsync(int forumId, PublishStatusEnum publishStatus, int maximumRows, int startRowIndex) {
            this.GetNextXCommentsFromYByStatusIdAsync(forumId, publishStatus, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetNextXCommentsFromYByStatusIdAsync(int forumId, PublishStatusEnum publishStatus, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetNextXCommentsFromYByStatusIdOperationCompleted == null)) {
                this.GetNextXCommentsFromYByStatusIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXCommentsFromYByStatusIdOperationCompleted);
            }
            this.InvokeAsync("GetNextXCommentsFromYByStatusId", new object[] {
                        forumId,
                        publishStatus,
                        maximumRows,
                        startRowIndex}, this.GetNextXCommentsFromYByStatusIdOperationCompleted, userState);
        }
        
        private void OnGetNextXCommentsFromYByStatusIdOperationCompleted(object arg) {
            if ((this.GetNextXCommentsFromYByStatusIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXCommentsFromYByStatusIdCompleted(this, new GetNextXCommentsFromYByStatusIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCommentCounts", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCommentCount GetCommentCounts(int forumId) {
            object[] results = this.Invoke("GetCommentCounts", new object[] {
                        forumId});
            return ((WsCommentCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentCountsAsync(int forumId) {
            this.GetCommentCountsAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetCommentCountsAsync(int forumId, object userState) {
            if ((this.GetCommentCountsOperationCompleted == null)) {
                this.GetCommentCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentCountsOperationCompleted);
            }
            this.InvokeAsync("GetCommentCounts", new object[] {
                        forumId}, this.GetCommentCountsOperationCompleted, userState);
        }
        
        private void OnGetCommentCountsOperationCompleted(object arg) {
            if ((this.GetCommentCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentCountsCompleted(this, new GetCommentCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCommentApprovedCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCommentApprovedCount(int forumUserId, ref int count) {
            object[] results = this.Invoke("GetCommentApprovedCount", new object[] {
                        forumUserId,
                        count});
            count = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentApprovedCountAsync(int forumUserId, int count) {
            this.GetCommentApprovedCountAsync(forumUserId, count, null);
        }
        
        /// <remarks/>
        public void GetCommentApprovedCountAsync(int forumUserId, int count, object userState) {
            if ((this.GetCommentApprovedCountOperationCompleted == null)) {
                this.GetCommentApprovedCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentApprovedCountOperationCompleted);
            }
            this.InvokeAsync("GetCommentApprovedCount", new object[] {
                        forumUserId,
                        count}, this.GetCommentApprovedCountOperationCompleted, userState);
        }
        
        private void OnGetCommentApprovedCountOperationCompleted(object arg) {
            if ((this.GetCommentApprovedCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentApprovedCountCompleted(this, new GetCommentApprovedCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteComment", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteComment(long commentId) {
            object[] results = this.Invoke("DeleteComment", new object[] {
                        commentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCommentAsync(long commentId) {
            this.DeleteCommentAsync(commentId, null);
        }
        
        /// <remarks/>
        public void DeleteCommentAsync(long commentId, object userState) {
            if ((this.DeleteCommentOperationCompleted == null)) {
                this.DeleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteComment", new object[] {
                        commentId}, this.DeleteCommentOperationCompleted, userState);
        }
        
        private void OnDeleteCommentOperationCompleted(object arg) {
            if ((this.DeleteCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommentCompleted(this, new DeleteCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetCommentPublishStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetCommentPublishStatus(long commentId, PublishStatusEnum status) {
            object[] results = this.Invoke("SetCommentPublishStatus", new object[] {
                        commentId,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetCommentPublishStatusAsync(long commentId, PublishStatusEnum status) {
            this.SetCommentPublishStatusAsync(commentId, status, null);
        }
        
        /// <remarks/>
        public void SetCommentPublishStatusAsync(long commentId, PublishStatusEnum status, object userState) {
            if ((this.SetCommentPublishStatusOperationCompleted == null)) {
                this.SetCommentPublishStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCommentPublishStatusOperationCompleted);
            }
            this.InvokeAsync("SetCommentPublishStatus", new object[] {
                        commentId,
                        status}, this.SetCommentPublishStatusOperationCompleted, userState);
        }
        
        private void OnSetCommentPublishStatusOperationCompleted(object arg) {
            if ((this.SetCommentPublishStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCommentPublishStatusCompleted(this, new SetCommentPublishStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewReview", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCommentReview AddNewReview(long commentId, int initiatorId, string reason) {
            object[] results = this.Invoke("AddNewReview", new object[] {
                        commentId,
                        initiatorId,
                        reason});
            return ((WsCommentReview)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewReviewAsync(long commentId, int initiatorId, string reason) {
            this.AddNewReviewAsync(commentId, initiatorId, reason, null);
        }
        
        /// <remarks/>
        public void AddNewReviewAsync(long commentId, int initiatorId, string reason, object userState) {
            if ((this.AddNewReviewOperationCompleted == null)) {
                this.AddNewReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewReviewOperationCompleted);
            }
            this.InvokeAsync("AddNewReview", new object[] {
                        commentId,
                        initiatorId,
                        reason}, this.AddNewReviewOperationCompleted, userState);
        }
        
        private void OnAddNewReviewOperationCompleted(object arg) {
            if ((this.AddNewReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewReviewCompleted(this, new AddNewReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCommentReview", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCommentReview GetCommentReview(long commentReviewId) {
            object[] results = this.Invoke("GetCommentReview", new object[] {
                        commentReviewId});
            return ((WsCommentReview)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentReviewAsync(long commentReviewId) {
            this.GetCommentReviewAsync(commentReviewId, null);
        }
        
        /// <remarks/>
        public void GetCommentReviewAsync(long commentReviewId, object userState) {
            if ((this.GetCommentReviewOperationCompleted == null)) {
                this.GetCommentReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentReviewOperationCompleted);
            }
            this.InvokeAsync("GetCommentReview", new object[] {
                        commentReviewId}, this.GetCommentReviewOperationCompleted, userState);
        }
        
        private void OnGetCommentReviewOperationCompleted(object arg) {
            if ((this.GetCommentReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentReviewCompleted(this, new GetCommentReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCommentReviewById", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsReview GetCommentReviewById(long commentReviewId) {
            object[] results = this.Invoke("GetCommentReviewById", new object[] {
                        commentReviewId});
            return ((WsReview)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentReviewByIdAsync(long commentReviewId) {
            this.GetCommentReviewByIdAsync(commentReviewId, null);
        }
        
        /// <remarks/>
        public void GetCommentReviewByIdAsync(long commentReviewId, object userState) {
            if ((this.GetCommentReviewByIdOperationCompleted == null)) {
                this.GetCommentReviewByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentReviewByIdOperationCompleted);
            }
            this.InvokeAsync("GetCommentReviewById", new object[] {
                        commentReviewId}, this.GetCommentReviewByIdOperationCompleted, userState);
        }
        
        private void OnGetCommentReviewByIdOperationCompleted(object arg) {
            if ((this.GetCommentReviewByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentReviewByIdCompleted(this, new GetCommentReviewByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateCommentReview", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCommentReview UpdateCommentReview(WsCommentReview commentReview) {
            object[] results = this.Invoke("UpdateCommentReview", new object[] {
                        commentReview});
            return ((WsCommentReview)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommentReviewAsync(WsCommentReview commentReview) {
            this.UpdateCommentReviewAsync(commentReview, null);
        }
        
        /// <remarks/>
        public void UpdateCommentReviewAsync(WsCommentReview commentReview, object userState) {
            if ((this.UpdateCommentReviewOperationCompleted == null)) {
                this.UpdateCommentReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommentReviewOperationCompleted);
            }
            this.InvokeAsync("UpdateCommentReview", new object[] {
                        commentReview}, this.UpdateCommentReviewOperationCompleted, userState);
        }
        
        private void OnUpdateCommentReviewOperationCompleted(object arg) {
            if ((this.UpdateCommentReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommentReviewCompleted(this, new UpdateCommentReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/ApprovePost", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApprovePost(long commentReviewId, int reviewerId) {
            object[] results = this.Invoke("ApprovePost", new object[] {
                        commentReviewId,
                        reviewerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApprovePostAsync(long commentReviewId, int reviewerId) {
            this.ApprovePostAsync(commentReviewId, reviewerId, null);
        }
        
        /// <remarks/>
        public void ApprovePostAsync(long commentReviewId, int reviewerId, object userState) {
            if ((this.ApprovePostOperationCompleted == null)) {
                this.ApprovePostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovePostOperationCompleted);
            }
            this.InvokeAsync("ApprovePost", new object[] {
                        commentReviewId,
                        reviewerId}, this.ApprovePostOperationCompleted, userState);
        }
        
        private void OnApprovePostOperationCompleted(object arg) {
            if ((this.ApprovePostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovePostCompleted(this, new ApprovePostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeletePost", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePost(long commentReviewId, int reviewerId) {
            object[] results = this.Invoke("DeletePost", new object[] {
                        commentReviewId,
                        reviewerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePostAsync(long commentReviewId, int reviewerId) {
            this.DeletePostAsync(commentReviewId, reviewerId, null);
        }
        
        /// <remarks/>
        public void DeletePostAsync(long commentReviewId, int reviewerId, object userState) {
            if ((this.DeletePostOperationCompleted == null)) {
                this.DeletePostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePostOperationCompleted);
            }
            this.InvokeAsync("DeletePost", new object[] {
                        commentReviewId,
                        reviewerId}, this.DeletePostOperationCompleted, userState);
        }
        
        private void OnDeletePostOperationCompleted(object arg) {
            if ((this.DeletePostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePostCompleted(this, new DeletePostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXCommentReviewsFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsReview[] GetNextXCommentReviewsFromY(int forumId, int reviewedStatus, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetNextXCommentReviewsFromY", new object[] {
                        forumId,
                        reviewedStatus,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsReview[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXCommentReviewsFromYAsync(int forumId, int reviewedStatus, int maximumRows, int startRowIndex) {
            this.GetNextXCommentReviewsFromYAsync(forumId, reviewedStatus, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetNextXCommentReviewsFromYAsync(int forumId, int reviewedStatus, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetNextXCommentReviewsFromYOperationCompleted == null)) {
                this.GetNextXCommentReviewsFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXCommentReviewsFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXCommentReviewsFromY", new object[] {
                        forumId,
                        reviewedStatus,
                        maximumRows,
                        startRowIndex}, this.GetNextXCommentReviewsFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXCommentReviewsFromYOperationCompleted(object arg) {
            if ((this.GetNextXCommentReviewsFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXCommentReviewsFromYCompleted(this, new GetNextXCommentReviewsFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetCommentReviewCounts", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsCommentReviewCount GetCommentReviewCounts(int forumId) {
            object[] results = this.Invoke("GetCommentReviewCounts", new object[] {
                        forumId});
            return ((WsCommentReviewCount)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentReviewCountsAsync(int forumId) {
            this.GetCommentReviewCountsAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetCommentReviewCountsAsync(int forumId, object userState) {
            if ((this.GetCommentReviewCountsOperationCompleted == null)) {
                this.GetCommentReviewCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentReviewCountsOperationCompleted);
            }
            this.InvokeAsync("GetCommentReviewCounts", new object[] {
                        forumId}, this.GetCommentReviewCountsOperationCompleted, userState);
        }
        
        private void OnGetCommentReviewCountsOperationCompleted(object arg) {
            if ((this.GetCommentReviewCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentReviewCountsCompleted(this, new GetCommentReviewCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewMessage", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsMessage AddNewMessage(WsMessage message) {
            object[] results = this.Invoke("AddNewMessage", new object[] {
                        message});
            return ((WsMessage)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewMessageAsync(WsMessage message) {
            this.AddNewMessageAsync(message, null);
        }
        
        /// <remarks/>
        public void AddNewMessageAsync(WsMessage message, object userState) {
            if ((this.AddNewMessageOperationCompleted == null)) {
                this.AddNewMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewMessageOperationCompleted);
            }
            this.InvokeAsync("AddNewMessage", new object[] {
                        message}, this.AddNewMessageOperationCompleted, userState);
        }
        
        private void OnAddNewMessageOperationCompleted(object arg) {
            if ((this.AddNewMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewMessageCompleted(this, new AddNewMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateMessage", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsMessage UpdateMessage(WsMessage message) {
            object[] results = this.Invoke("UpdateMessage", new object[] {
                        message});
            return ((WsMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageAsync(WsMessage message) {
            this.UpdateMessageAsync(message, null);
        }
        
        /// <remarks/>
        public void UpdateMessageAsync(WsMessage message, object userState) {
            if ((this.UpdateMessageOperationCompleted == null)) {
                this.UpdateMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateMessage", new object[] {
                        message}, this.UpdateMessageOperationCompleted, userState);
        }
        
        private void OnUpdateMessageOperationCompleted(object arg) {
            if ((this.UpdateMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageCompleted(this, new UpdateMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetMessage", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsMessage GetMessage(long messageId) {
            object[] results = this.Invoke("GetMessage", new object[] {
                        messageId});
            return ((WsMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageAsync(long messageId) {
            this.GetMessageAsync(messageId, null);
        }
        
        /// <remarks/>
        public void GetMessageAsync(long messageId, object userState) {
            if ((this.GetMessageOperationCompleted == null)) {
                this.GetMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageOperationCompleted);
            }
            this.InvokeAsync("GetMessage", new object[] {
                        messageId}, this.GetMessageOperationCompleted, userState);
        }
        
        private void OnGetMessageOperationCompleted(object arg) {
            if ((this.GetMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteMessage", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMessage(long messageId, int forumUserId, FolderEnum folder) {
            object[] results = this.Invoke("DeleteMessage", new object[] {
                        messageId,
                        forumUserId,
                        folder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(long messageId, int forumUserId, FolderEnum folder) {
            this.DeleteMessageAsync(messageId, forumUserId, folder, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(long messageId, int forumUserId, FolderEnum folder, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        messageId,
                        forumUserId,
                        folder}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SetMessageStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetMessageStatus(long messageId, bool recipientMessageStatusType, MessageStatusEnum status) {
            object[] results = this.Invoke("SetMessageStatus", new object[] {
                        messageId,
                        recipientMessageStatusType,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetMessageStatusAsync(long messageId, bool recipientMessageStatusType, MessageStatusEnum status) {
            this.SetMessageStatusAsync(messageId, recipientMessageStatusType, status, null);
        }
        
        /// <remarks/>
        public void SetMessageStatusAsync(long messageId, bool recipientMessageStatusType, MessageStatusEnum status, object userState) {
            if ((this.SetMessageStatusOperationCompleted == null)) {
                this.SetMessageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMessageStatusOperationCompleted);
            }
            this.InvokeAsync("SetMessageStatus", new object[] {
                        messageId,
                        recipientMessageStatusType,
                        status}, this.SetMessageStatusOperationCompleted, userState);
        }
        
        private void OnSetMessageStatusOperationCompleted(object arg) {
            if ((this.SetMessageStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMessageStatusCompleted(this, new SetMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXMessageViewFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsMessageView[] GetNextXMessageViewFromY(int forumUserId, FolderEnum folder, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("GetNextXMessageViewFromY", new object[] {
                        forumUserId,
                        folder,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsMessageView[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXMessageViewFromYAsync(int forumUserId, FolderEnum folder, int maximumRows, int startRowIndex) {
            this.GetNextXMessageViewFromYAsync(forumUserId, folder, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void GetNextXMessageViewFromYAsync(int forumUserId, FolderEnum folder, int maximumRows, int startRowIndex, object userState) {
            if ((this.GetNextXMessageViewFromYOperationCompleted == null)) {
                this.GetNextXMessageViewFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXMessageViewFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXMessageViewFromY", new object[] {
                        forumUserId,
                        folder,
                        maximumRows,
                        startRowIndex}, this.GetNextXMessageViewFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXMessageViewFromYOperationCompleted(object arg) {
            if ((this.GetNextXMessageViewFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXMessageViewFromYCompleted(this, new GetNextXMessageViewFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetMessageViewById", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsMessageView GetMessageViewById(long messageId) {
            object[] results = this.Invoke("GetMessageViewById", new object[] {
                        messageId});
            return ((WsMessageView)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageViewByIdAsync(long messageId) {
            this.GetMessageViewByIdAsync(messageId, null);
        }
        
        /// <remarks/>
        public void GetMessageViewByIdAsync(long messageId, object userState) {
            if ((this.GetMessageViewByIdOperationCompleted == null)) {
                this.GetMessageViewByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageViewByIdOperationCompleted);
            }
            this.InvokeAsync("GetMessageViewById", new object[] {
                        messageId}, this.GetMessageViewByIdOperationCompleted, userState);
        }
        
        private void OnGetMessageViewByIdOperationCompleted(object arg) {
            if ((this.GetMessageViewByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageViewByIdCompleted(this, new GetMessageViewByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/HasReachMessageLimit", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasReachMessageLimit(int forumUserId) {
            object[] results = this.Invoke("HasReachMessageLimit", new object[] {
                        forumUserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasReachMessageLimitAsync(int forumUserId) {
            this.HasReachMessageLimitAsync(forumUserId, null);
        }
        
        /// <remarks/>
        public void HasReachMessageLimitAsync(int forumUserId, object userState) {
            if ((this.HasReachMessageLimitOperationCompleted == null)) {
                this.HasReachMessageLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasReachMessageLimitOperationCompleted);
            }
            this.InvokeAsync("HasReachMessageLimit", new object[] {
                        forumUserId}, this.HasReachMessageLimitOperationCompleted, userState);
        }
        
        private void OnHasReachMessageLimitOperationCompleted(object arg) {
            if ((this.HasReachMessageLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasReachMessageLimitCompleted(this, new HasReachMessageLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetPagedDiscussions", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] GetPagedDiscussions(int categoryId, int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, bool adminView, out int totalResults) {
            object[] results = this.Invoke("GetPagedDiscussions", new object[] {
                        categoryId,
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours,
                        adminView});
            totalResults = ((int)(results[1]));
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedDiscussionsAsync(int categoryId, int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, bool adminView) {
            this.GetPagedDiscussionsAsync(categoryId, forumId, maximumRows, startRowIndex, sticky, newDate, popularHours, adminView, null);
        }
        
        /// <remarks/>
        public void GetPagedDiscussionsAsync(int categoryId, int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, bool adminView, object userState) {
            if ((this.GetPagedDiscussionsOperationCompleted == null)) {
                this.GetPagedDiscussionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedDiscussionsOperationCompleted);
            }
            this.InvokeAsync("GetPagedDiscussions", new object[] {
                        categoryId,
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours,
                        adminView}, this.GetPagedDiscussionsOperationCompleted, userState);
        }
        
        private void OnGetPagedDiscussionsOperationCompleted(object arg) {
            if ((this.GetPagedDiscussionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedDiscussionsCompleted(this, new GetPagedDiscussionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXDiscussionsFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] GetNextXDiscussionsFromY(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, out int totalResults) {
            object[] results = this.Invoke("GetNextXDiscussionsFromY", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours});
            totalResults = ((int)(results[1]));
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXDiscussionsFromYAsync(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours) {
            this.GetNextXDiscussionsFromYAsync(forumId, maximumRows, startRowIndex, sticky, newDate, popularHours, null);
        }
        
        /// <remarks/>
        public void GetNextXDiscussionsFromYAsync(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, object userState) {
            if ((this.GetNextXDiscussionsFromYOperationCompleted == null)) {
                this.GetNextXDiscussionsFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXDiscussionsFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXDiscussionsFromY", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours}, this.GetNextXDiscussionsFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXDiscussionsFromYOperationCompleted(object arg) {
            if ((this.GetNextXDiscussionsFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXDiscussionsFromYCompleted(this, new GetNextXDiscussionsFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXDiscussionsFromY_AdminUnread", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] GetNextXDiscussionsFromY_AdminUnread(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, out int totalResults) {
            object[] results = this.Invoke("GetNextXDiscussionsFromY_AdminUnread", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours});
            totalResults = ((int)(results[1]));
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXDiscussionsFromY_AdminUnreadAsync(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours) {
            this.GetNextXDiscussionsFromY_AdminUnreadAsync(forumId, maximumRows, startRowIndex, sticky, newDate, popularHours, null);
        }
        
        /// <remarks/>
        public void GetNextXDiscussionsFromY_AdminUnreadAsync(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, object userState) {
            if ((this.GetNextXDiscussionsFromY_AdminUnreadOperationCompleted == null)) {
                this.GetNextXDiscussionsFromY_AdminUnreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXDiscussionsFromY_AdminUnreadOperationCompleted);
            }
            this.InvokeAsync("GetNextXDiscussionsFromY_AdminUnread", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours}, this.GetNextXDiscussionsFromY_AdminUnreadOperationCompleted, userState);
        }
        
        private void OnGetNextXDiscussionsFromY_AdminUnreadOperationCompleted(object arg) {
            if ((this.GetNextXDiscussionsFromY_AdminUnreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXDiscussionsFromY_AdminUnreadCompleted(this, new GetNextXDiscussionsFromY_AdminUnreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNextXNewDiscussionsFromY", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] GetNextXNewDiscussionsFromY(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, System.DateTime newThreadDate, System.DateTime newCommentDate, out int totalResults) {
            object[] results = this.Invoke("GetNextXNewDiscussionsFromY", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours,
                        newThreadDate,
                        newCommentDate});
            totalResults = ((int)(results[1]));
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextXNewDiscussionsFromYAsync(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, System.DateTime newThreadDate, System.DateTime newCommentDate) {
            this.GetNextXNewDiscussionsFromYAsync(forumId, maximumRows, startRowIndex, sticky, newDate, popularHours, newThreadDate, newCommentDate, null);
        }
        
        /// <remarks/>
        public void GetNextXNewDiscussionsFromYAsync(int forumId, int maximumRows, int startRowIndex, bool sticky, System.DateTime newDate, int popularHours, System.DateTime newThreadDate, System.DateTime newCommentDate, object userState) {
            if ((this.GetNextXNewDiscussionsFromYOperationCompleted == null)) {
                this.GetNextXNewDiscussionsFromYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextXNewDiscussionsFromYOperationCompleted);
            }
            this.InvokeAsync("GetNextXNewDiscussionsFromY", new object[] {
                        forumId,
                        maximumRows,
                        startRowIndex,
                        sticky,
                        newDate,
                        popularHours,
                        newThreadDate,
                        newCommentDate}, this.GetNextXNewDiscussionsFromYOperationCompleted, userState);
        }
        
        private void OnGetNextXNewDiscussionsFromYOperationCompleted(object arg) {
            if ((this.GetNextXNewDiscussionsFromYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextXNewDiscussionsFromYCompleted(this, new GetNextXNewDiscussionsFromYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumDiscussionCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetForumDiscussionCount(int forumId) {
            object[] results = this.Invoke("GetForumDiscussionCount", new object[] {
                        forumId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumDiscussionCountAsync(int forumId) {
            this.GetForumDiscussionCountAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetForumDiscussionCountAsync(int forumId, object userState) {
            if ((this.GetForumDiscussionCountOperationCompleted == null)) {
                this.GetForumDiscussionCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumDiscussionCountOperationCompleted);
            }
            this.InvokeAsync("GetForumDiscussionCount", new object[] {
                        forumId}, this.GetForumDiscussionCountOperationCompleted, userState);
        }
        
        private void OnGetForumDiscussionCountOperationCompleted(object arg) {
            if ((this.GetForumDiscussionCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumDiscussionCountCompleted(this, new GetForumDiscussionCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetContentFilter", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsContentFilter GetContentFilter(int forumId) {
            object[] results = this.Invoke("GetContentFilter", new object[] {
                        forumId});
            return ((WsContentFilter)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentFilterAsync(int forumId) {
            this.GetContentFilterAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetContentFilterAsync(int forumId, object userState) {
            if ((this.GetContentFilterOperationCompleted == null)) {
                this.GetContentFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentFilterOperationCompleted);
            }
            this.InvokeAsync("GetContentFilter", new object[] {
                        forumId}, this.GetContentFilterOperationCompleted, userState);
        }
        
        private void OnGetContentFilterOperationCompleted(object arg) {
            if ((this.GetContentFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentFilterCompleted(this, new GetContentFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateContentFilter", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum UpdateContentFilter(ref WsContentFilter contentFilter) {
            object[] results = this.Invoke("UpdateContentFilter", new object[] {
                        contentFilter});
            contentFilter = ((WsContentFilter)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentFilterAsync(WsContentFilter contentFilter) {
            this.UpdateContentFilterAsync(contentFilter, null);
        }
        
        /// <remarks/>
        public void UpdateContentFilterAsync(WsContentFilter contentFilter, object userState) {
            if ((this.UpdateContentFilterOperationCompleted == null)) {
                this.UpdateContentFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentFilterOperationCompleted);
            }
            this.InvokeAsync("UpdateContentFilter", new object[] {
                        contentFilter}, this.UpdateContentFilterOperationCompleted, userState);
        }
        
        private void OnUpdateContentFilterOperationCompleted(object arg) {
            if ((this.UpdateContentFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentFilterCompleted(this, new UpdateContentFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetRegisteredDomains", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetRegisteredDomains(string customerNum, int resellerId) {
            object[] results = this.Invoke("GetRegisteredDomains", new object[] {
                        customerNum,
                        resellerId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisteredDomainsAsync(string customerNum, int resellerId) {
            this.GetRegisteredDomainsAsync(customerNum, resellerId, null);
        }
        
        /// <remarks/>
        public void GetRegisteredDomainsAsync(string customerNum, int resellerId, object userState) {
            if ((this.GetRegisteredDomainsOperationCompleted == null)) {
                this.GetRegisteredDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisteredDomainsOperationCompleted);
            }
            this.InvokeAsync("GetRegisteredDomains", new object[] {
                        customerNum,
                        resellerId}, this.GetRegisteredDomainsOperationCompleted, userState);
        }
        
        private void OnGetRegisteredDomainsOperationCompleted(object arg) {
            if ((this.GetRegisteredDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisteredDomainsCompleted(this, new GetRegisteredDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetUnusedDomains", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUnusedDomains(string customerNum, int resellerId) {
            object[] results = this.Invoke("GetUnusedDomains", new object[] {
                        customerNum,
                        resellerId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnusedDomainsAsync(string customerNum, int resellerId) {
            this.GetUnusedDomainsAsync(customerNum, resellerId, null);
        }
        
        /// <remarks/>
        public void GetUnusedDomainsAsync(string customerNum, int resellerId, object userState) {
            if ((this.GetUnusedDomainsOperationCompleted == null)) {
                this.GetUnusedDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnusedDomainsOperationCompleted);
            }
            this.InvokeAsync("GetUnusedDomains", new object[] {
                        customerNum,
                        resellerId}, this.GetUnusedDomainsOperationCompleted, userState);
        }
        
        private void OnGetUnusedDomainsOperationCompleted(object arg) {
            if ((this.GetUnusedDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnusedDomainsCompleted(this, new GetUnusedDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/IsForumActive", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsForumActive(string domain) {
            object[] results = this.Invoke("IsForumActive", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsForumActiveAsync(string domain) {
            this.IsForumActiveAsync(domain, null);
        }
        
        /// <remarks/>
        public void IsForumActiveAsync(string domain, object userState) {
            if ((this.IsForumActiveOperationCompleted == null)) {
                this.IsForumActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsForumActiveOperationCompleted);
            }
            this.InvokeAsync("IsForumActive", new object[] {
                        domain}, this.IsForumActiveOperationCompleted, userState);
        }
        
        private void OnIsForumActiveOperationCompleted(object arg) {
            if ((this.IsForumActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsForumActiveCompleted(this, new IsForumActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetLoginData", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum GetLoginData(int forumId, string emailAddress, out string userName, out string password) {
            object[] results = this.Invoke("GetLoginData", new object[] {
                        forumId,
                        emailAddress});
            userName = ((string)(results[1]));
            password = ((string)(results[2]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginDataAsync(int forumId, string emailAddress) {
            this.GetLoginDataAsync(forumId, emailAddress, null);
        }
        
        /// <remarks/>
        public void GetLoginDataAsync(int forumId, string emailAddress, object userState) {
            if ((this.GetLoginDataOperationCompleted == null)) {
                this.GetLoginDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginDataOperationCompleted);
            }
            this.InvokeAsync("GetLoginData", new object[] {
                        forumId,
                        emailAddress}, this.GetLoginDataOperationCompleted, userState);
        }
        
        private void OnGetLoginDataOperationCompleted(object arg) {
            if ((this.GetLoginDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginDataCompleted(this, new GetLoginDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/LogForumApplicationException", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogForumApplicationException(string message) {
            this.Invoke("LogForumApplicationException", new object[] {
                        message});
        }
        
        /// <remarks/>
        public void LogForumApplicationExceptionAsync(string message) {
            this.LogForumApplicationExceptionAsync(message, null);
        }
        
        /// <remarks/>
        public void LogForumApplicationExceptionAsync(string message, object userState) {
            if ((this.LogForumApplicationExceptionOperationCompleted == null)) {
                this.LogForumApplicationExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogForumApplicationExceptionOperationCompleted);
            }
            this.InvokeAsync("LogForumApplicationException", new object[] {
                        message}, this.LogForumApplicationExceptionOperationCompleted, userState);
        }
        
        private void OnLogForumApplicationExceptionOperationCompleted(object arg) {
            if ((this.LogForumApplicationExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogForumApplicationExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/EncryptUserPassword", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EncryptUserPassword(int userId) {
            object[] results = this.Invoke("EncryptUserPassword", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptUserPasswordAsync(int userId) {
            this.EncryptUserPasswordAsync(userId, null);
        }
        
        /// <remarks/>
        public void EncryptUserPasswordAsync(int userId, object userState) {
            if ((this.EncryptUserPasswordOperationCompleted == null)) {
                this.EncryptUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptUserPasswordOperationCompleted);
            }
            this.InvokeAsync("EncryptUserPassword", new object[] {
                        userId}, this.EncryptUserPasswordOperationCompleted, userState);
        }
        
        private void OnEncryptUserPasswordOperationCompleted(object arg) {
            if ((this.EncryptUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptUserPasswordCompleted(this, new EncryptUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/EncryptPasswords", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EncryptPasswords(int[] userIds) {
            object[] results = this.Invoke("EncryptPasswords", new object[] {
                        userIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptPasswordsAsync(int[] userIds) {
            this.EncryptPasswordsAsync(userIds, null);
        }
        
        /// <remarks/>
        public void EncryptPasswordsAsync(int[] userIds, object userState) {
            if ((this.EncryptPasswordsOperationCompleted == null)) {
                this.EncryptPasswordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptPasswordsOperationCompleted);
            }
            this.InvokeAsync("EncryptPasswords", new object[] {
                        userIds}, this.EncryptPasswordsOperationCompleted, userState);
        }
        
        private void OnEncryptPasswordsOperationCompleted(object arg) {
            if ((this.EncryptPasswordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptPasswordsCompleted(this, new EncryptPasswordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DecryptUserPassword", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DecryptUserPassword(int userId) {
            object[] results = this.Invoke("DecryptUserPassword", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptUserPasswordAsync(int userId) {
            this.DecryptUserPasswordAsync(userId, null);
        }
        
        /// <remarks/>
        public void DecryptUserPasswordAsync(int userId, object userState) {
            if ((this.DecryptUserPasswordOperationCompleted == null)) {
                this.DecryptUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptUserPasswordOperationCompleted);
            }
            this.InvokeAsync("DecryptUserPassword", new object[] {
                        userId}, this.DecryptUserPasswordOperationCompleted, userState);
        }
        
        private void OnDecryptUserPasswordOperationCompleted(object arg) {
            if ((this.DecryptUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptUserPasswordCompleted(this, new DecryptUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DecryptPasswords", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DecryptPasswords(int[] userIds) {
            object[] results = this.Invoke("DecryptPasswords", new object[] {
                        userIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptPasswordsAsync(int[] userIds) {
            this.DecryptPasswordsAsync(userIds, null);
        }
        
        /// <remarks/>
        public void DecryptPasswordsAsync(int[] userIds, object userState) {
            if ((this.DecryptPasswordsOperationCompleted == null)) {
                this.DecryptPasswordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptPasswordsOperationCompleted);
            }
            this.InvokeAsync("DecryptPasswords", new object[] {
                        userIds}, this.DecryptPasswordsOperationCompleted, userState);
        }
        
        private void OnDecryptPasswordsOperationCompleted(object arg) {
            if ((this.DecryptPasswordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptPasswordsCompleted(this, new DecryptPasswordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/Test", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AuthenticateWSTAccount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateWSTAccount(string accountUid, string authTokenUid, out string customerNo, out int resellerId) {
            object[] results = this.Invoke("AuthenticateWSTAccount", new object[] {
                        accountUid,
                        authTokenUid});
            customerNo = ((string)(results[1]));
            resellerId = ((int)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateWSTAccountAsync(string accountUid, string authTokenUid) {
            this.AuthenticateWSTAccountAsync(accountUid, authTokenUid, null);
        }
        
        /// <remarks/>
        public void AuthenticateWSTAccountAsync(string accountUid, string authTokenUid, object userState) {
            if ((this.AuthenticateWSTAccountOperationCompleted == null)) {
                this.AuthenticateWSTAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateWSTAccountOperationCompleted);
            }
            this.InvokeAsync("AuthenticateWSTAccount", new object[] {
                        accountUid,
                        authTokenUid}, this.AuthenticateWSTAccountOperationCompleted, userState);
        }
        
        private void OnAuthenticateWSTAccountOperationCompleted(object arg) {
            if ((this.AuthenticateWSTAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateWSTAccountCompleted(this, new AuthenticateWSTAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddForumUserToReceiveEMail", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum AddForumUserToReceiveEMail(int forumId, int forumUserId, long threadId) {
            object[] results = this.Invoke("AddForumUserToReceiveEMail", new object[] {
                        forumId,
                        forumUserId,
                        threadId});
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void AddForumUserToReceiveEMailAsync(int forumId, int forumUserId, long threadId) {
            this.AddForumUserToReceiveEMailAsync(forumId, forumUserId, threadId, null);
        }
        
        /// <remarks/>
        public void AddForumUserToReceiveEMailAsync(int forumId, int forumUserId, long threadId, object userState) {
            if ((this.AddForumUserToReceiveEMailOperationCompleted == null)) {
                this.AddForumUserToReceiveEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddForumUserToReceiveEMailOperationCompleted);
            }
            this.InvokeAsync("AddForumUserToReceiveEMail", new object[] {
                        forumId,
                        forumUserId,
                        threadId}, this.AddForumUserToReceiveEMailOperationCompleted, userState);
        }
        
        private void OnAddForumUserToReceiveEMailOperationCompleted(object arg) {
            if ((this.AddForumUserToReceiveEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddForumUserToReceiveEMailCompleted(this, new AddForumUserToReceiveEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/RemoveForumUserToReceiveEMail", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum RemoveForumUserToReceiveEMail(int forumId, int forumUserId, long threadId) {
            object[] results = this.Invoke("RemoveForumUserToReceiveEMail", new object[] {
                        forumId,
                        forumUserId,
                        threadId});
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveForumUserToReceiveEMailAsync(int forumId, int forumUserId, long threadId) {
            this.RemoveForumUserToReceiveEMailAsync(forumId, forumUserId, threadId, null);
        }
        
        /// <remarks/>
        public void RemoveForumUserToReceiveEMailAsync(int forumId, int forumUserId, long threadId, object userState) {
            if ((this.RemoveForumUserToReceiveEMailOperationCompleted == null)) {
                this.RemoveForumUserToReceiveEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveForumUserToReceiveEMailOperationCompleted);
            }
            this.InvokeAsync("RemoveForumUserToReceiveEMail", new object[] {
                        forumId,
                        forumUserId,
                        threadId}, this.RemoveForumUserToReceiveEMailOperationCompleted, userState);
        }
        
        private void OnRemoveForumUserToReceiveEMailOperationCompleted(object arg) {
            if ((this.RemoveForumUserToReceiveEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveForumUserToReceiveEMailCompleted(this, new RemoveForumUserToReceiveEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserToReceiveEMail", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum GetForumUserToReceiveEMail(ref WsEmailMessage eMailMessage) {
            object[] results = this.Invoke("GetForumUserToReceiveEMail", new object[] {
                        eMailMessage});
            eMailMessage = ((WsEmailMessage)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserToReceiveEMailAsync(WsEmailMessage eMailMessage) {
            this.GetForumUserToReceiveEMailAsync(eMailMessage, null);
        }
        
        /// <remarks/>
        public void GetForumUserToReceiveEMailAsync(WsEmailMessage eMailMessage, object userState) {
            if ((this.GetForumUserToReceiveEMailOperationCompleted == null)) {
                this.GetForumUserToReceiveEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserToReceiveEMailOperationCompleted);
            }
            this.InvokeAsync("GetForumUserToReceiveEMail", new object[] {
                        eMailMessage}, this.GetForumUserToReceiveEMailOperationCompleted, userState);
        }
        
        private void OnGetForumUserToReceiveEMailOperationCompleted(object arg) {
            if ((this.GetForumUserToReceiveEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserToReceiveEMailCompleted(this, new GetForumUserToReceiveEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUserThreadsWithEMailStatus", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsEmailMessageStatus[] GetForumUserThreadsWithEMailStatus(int forumUserId) {
            object[] results = this.Invoke("GetForumUserThreadsWithEMailStatus", new object[] {
                        forumUserId});
            return ((WsEmailMessageStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUserThreadsWithEMailStatusAsync(int forumUserId) {
            this.GetForumUserThreadsWithEMailStatusAsync(forumUserId, null);
        }
        
        /// <remarks/>
        public void GetForumUserThreadsWithEMailStatusAsync(int forumUserId, object userState) {
            if ((this.GetForumUserThreadsWithEMailStatusOperationCompleted == null)) {
                this.GetForumUserThreadsWithEMailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUserThreadsWithEMailStatusOperationCompleted);
            }
            this.InvokeAsync("GetForumUserThreadsWithEMailStatus", new object[] {
                        forumUserId}, this.GetForumUserThreadsWithEMailStatusOperationCompleted, userState);
        }
        
        private void OnGetForumUserThreadsWithEMailStatusOperationCompleted(object arg) {
            if ((this.GetForumUserThreadsWithEMailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUserThreadsWithEMailStatusCompleted(this, new GetForumUserThreadsWithEMailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SendThreadEMail", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum SendThreadEMail(long threadId, string comment) {
            object[] results = this.Invoke("SendThreadEMail", new object[] {
                        threadId,
                        comment});
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void SendThreadEMailAsync(long threadId, string comment) {
            this.SendThreadEMailAsync(threadId, comment, null);
        }
        
        /// <remarks/>
        public void SendThreadEMailAsync(long threadId, string comment, object userState) {
            if ((this.SendThreadEMailOperationCompleted == null)) {
                this.SendThreadEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendThreadEMailOperationCompleted);
            }
            this.InvokeAsync("SendThreadEMail", new object[] {
                        threadId,
                        comment}, this.SendThreadEMailOperationCompleted, userState);
        }
        
        private void OnSendThreadEMailOperationCompleted(object arg) {
            if ((this.SendThreadEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendThreadEMailCompleted(this, new SendThreadEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SendUsersEMail", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum SendUsersEMail(long threadId, string comment, WsForumUserEMailAddress[] usersEmailAddress) {
            object[] results = this.Invoke("SendUsersEMail", new object[] {
                        threadId,
                        comment,
                        usersEmailAddress});
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void SendUsersEMailAsync(long threadId, string comment, WsForumUserEMailAddress[] usersEmailAddress) {
            this.SendUsersEMailAsync(threadId, comment, usersEmailAddress, null);
        }
        
        /// <remarks/>
        public void SendUsersEMailAsync(long threadId, string comment, WsForumUserEMailAddress[] usersEmailAddress, object userState) {
            if ((this.SendUsersEMailOperationCompleted == null)) {
                this.SendUsersEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUsersEMailOperationCompleted);
            }
            this.InvokeAsync("SendUsersEMail", new object[] {
                        threadId,
                        comment,
                        usersEmailAddress}, this.SendUsersEMailOperationCompleted, userState);
        }
        
        private void OnSendUsersEMailOperationCompleted(object arg) {
            if ((this.SendUsersEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUsersEMailCompleted(this, new SendUsersEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumUsersEMailEnabled", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumUserEMailAddress[] GetForumUsersEMailEnabled(int forumId, long threadId) {
            object[] results = this.Invoke("GetForumUsersEMailEnabled", new object[] {
                        forumId,
                        threadId});
            return ((WsForumUserEMailAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumUsersEMailEnabledAsync(int forumId, long threadId) {
            this.GetForumUsersEMailEnabledAsync(forumId, threadId, null);
        }
        
        /// <remarks/>
        public void GetForumUsersEMailEnabledAsync(int forumId, long threadId, object userState) {
            if ((this.GetForumUsersEMailEnabledOperationCompleted == null)) {
                this.GetForumUsersEMailEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumUsersEMailEnabledOperationCompleted);
            }
            this.InvokeAsync("GetForumUsersEMailEnabled", new object[] {
                        forumId,
                        threadId}, this.GetForumUsersEMailEnabledOperationCompleted, userState);
        }
        
        private void OnGetForumUsersEMailEnabledOperationCompleted(object arg) {
            if ((this.GetForumUsersEMailEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumUsersEMailEnabledCompleted(this, new GetForumUsersEMailEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetThreadCategoryType", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ForumResultEnum GetThreadCategoryType(ref WsThreadCategoryType threadCategoryType) {
            object[] results = this.Invoke("GetThreadCategoryType", new object[] {
                        threadCategoryType});
            threadCategoryType = ((WsThreadCategoryType)(results[1]));
            return ((ForumResultEnum)(results[0]));
        }
        
        /// <remarks/>
        public void GetThreadCategoryTypeAsync(WsThreadCategoryType threadCategoryType) {
            this.GetThreadCategoryTypeAsync(threadCategoryType, null);
        }
        
        /// <remarks/>
        public void GetThreadCategoryTypeAsync(WsThreadCategoryType threadCategoryType, object userState) {
            if ((this.GetThreadCategoryTypeOperationCompleted == null)) {
                this.GetThreadCategoryTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThreadCategoryTypeOperationCompleted);
            }
            this.InvokeAsync("GetThreadCategoryType", new object[] {
                        threadCategoryType}, this.GetThreadCategoryTypeOperationCompleted, userState);
        }
        
        private void OnGetThreadCategoryTypeOperationCompleted(object arg) {
            if ((this.GetThreadCategoryTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThreadCategoryTypeCompleted(this, new GetThreadCategoryTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetMasterPageLayoutByForumId", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsMasterPageLayout GetMasterPageLayoutByForumId(int forumId) {
            object[] results = this.Invoke("GetMasterPageLayoutByForumId", new object[] {
                        forumId});
            return ((WsMasterPageLayout)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterPageLayoutByForumIdAsync(int forumId) {
            this.GetMasterPageLayoutByForumIdAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetMasterPageLayoutByForumIdAsync(int forumId, object userState) {
            if ((this.GetMasterPageLayoutByForumIdOperationCompleted == null)) {
                this.GetMasterPageLayoutByForumIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterPageLayoutByForumIdOperationCompleted);
            }
            this.InvokeAsync("GetMasterPageLayoutByForumId", new object[] {
                        forumId}, this.GetMasterPageLayoutByForumIdOperationCompleted, userState);
        }
        
        private void OnGetMasterPageLayoutByForumIdOperationCompleted(object arg) {
            if ((this.GetMasterPageLayoutByForumIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterPageLayoutByForumIdCompleted(this, new GetMasterPageLayoutByForumIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumStyleSheet", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetForumStyleSheet(int applicationId, int applicationChildId, string styleSheetKey, string browserName, int browserVersion) {
            object[] results = this.Invoke("GetForumStyleSheet", new object[] {
                        applicationId,
                        applicationChildId,
                        styleSheetKey,
                        browserName,
                        browserVersion});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumStyleSheetAsync(int applicationId, int applicationChildId, string styleSheetKey, string browserName, int browserVersion) {
            this.GetForumStyleSheetAsync(applicationId, applicationChildId, styleSheetKey, browserName, browserVersion, null);
        }
        
        /// <remarks/>
        public void GetForumStyleSheetAsync(int applicationId, int applicationChildId, string styleSheetKey, string browserName, int browserVersion, object userState) {
            if ((this.GetForumStyleSheetOperationCompleted == null)) {
                this.GetForumStyleSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumStyleSheetOperationCompleted);
            }
            this.InvokeAsync("GetForumStyleSheet", new object[] {
                        applicationId,
                        applicationChildId,
                        styleSheetKey,
                        browserName,
                        browserVersion}, this.GetForumStyleSheetOperationCompleted, userState);
        }
        
        private void OnGetForumStyleSheetOperationCompleted(object arg) {
            if ((this.GetForumStyleSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumStyleSheetCompleted(this, new GetForumStyleSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetNavigationUrl", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNavigationUrl(string configurationUrl) {
            object[] results = this.Invoke("GetNavigationUrl", new object[] {
                        configurationUrl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNavigationUrlAsync(string configurationUrl) {
            this.GetNavigationUrlAsync(configurationUrl, null);
        }
        
        /// <remarks/>
        public void GetNavigationUrlAsync(string configurationUrl, object userState) {
            if ((this.GetNavigationUrlOperationCompleted == null)) {
                this.GetNavigationUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNavigationUrlOperationCompleted);
            }
            this.InvokeAsync("GetNavigationUrl", new object[] {
                        configurationUrl}, this.GetNavigationUrlOperationCompleted, userState);
        }
        
        private void OnGetNavigationUrlOperationCompleted(object arg) {
            if ((this.GetNavigationUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNavigationUrlCompleted(this, new GetNavigationUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetDiscussion", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion GetDiscussion(long threadId) {
            object[] results = this.Invoke("GetDiscussion", new object[] {
                        threadId});
            return ((WsDiscussion)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiscussionAsync(long threadId) {
            this.GetDiscussionAsync(threadId, null);
        }
        
        /// <remarks/>
        public void GetDiscussionAsync(long threadId, object userState) {
            if ((this.GetDiscussionOperationCompleted == null)) {
                this.GetDiscussionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiscussionOperationCompleted);
            }
            this.InvokeAsync("GetDiscussion", new object[] {
                        threadId}, this.GetDiscussionOperationCompleted, userState);
        }
        
        private void OnGetDiscussionOperationCompleted(object arg) {
            if ((this.GetDiscussionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiscussionCompleted(this, new GetDiscussionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetDiscussionsCount", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDiscussionsCount(int forumId, long userProfileId) {
            object[] results = this.Invoke("GetDiscussionsCount", new object[] {
                        forumId,
                        userProfileId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiscussionsCountAsync(int forumId, long userProfileId) {
            this.GetDiscussionsCountAsync(forumId, userProfileId, null);
        }
        
        /// <remarks/>
        public void GetDiscussionsCountAsync(int forumId, long userProfileId, object userState) {
            if ((this.GetDiscussionsCountOperationCompleted == null)) {
                this.GetDiscussionsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiscussionsCountOperationCompleted);
            }
            this.InvokeAsync("GetDiscussionsCount", new object[] {
                        forumId,
                        userProfileId}, this.GetDiscussionsCountOperationCompleted, userState);
        }
        
        private void OnGetDiscussionsCountOperationCompleted(object arg) {
            if ((this.GetDiscussionsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiscussionsCountCompleted(this, new GetDiscussionsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SearchComments", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsComment[] SearchComments(int forumId, string searchWord, SearchTypeEnum searchType, SearchFilterTypeEnum filterType, long filterTypeId, int maximumRows, int startRowIndex, out int totalResults) {
            object[] results = this.Invoke("SearchComments", new object[] {
                        forumId,
                        searchWord,
                        searchType,
                        filterType,
                        filterTypeId,
                        maximumRows,
                        startRowIndex});
            totalResults = ((int)(results[1]));
            return ((WsComment[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCommentsAsync(int forumId, string searchWord, SearchTypeEnum searchType, SearchFilterTypeEnum filterType, long filterTypeId, int maximumRows, int startRowIndex) {
            this.SearchCommentsAsync(forumId, searchWord, searchType, filterType, filterTypeId, maximumRows, startRowIndex, null);
        }
        
        /// <remarks/>
        public void SearchCommentsAsync(int forumId, string searchWord, SearchTypeEnum searchType, SearchFilterTypeEnum filterType, long filterTypeId, int maximumRows, int startRowIndex, object userState) {
            if ((this.SearchCommentsOperationCompleted == null)) {
                this.SearchCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCommentsOperationCompleted);
            }
            this.InvokeAsync("SearchComments", new object[] {
                        forumId,
                        searchWord,
                        searchType,
                        filterType,
                        filterTypeId,
                        maximumRows,
                        startRowIndex}, this.SearchCommentsOperationCompleted, userState);
        }
        
        private void OnSearchCommentsOperationCompleted(object arg) {
            if ((this.SearchCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCommentsCompleted(this, new SearchCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SearchDiscussions", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] SearchDiscussions(int forumId, string searchWord, int maximumRows, int startRowIndex, System.DateTime newDate, int popularHours, out int totalResults) {
            object[] results = this.Invoke("SearchDiscussions", new object[] {
                        forumId,
                        searchWord,
                        maximumRows,
                        startRowIndex,
                        newDate,
                        popularHours});
            totalResults = ((int)(results[1]));
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchDiscussionsAsync(int forumId, string searchWord, int maximumRows, int startRowIndex, System.DateTime newDate, int popularHours) {
            this.SearchDiscussionsAsync(forumId, searchWord, maximumRows, startRowIndex, newDate, popularHours, null);
        }
        
        /// <remarks/>
        public void SearchDiscussionsAsync(int forumId, string searchWord, int maximumRows, int startRowIndex, System.DateTime newDate, int popularHours, object userState) {
            if ((this.SearchDiscussionsOperationCompleted == null)) {
                this.SearchDiscussionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDiscussionsOperationCompleted);
            }
            this.InvokeAsync("SearchDiscussions", new object[] {
                        forumId,
                        searchWord,
                        maximumRows,
                        startRowIndex,
                        newDate,
                        popularHours}, this.SearchDiscussionsOperationCompleted, userState);
        }
        
        private void OnSearchDiscussionsOperationCompleted(object arg) {
            if ((this.SearchDiscussionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDiscussionsCompleted(this, new SearchDiscussionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetFeaturedDiscussions", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsFeaturedDiscussion[] GetFeaturedDiscussions(int forumId) {
            object[] results = this.Invoke("GetFeaturedDiscussions", new object[] {
                        forumId});
            return ((WsFeaturedDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturedDiscussionsAsync(int forumId) {
            this.GetFeaturedDiscussionsAsync(forumId, null);
        }
        
        /// <remarks/>
        public void GetFeaturedDiscussionsAsync(int forumId, object userState) {
            if ((this.GetFeaturedDiscussionsOperationCompleted == null)) {
                this.GetFeaturedDiscussionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturedDiscussionsOperationCompleted);
            }
            this.InvokeAsync("GetFeaturedDiscussions", new object[] {
                        forumId}, this.GetFeaturedDiscussionsOperationCompleted, userState);
        }
        
        private void OnGetFeaturedDiscussionsOperationCompleted(object arg) {
            if ((this.GetFeaturedDiscussionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturedDiscussionsCompleted(this, new GetFeaturedDiscussionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/SubscribeToADiscussion", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubscribeToADiscussion(int forumUserId, long threadId) {
            object[] results = this.Invoke("SubscribeToADiscussion", new object[] {
                        forumUserId,
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeToADiscussionAsync(int forumUserId, long threadId) {
            this.SubscribeToADiscussionAsync(forumUserId, threadId, null);
        }
        
        /// <remarks/>
        public void SubscribeToADiscussionAsync(int forumUserId, long threadId, object userState) {
            if ((this.SubscribeToADiscussionOperationCompleted == null)) {
                this.SubscribeToADiscussionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeToADiscussionOperationCompleted);
            }
            this.InvokeAsync("SubscribeToADiscussion", new object[] {
                        forumUserId,
                        threadId}, this.SubscribeToADiscussionOperationCompleted, userState);
        }
        
        private void OnSubscribeToADiscussionOperationCompleted(object arg) {
            if ((this.SubscribeToADiscussionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeToADiscussionCompleted(this, new SubscribeToADiscussionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UnSubscribeToADiscussion", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnSubscribeToADiscussion(int forumUserId, long threadId) {
            object[] results = this.Invoke("UnSubscribeToADiscussion", new object[] {
                        forumUserId,
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnSubscribeToADiscussionAsync(int forumUserId, long threadId) {
            this.UnSubscribeToADiscussionAsync(forumUserId, threadId, null);
        }
        
        /// <remarks/>
        public void UnSubscribeToADiscussionAsync(int forumUserId, long threadId, object userState) {
            if ((this.UnSubscribeToADiscussionOperationCompleted == null)) {
                this.UnSubscribeToADiscussionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnSubscribeToADiscussionOperationCompleted);
            }
            this.InvokeAsync("UnSubscribeToADiscussion", new object[] {
                        forumUserId,
                        threadId}, this.UnSubscribeToADiscussionOperationCompleted, userState);
        }
        
        private void OnUnSubscribeToADiscussionOperationCompleted(object arg) {
            if ((this.UnSubscribeToADiscussionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnSubscribeToADiscussionCompleted(this, new UnSubscribeToADiscussionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/IsEmailSubscriber", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsEmailSubscriber(int forumUserId, long threadId) {
            object[] results = this.Invoke("IsEmailSubscriber", new object[] {
                        forumUserId,
                        threadId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsEmailSubscriberAsync(int forumUserId, long threadId) {
            this.IsEmailSubscriberAsync(forumUserId, threadId, null);
        }
        
        /// <remarks/>
        public void IsEmailSubscriberAsync(int forumUserId, long threadId, object userState) {
            if ((this.IsEmailSubscriberOperationCompleted == null)) {
                this.IsEmailSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEmailSubscriberOperationCompleted);
            }
            this.InvokeAsync("IsEmailSubscriber", new object[] {
                        forumUserId,
                        threadId}, this.IsEmailSubscriberOperationCompleted, userState);
        }
        
        private void OnIsEmailSubscriberOperationCompleted(object arg) {
            if ((this.IsEmailSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEmailSubscriberCompleted(this, new IsEmailSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddNewEmailSubscriber", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddNewEmailSubscriber(WsEmailSubscriber emailSubscriber) {
            object[] results = this.Invoke("AddNewEmailSubscriber", new object[] {
                        emailSubscriber});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewEmailSubscriberAsync(WsEmailSubscriber emailSubscriber) {
            this.AddNewEmailSubscriberAsync(emailSubscriber, null);
        }
        
        /// <remarks/>
        public void AddNewEmailSubscriberAsync(WsEmailSubscriber emailSubscriber, object userState) {
            if ((this.AddNewEmailSubscriberOperationCompleted == null)) {
                this.AddNewEmailSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewEmailSubscriberOperationCompleted);
            }
            this.InvokeAsync("AddNewEmailSubscriber", new object[] {
                        emailSubscriber}, this.AddNewEmailSubscriberOperationCompleted, userState);
        }
        
        private void OnAddNewEmailSubscriberOperationCompleted(object arg) {
            if ((this.AddNewEmailSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewEmailSubscriberCompleted(this, new AddNewEmailSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateEmailSubscriber", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmailSubscriber(WsEmailSubscriber emailSubscriber) {
            object[] results = this.Invoke("UpdateEmailSubscriber", new object[] {
                        emailSubscriber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmailSubscriberAsync(WsEmailSubscriber emailSubscriber) {
            this.UpdateEmailSubscriberAsync(emailSubscriber, null);
        }
        
        /// <remarks/>
        public void UpdateEmailSubscriberAsync(WsEmailSubscriber emailSubscriber, object userState) {
            if ((this.UpdateEmailSubscriberOperationCompleted == null)) {
                this.UpdateEmailSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmailSubscriberOperationCompleted);
            }
            this.InvokeAsync("UpdateEmailSubscriber", new object[] {
                        emailSubscriber}, this.UpdateEmailSubscriberOperationCompleted, userState);
        }
        
        private void OnUpdateEmailSubscriberOperationCompleted(object arg) {
            if ((this.UpdateEmailSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmailSubscriberCompleted(this, new UpdateEmailSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetEmailSubscriberViews", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsEmailSubscriberView[] GetEmailSubscriberViews(int forumUserId) {
            object[] results = this.Invoke("GetEmailSubscriberViews", new object[] {
                        forumUserId});
            return ((WsEmailSubscriberView[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailSubscriberViewsAsync(int forumUserId) {
            this.GetEmailSubscriberViewsAsync(forumUserId, null);
        }
        
        /// <remarks/>
        public void GetEmailSubscriberViewsAsync(int forumUserId, object userState) {
            if ((this.GetEmailSubscriberViewsOperationCompleted == null)) {
                this.GetEmailSubscriberViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailSubscriberViewsOperationCompleted);
            }
            this.InvokeAsync("GetEmailSubscriberViews", new object[] {
                        forumUserId}, this.GetEmailSubscriberViewsOperationCompleted, userState);
        }
        
        private void OnGetEmailSubscriberViewsOperationCompleted(object arg) {
            if ((this.GetEmailSubscriberViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailSubscriberViewsCompleted(this, new GetEmailSubscriberViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateDiscussionLastViewDateOneWay", RequestNamespace="http://forum.starfieldtech.com.gdg/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDiscussionLastViewDateOneWay(int forumUserId, long discussionId) {
            this.Invoke("UpdateDiscussionLastViewDateOneWay", new object[] {
                        forumUserId,
                        discussionId});
        }
        
        /// <remarks/>
        public void UpdateDiscussionLastViewDateOneWayAsync(int forumUserId, long discussionId) {
            this.UpdateDiscussionLastViewDateOneWayAsync(forumUserId, discussionId, null);
        }
        
        /// <remarks/>
        public void UpdateDiscussionLastViewDateOneWayAsync(int forumUserId, long discussionId, object userState) {
            if ((this.UpdateDiscussionLastViewDateOneWayOperationCompleted == null)) {
                this.UpdateDiscussionLastViewDateOneWayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDiscussionLastViewDateOneWayOperationCompleted);
            }
            this.InvokeAsync("UpdateDiscussionLastViewDateOneWay", new object[] {
                        forumUserId,
                        discussionId}, this.UpdateDiscussionLastViewDateOneWayOperationCompleted, userState);
        }
        
        private void OnUpdateDiscussionLastViewDateOneWayOperationCompleted(object arg) {
            if ((this.UpdateDiscussionLastViewDateOneWayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDiscussionLastViewDateOneWayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetEmailSubscribedDiscussions", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsDiscussion[] GetEmailSubscribedDiscussions(int forumUserId, System.DateTime newDate, int popularHours) {
            object[] results = this.Invoke("GetEmailSubscribedDiscussions", new object[] {
                        forumUserId,
                        newDate,
                        popularHours});
            return ((WsDiscussion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailSubscribedDiscussionsAsync(int forumUserId, System.DateTime newDate, int popularHours) {
            this.GetEmailSubscribedDiscussionsAsync(forumUserId, newDate, popularHours, null);
        }
        
        /// <remarks/>
        public void GetEmailSubscribedDiscussionsAsync(int forumUserId, System.DateTime newDate, int popularHours, object userState) {
            if ((this.GetEmailSubscribedDiscussionsOperationCompleted == null)) {
                this.GetEmailSubscribedDiscussionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailSubscribedDiscussionsOperationCompleted);
            }
            this.InvokeAsync("GetEmailSubscribedDiscussions", new object[] {
                        forumUserId,
                        newDate,
                        popularHours}, this.GetEmailSubscribedDiscussionsOperationCompleted, userState);
        }
        
        private void OnGetEmailSubscribedDiscussionsOperationCompleted(object arg) {
            if ((this.GetEmailSubscribedDiscussionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailSubscribedDiscussionsCompleted(this, new GetEmailSubscribedDiscussionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumAlias", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumAlias GetForumAlias(int forumAliasId) {
            object[] results = this.Invoke("GetForumAlias", new object[] {
                        forumAliasId});
            return ((WsForumAlias)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumAliasAsync(int forumAliasId) {
            this.GetForumAliasAsync(forumAliasId, null);
        }
        
        /// <remarks/>
        public void GetForumAliasAsync(int forumAliasId, object userState) {
            if ((this.GetForumAliasOperationCompleted == null)) {
                this.GetForumAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumAliasOperationCompleted);
            }
            this.InvokeAsync("GetForumAlias", new object[] {
                        forumAliasId}, this.GetForumAliasOperationCompleted, userState);
        }
        
        private void OnGetForumAliasOperationCompleted(object arg) {
            if ((this.GetForumAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumAliasCompleted(this, new GetForumAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteForumAlias", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteForumAlias(int forumAliasId) {
            object[] results = this.Invoke("DeleteForumAlias", new object[] {
                        forumAliasId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteForumAliasAsync(int forumAliasId) {
            this.DeleteForumAliasAsync(forumAliasId, null);
        }
        
        /// <remarks/>
        public void DeleteForumAliasAsync(int forumAliasId, object userState) {
            if ((this.DeleteForumAliasOperationCompleted == null)) {
                this.DeleteForumAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteForumAliasOperationCompleted);
            }
            this.InvokeAsync("DeleteForumAlias", new object[] {
                        forumAliasId}, this.DeleteForumAliasOperationCompleted, userState);
        }
        
        private void OnDeleteForumAliasOperationCompleted(object arg) {
            if ((this.DeleteForumAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteForumAliasCompleted(this, new DeleteForumAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddForumAlias", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddForumAlias(WsForumAlias alias) {
            object[] results = this.Invoke("AddForumAlias", new object[] {
                        alias});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddForumAliasAsync(WsForumAlias alias) {
            this.AddForumAliasAsync(alias, null);
        }
        
        /// <remarks/>
        public void AddForumAliasAsync(WsForumAlias alias, object userState) {
            if ((this.AddForumAliasOperationCompleted == null)) {
                this.AddForumAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddForumAliasOperationCompleted);
            }
            this.InvokeAsync("AddForumAlias", new object[] {
                        alias}, this.AddForumAliasOperationCompleted, userState);
        }
        
        private void OnAddForumAliasOperationCompleted(object arg) {
            if ((this.AddForumAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddForumAliasCompleted(this, new AddForumAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumAlias", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateForumAlias(WsForumAlias alias) {
            object[] results = this.Invoke("UpdateForumAlias", new object[] {
                        alias});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumAliasAsync(WsForumAlias alias) {
            this.UpdateForumAliasAsync(alias, null);
        }
        
        /// <remarks/>
        public void UpdateForumAliasAsync(WsForumAlias alias, object userState) {
            if ((this.UpdateForumAliasOperationCompleted == null)) {
                this.UpdateForumAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumAliasOperationCompleted);
            }
            this.InvokeAsync("UpdateForumAlias", new object[] {
                        alias}, this.UpdateForumAliasOperationCompleted, userState);
        }
        
        private void OnUpdateForumAliasOperationCompleted(object arg) {
            if ((this.UpdateForumAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumAliasCompleted(this, new UpdateForumAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumSetting GetSetting(int settingId) {
            object[] results = this.Invoke("GetSetting", new object[] {
                        settingId});
            return ((WsForumSetting)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingAsync(int settingId) {
            this.GetSettingAsync(settingId, null);
        }
        
        /// <remarks/>
        public void GetSettingAsync(int settingId, object userState) {
            if ((this.GetSettingOperationCompleted == null)) {
                this.GetSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingOperationCompleted);
            }
            this.InvokeAsync("GetSetting", new object[] {
                        settingId}, this.GetSettingOperationCompleted, userState);
        }
        
        private void OnGetSettingOperationCompleted(object arg) {
            if ((this.GetSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingCompleted(this, new GetSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSetting(int settingId) {
            object[] results = this.Invoke("DeleteSetting", new object[] {
                        settingId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSettingAsync(int settingId) {
            this.DeleteSettingAsync(settingId, null);
        }
        
        /// <remarks/>
        public void DeleteSettingAsync(int settingId, object userState) {
            if ((this.DeleteSettingOperationCompleted == null)) {
                this.DeleteSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSettingOperationCompleted);
            }
            this.InvokeAsync("DeleteSetting", new object[] {
                        settingId}, this.DeleteSettingOperationCompleted, userState);
        }
        
        private void OnDeleteSettingOperationCompleted(object arg) {
            if ((this.DeleteSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSettingCompleted(this, new DeleteSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/AddSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSetting(WsForumSetting setting) {
            object[] results = this.Invoke("AddSetting", new object[] {
                        setting});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddSettingAsync(WsForumSetting setting) {
            this.AddSettingAsync(setting, null);
        }
        
        /// <remarks/>
        public void AddSettingAsync(WsForumSetting setting, object userState) {
            if ((this.AddSettingOperationCompleted == null)) {
                this.AddSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSettingOperationCompleted);
            }
            this.InvokeAsync("AddSetting", new object[] {
                        setting}, this.AddSettingOperationCompleted, userState);
        }
        
        private void OnAddSettingOperationCompleted(object arg) {
            if ((this.AddSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSettingCompleted(this, new AddSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSetting(WsForumSetting setting) {
            object[] results = this.Invoke("UpdateSetting", new object[] {
                        setting});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSettingAsync(WsForumSetting setting) {
            this.UpdateSettingAsync(setting, null);
        }
        
        /// <remarks/>
        public void UpdateSettingAsync(WsForumSetting setting, object userState) {
            if ((this.UpdateSettingOperationCompleted == null)) {
                this.UpdateSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSettingOperationCompleted);
            }
            this.InvokeAsync("UpdateSetting", new object[] {
                        setting}, this.UpdateSettingOperationCompleted, userState);
        }
        
        private void OnUpdateSettingOperationCompleted(object arg) {
            if ((this.UpdateSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSettingCompleted(this, new UpdateSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetForumSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsForumSetting GetForumSetting(int forumId, int settingId) {
            object[] results = this.Invoke("GetForumSetting", new object[] {
                        forumId,
                        settingId});
            return ((WsForumSetting)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumSettingAsync(int forumId, int settingId) {
            this.GetForumSettingAsync(forumId, settingId, null);
        }
        
        /// <remarks/>
        public void GetForumSettingAsync(int forumId, int settingId, object userState) {
            if ((this.GetForumSettingOperationCompleted == null)) {
                this.GetForumSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumSettingOperationCompleted);
            }
            this.InvokeAsync("GetForumSetting", new object[] {
                        forumId,
                        settingId}, this.GetForumSettingOperationCompleted, userState);
        }
        
        private void OnGetForumSettingOperationCompleted(object arg) {
            if ((this.GetForumSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumSettingCompleted(this, new GetForumSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/InsertForumSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertForumSetting(int forumId, int settingId, string value) {
            object[] results = this.Invoke("InsertForumSetting", new object[] {
                        forumId,
                        settingId,
                        value});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertForumSettingAsync(int forumId, int settingId, string value) {
            this.InsertForumSettingAsync(forumId, settingId, value, null);
        }
        
        /// <remarks/>
        public void InsertForumSettingAsync(int forumId, int settingId, string value, object userState) {
            if ((this.InsertForumSettingOperationCompleted == null)) {
                this.InsertForumSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertForumSettingOperationCompleted);
            }
            this.InvokeAsync("InsertForumSetting", new object[] {
                        forumId,
                        settingId,
                        value}, this.InsertForumSettingOperationCompleted, userState);
        }
        
        private void OnInsertForumSettingOperationCompleted(object arg) {
            if ((this.InsertForumSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertForumSettingCompleted(this, new InsertForumSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/UpdateForumSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateForumSetting(int forumId, int settingId, string value) {
            object[] results = this.Invoke("UpdateForumSetting", new object[] {
                        forumId,
                        settingId,
                        value});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForumSettingAsync(int forumId, int settingId, string value) {
            this.UpdateForumSettingAsync(forumId, settingId, value, null);
        }
        
        /// <remarks/>
        public void UpdateForumSettingAsync(int forumId, int settingId, string value, object userState) {
            if ((this.UpdateForumSettingOperationCompleted == null)) {
                this.UpdateForumSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForumSettingOperationCompleted);
            }
            this.InvokeAsync("UpdateForumSetting", new object[] {
                        forumId,
                        settingId,
                        value}, this.UpdateForumSettingOperationCompleted, userState);
        }
        
        private void OnUpdateForumSettingOperationCompleted(object arg) {
            if ((this.UpdateForumSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForumSettingCompleted(this, new UpdateForumSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/DeleteForumSetting", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteForumSetting(int forumId, int settingId) {
            object[] results = this.Invoke("DeleteForumSetting", new object[] {
                        forumId,
                        settingId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteForumSettingAsync(int forumId, int settingId) {
            this.DeleteForumSettingAsync(forumId, settingId, null);
        }
        
        /// <remarks/>
        public void DeleteForumSettingAsync(int forumId, int settingId, object userState) {
            if ((this.DeleteForumSettingOperationCompleted == null)) {
                this.DeleteForumSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteForumSettingOperationCompleted);
            }
            this.InvokeAsync("DeleteForumSetting", new object[] {
                        forumId,
                        settingId}, this.DeleteForumSettingOperationCompleted, userState);
        }
        
        private void OnDeleteForumSettingOperationCompleted(object arg) {
            if ((this.DeleteForumSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteForumSettingCompleted(this, new DeleteForumSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ForumHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://forum.starfieldtech.com.gdg/GetActionViewsByDiscussion", RequestNamespace="http://forum.starfieldtech.com.gdg/", ResponseNamespace="http://forum.starfieldtech.com.gdg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsActionView[] GetActionViewsByDiscussion(long discussionId) {
            object[] results = this.Invoke("GetActionViewsByDiscussion", new object[] {
                        discussionId});
            return ((WsActionView[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActionViewsByDiscussionAsync(long discussionId) {
            this.GetActionViewsByDiscussionAsync(discussionId, null);
        }
        
        /// <remarks/>
        public void GetActionViewsByDiscussionAsync(long discussionId, object userState) {
            if ((this.GetActionViewsByDiscussionOperationCompleted == null)) {
                this.GetActionViewsByDiscussionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionViewsByDiscussionOperationCompleted);
            }
            this.InvokeAsync("GetActionViewsByDiscussion", new object[] {
                        discussionId}, this.GetActionViewsByDiscussionOperationCompleted, userState);
        }
        
        private void OnGetActionViewsByDiscussionOperationCompleted(object arg) {
            if ((this.GetActionViewsByDiscussionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionViewsByDiscussionCompleted(this, new GetActionViewsByDiscussionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://forum.starfieldtech.com.gdg/", IsNullable=false)]
    public partial class ForumHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int forumIdField;
        
        private int forumUserIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsActionView {
        
        private string loginUserNameField;
        
        private long actionIdField;
        
        private int forumUserIdField;
        
        private int actionTypeIdField;
        
        private System.DateTime createDateField;
        
        private long objectIdField;
        
        /// <remarks/>
        public string LoginUserName {
            get {
                return this.loginUserNameField;
            }
            set {
                this.loginUserNameField = value;
            }
        }
        
        /// <remarks/>
        public long ActionId {
            get {
                return this.actionIdField;
            }
            set {
                this.actionIdField = value;
            }
        }
        
        /// <remarks/>
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int ActionTypeId {
            get {
                return this.actionTypeIdField;
            }
            set {
                this.actionTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public long ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForumSetting {
        
        private int settingIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string valueField;
        
        /// <remarks/>
        public int SettingId {
            get {
                return this.settingIdField;
            }
            set {
                this.settingIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForumAlias {
        
        private int forumAliasIdField;
        
        private int forumIdField;
        
        private string aliasDomainField;
        
        /// <remarks/>
        public int ForumAliasId {
            get {
                return this.forumAliasIdField;
            }
            set {
                this.forumAliasIdField = value;
            }
        }
        
        /// <remarks/>
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        public string AliasDomain {
            get {
                return this.aliasDomainField;
            }
            set {
                this.aliasDomainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WsEmailSubscriberView))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsEmailSubscriber {
        
        private int emailSubscriberIdField;
        
        private int subscriptionSourceTypeIdField;
        
        private long objectIdField;
        
        private int forumUserIdField;
        
        private long threadIdField;
        
        private bool enabledField;
        
        private System.DateTime createDateField;
        
        private System.DateTime modifiedDateField;
        
        public WsEmailSubscriber() {
            this.emailSubscriberIdField = -1;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int EmailSubscriberId {
            get {
                return this.emailSubscriberIdField;
            }
            set {
                this.emailSubscriberIdField = value;
            }
        }
        
        /// <remarks/>
        public int SubscriptionSourceTypeId {
            get {
                return this.subscriptionSourceTypeIdField;
            }
            set {
                this.subscriptionSourceTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public long ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsEmailSubscriberView : WsEmailSubscriber {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string loginUserNameField;
        
        private string userEmailAddressField;
        
        private long userProfileIdField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string LoginUserName {
            get {
                return this.loginUserNameField;
            }
            set {
                this.loginUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserEmailAddress {
            get {
                return this.userEmailAddressField;
            }
            set {
                this.userEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public long UserProfileId {
            get {
                return this.userProfileIdField;
            }
            set {
                this.userProfileIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsFeaturedDiscussion {
        
        private int forumIdField;
        
        private long discussionIdField;
        
        private string titleField;
        
        private System.DateTime discussionCreateDateField;
        
        /// <remarks/>
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        public long DiscussionId {
            get {
                return this.discussionIdField;
            }
            set {
                this.discussionIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DiscussionCreateDate {
            get {
                return this.discussionCreateDateField;
            }
            set {
                this.discussionCreateDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsMasterPageLayout {
        
        private int masterPageLayoutIdField;
        
        private int forumIdField;
        
        private string masterPageLayoutXmlField;
        
        /// <remarks/>
        public int MasterPageLayoutId {
            get {
                return this.masterPageLayoutIdField;
            }
            set {
                this.masterPageLayoutIdField = value;
            }
        }
        
        /// <remarks/>
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        public string MasterPageLayoutXml {
            get {
                return this.masterPageLayoutXmlField;
            }
            set {
                this.masterPageLayoutXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsThreadCategoryType {
        
        private int categoryThreadIdField;
        
        private int categoryIdField;
        
        private long threadIdField;
        
        private int categoryTypeIdField;
        
        private string categoryTypeField;
        
        public WsThreadCategoryType() {
            this.categoryThreadIdField = -1;
            this.categoryIdField = -1;
            this.threadIdField = ((long)(-1));
            this.categoryTypeIdField = -1;
            this.categoryTypeField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CategoryThreadId {
            get {
                return this.categoryThreadIdField;
            }
            set {
                this.categoryThreadIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CategoryTypeId {
            get {
                return this.categoryTypeIdField;
            }
            set {
                this.categoryTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CategoryType {
            get {
                return this.categoryTypeField;
            }
            set {
                this.categoryTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForumUserEMailAddress {
        
        private int forumIdField;
        
        private int forumUserIdField;
        
        private string userEMailAddressField;
        
        public WsForumUserEMailAddress() {
            this.forumIdField = -1;
            this.forumUserIdField = -1;
            this.userEMailAddressField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string UserEMailAddress {
            get {
                return this.userEMailAddressField;
            }
            set {
                this.userEMailAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsEmailMessageStatus {
        
        private long rowIdField;
        
        private long eMessageIdField;
        
        private int forumIdField;
        
        private int forumUserIdField;
        
        private long threadIdField;
        
        private string titleField;
        
        private bool receiveMessageField;
        
        private bool rowStateChangeField;
        
        public WsEmailMessageStatus() {
            this.rowIdField = ((long)(-1));
            this.eMessageIdField = ((long)(-1));
            this.forumIdField = -1;
            this.forumUserIdField = -1;
            this.threadIdField = ((long)(-1));
            this.titleField = "";
            this.receiveMessageField = false;
            this.rowStateChangeField = false;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long RowId {
            get {
                return this.rowIdField;
            }
            set {
                this.rowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long EMessageId {
            get {
                return this.eMessageIdField;
            }
            set {
                this.eMessageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReceiveMessage {
            get {
                return this.receiveMessageField;
            }
            set {
                this.receiveMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RowStateChange {
            get {
                return this.rowStateChangeField;
            }
            set {
                this.rowStateChangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsEmailMessage {
        
        private long eMailMessageIdField;
        
        private int forumIdField;
        
        private int forumUserIdField;
        
        private long threadIdField;
        
        private bool receiveMessageField;
        
        public WsEmailMessage() {
            this.eMailMessageIdField = ((long)(-1));
            this.forumIdField = -1;
            this.forumUserIdField = -1;
            this.threadIdField = ((long)(-1));
            this.receiveMessageField = false;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long EMailMessageId {
            get {
                return this.eMailMessageIdField;
            }
            set {
                this.eMailMessageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReceiveMessage {
            get {
                return this.receiveMessageField;
            }
            set {
                this.receiveMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsContentFilter {
        
        private int contentFilterIdField;
        
        private int forumIdField;
        
        private string replacementTextField;
        
        private string filteredTextField;
        
        public WsContentFilter() {
            this.contentFilterIdField = -1;
            this.forumIdField = -1;
            this.replacementTextField = "*****";
            this.filteredTextField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ContentFilterId {
            get {
                return this.contentFilterIdField;
            }
            set {
                this.contentFilterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("*****")]
        public string ReplacementText {
            get {
                return this.replacementTextField;
            }
            set {
                this.replacementTextField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string FilteredText {
            get {
                return this.filteredTextField;
            }
            set {
                this.filteredTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsMessageView {
        
        private long messageIdField;
        
        private int senderIdField;
        
        private int receipientIdField;
        
        private long commentIdField;
        
        private System.DateTime createDateField;
        
        private string subjectField;
        
        private string bodyField;
        
        private int recipientMessageStatusField;
        
        private int senderMessageStatusField;
        
        private string senderFirstNameField;
        
        private string senderLastNameField;
        
        private string senderLoginNameField;
        
        private string recipientFirstNameField;
        
        private string recipientLastNameField;
        
        private string recipientLoginNameField;
        
        /// <remarks/>
        public long MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public int SenderId {
            get {
                return this.senderIdField;
            }
            set {
                this.senderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReceipientId {
            get {
                return this.receipientIdField;
            }
            set {
                this.receipientIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientMessageStatus {
            get {
                return this.recipientMessageStatusField;
            }
            set {
                this.recipientMessageStatusField = value;
            }
        }
        
        /// <remarks/>
        public int SenderMessageStatus {
            get {
                return this.senderMessageStatusField;
            }
            set {
                this.senderMessageStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SenderFirstName {
            get {
                return this.senderFirstNameField;
            }
            set {
                this.senderFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string SenderLastName {
            get {
                return this.senderLastNameField;
            }
            set {
                this.senderLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string SenderLoginName {
            get {
                return this.senderLoginNameField;
            }
            set {
                this.senderLoginNameField = value;
            }
        }
        
        /// <remarks/>
        public string RecipientFirstName {
            get {
                return this.recipientFirstNameField;
            }
            set {
                this.recipientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string RecipientLastName {
            get {
                return this.recipientLastNameField;
            }
            set {
                this.recipientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string RecipientLoginName {
            get {
                return this.recipientLoginNameField;
            }
            set {
                this.recipientLoginNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsMessage {
        
        private long messageIdField;
        
        private int senderIdField;
        
        private int receipientIdField;
        
        private long commentIdField;
        
        private System.DateTime createDateField;
        
        private string subjectField;
        
        private string bodyField;
        
        private int recipientMessageStatusField;
        
        private int senderMessageStatusField;
        
        /// <remarks/>
        public long MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public int SenderId {
            get {
                return this.senderIdField;
            }
            set {
                this.senderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReceipientId {
            get {
                return this.receipientIdField;
            }
            set {
                this.receipientIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public int RecipientMessageStatus {
            get {
                return this.recipientMessageStatusField;
            }
            set {
                this.recipientMessageStatusField = value;
            }
        }
        
        /// <remarks/>
        public int SenderMessageStatus {
            get {
                return this.senderMessageStatusField;
            }
            set {
                this.senderMessageStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsCommentReviewCount {
        
        private int totalField;
        
        private int pendingField;
        
        private int approvedField;
        
        private int deletedField;
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public int Pending {
            get {
                return this.pendingField;
            }
            set {
                this.pendingField = value;
            }
        }
        
        /// <remarks/>
        public int Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsReview {
        
        private long commentReviewIdField;
        
        private int initiatorIdField;
        
        private long commentIdField;
        
        private int reviewerIdField;
        
        private System.DateTime createDateField;
        
        private System.DateTime reviewedDateField;
        
        private int reviewStatusIdField;
        
        private System.DateTime commentCreateDateField;
        
        private System.DateTime commentModifiedDateField;
        
        private string commentAuthorUserNameField;
        
        private string commentBodyField;
        
        private string discussionTitleField;
        
        private string initiatorUserNameField;
        
        private string reviewerUserNameField;
        
        private string reasonField;
        
        /// <remarks/>
        public long CommentReviewId {
            get {
                return this.commentReviewIdField;
            }
            set {
                this.commentReviewIdField = value;
            }
        }
        
        /// <remarks/>
        public int InitiatorId {
            get {
                return this.initiatorIdField;
            }
            set {
                this.initiatorIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReviewerId {
            get {
                return this.reviewerIdField;
            }
            set {
                this.reviewerIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReviewedDate {
            get {
                return this.reviewedDateField;
            }
            set {
                this.reviewedDateField = value;
            }
        }
        
        /// <remarks/>
        public int ReviewStatusId {
            get {
                return this.reviewStatusIdField;
            }
            set {
                this.reviewStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CommentCreateDate {
            get {
                return this.commentCreateDateField;
            }
            set {
                this.commentCreateDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CommentModifiedDate {
            get {
                return this.commentModifiedDateField;
            }
            set {
                this.commentModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string CommentAuthorUserName {
            get {
                return this.commentAuthorUserNameField;
            }
            set {
                this.commentAuthorUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string CommentBody {
            get {
                return this.commentBodyField;
            }
            set {
                this.commentBodyField = value;
            }
        }
        
        /// <remarks/>
        public string DiscussionTitle {
            get {
                return this.discussionTitleField;
            }
            set {
                this.discussionTitleField = value;
            }
        }
        
        /// <remarks/>
        public string InitiatorUserName {
            get {
                return this.initiatorUserNameField;
            }
            set {
                this.initiatorUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReviewerUserName {
            get {
                return this.reviewerUserNameField;
            }
            set {
                this.reviewerUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsCommentReview {
        
        private long commentReviewIdField;
        
        private int initiatorIdField;
        
        private long commentIdField;
        
        private int reviewerIdField;
        
        private System.DateTime createDateField;
        
        private System.DateTime reviewedDateField;
        
        private ReviewStatusEnum reviewStatusIdField;
        
        private string reasonField;
        
        /// <remarks/>
        public long CommentReviewId {
            get {
                return this.commentReviewIdField;
            }
            set {
                this.commentReviewIdField = value;
            }
        }
        
        /// <remarks/>
        public int InitiatorId {
            get {
                return this.initiatorIdField;
            }
            set {
                this.initiatorIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReviewerId {
            get {
                return this.reviewerIdField;
            }
            set {
                this.reviewerIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReviewedDate {
            get {
                return this.reviewedDateField;
            }
            set {
                this.reviewedDateField = value;
            }
        }
        
        /// <remarks/>
        public ReviewStatusEnum ReviewStatusId {
            get {
                return this.reviewStatusIdField;
            }
            set {
                this.reviewStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum ReviewStatusEnum {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsCommentCount {
        
        private int totalField;
        
        private int pendingField;
        
        private int approvedField;
        
        private int deletedField;
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public int Pending {
            get {
                return this.pendingField;
            }
            set {
                this.pendingField = value;
            }
        }
        
        /// <remarks/>
        public int Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        public int Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsDiscussion {
        
        private long threadIdField;
        
        private int forumIdField;
        
        private string titleField;
        
        private int creatorIdField;
        
        private string creatorField;
        
        private bool lockedField;
        
        private int viewsCountField;
        
        private int publishStatusIdField;
        
        private System.DateTime createDateField;
        
        private int categoryIdField;
        
        private string categoryNameField;
        
        private long commentIdField;
        
        private int commentAuthorIdField;
        
        private string commentAuthorField;
        
        private System.DateTime commentModifiedDateField;
        
        private int commentCountField;
        
        private bool stickyField;
        
        private bool featuredField;
        
        private int newCommentCountField;
        
        private int popularityField;
        
        private bool hasCommentsUnreadByAdminField;
        
        public WsDiscussion() {
            this.threadIdField = ((long)(-1));
            this.forumIdField = -1;
            this.titleField = "";
            this.creatorIdField = -1;
            this.creatorField = "";
            this.publishStatusIdField = 1;
            this.categoryIdField = -1;
            this.categoryNameField = "";
            this.commentIdField = ((long)(-1));
            this.commentAuthorIdField = -1;
            this.commentAuthorField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public int ViewsCount {
            get {
                return this.viewsCountField;
            }
            set {
                this.viewsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(1)]
        public int PublishStatusId {
            get {
                return this.publishStatusIdField;
            }
            set {
                this.publishStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CommentAuthorId {
            get {
                return this.commentAuthorIdField;
            }
            set {
                this.commentAuthorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CommentAuthor {
            get {
                return this.commentAuthorField;
            }
            set {
                this.commentAuthorField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CommentModifiedDate {
            get {
                return this.commentModifiedDateField;
            }
            set {
                this.commentModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int CommentCount {
            get {
                return this.commentCountField;
            }
            set {
                this.commentCountField = value;
            }
        }
        
        /// <remarks/>
        public bool Sticky {
            get {
                return this.stickyField;
            }
            set {
                this.stickyField = value;
            }
        }
        
        /// <remarks/>
        public bool Featured {
            get {
                return this.featuredField;
            }
            set {
                this.featuredField = value;
            }
        }
        
        /// <remarks/>
        public int NewCommentCount {
            get {
                return this.newCommentCountField;
            }
            set {
                this.newCommentCountField = value;
            }
        }
        
        /// <remarks/>
        public int Popularity {
            get {
                return this.popularityField;
            }
            set {
                this.popularityField = value;
            }
        }
        
        /// <remarks/>
        public bool HasCommentsUnreadByAdmin {
            get {
                return this.hasCommentsUnreadByAdminField;
            }
            set {
                this.hasCommentsUnreadByAdminField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsComment {
        
        private long commentIdField;
        
        private int forumUserIdField;
        
        private string bodyField;
        
        private long threadIdField;
        
        private System.DateTime createDateField;
        
        private System.DateTime modifiedDateField;
        
        private PublishStatusEnum publishStatusIdField;
        
        private string authorUserNameField;
        
        private int authorUserIdField;
        
        private string authorSignatureField;
        
        private bool authorShowAvatarField;
        
        private string authorAvatarField;
        
        private string authorFilerPrefixField;
        
        private int forumUserPostCountField;
        
        private System.DateTime forumUserApplicationDateField;
        
        private bool viewedByAdminField;
        
        public WsComment() {
            this.commentIdField = ((long)(-1));
            this.forumUserIdField = -1;
            this.bodyField = "";
            this.threadIdField = ((long)(-1));
            this.authorUserNameField = "";
            this.authorUserIdField = -1;
            this.authorSignatureField = "";
            this.authorShowAvatarField = false;
            this.authorAvatarField = "";
            this.authorFilerPrefixField = "";
            this.forumUserPostCountField = 0;
            this.viewedByAdminField = false;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public PublishStatusEnum PublishStatusId {
            get {
                return this.publishStatusIdField;
            }
            set {
                this.publishStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string AuthorUserName {
            get {
                return this.authorUserNameField;
            }
            set {
                this.authorUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int AuthorUserId {
            get {
                return this.authorUserIdField;
            }
            set {
                this.authorUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string AuthorSignature {
            get {
                return this.authorSignatureField;
            }
            set {
                this.authorSignatureField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool AuthorShowAvatar {
            get {
                return this.authorShowAvatarField;
            }
            set {
                this.authorShowAvatarField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string AuthorAvatar {
            get {
                return this.authorAvatarField;
            }
            set {
                this.authorAvatarField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string AuthorFilerPrefix {
            get {
                return this.authorFilerPrefixField;
            }
            set {
                this.authorFilerPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ForumUserPostCount {
            get {
                return this.forumUserPostCountField;
            }
            set {
                this.forumUserPostCountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ForumUserApplicationDate {
            get {
                return this.forumUserApplicationDateField;
            }
            set {
                this.forumUserApplicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ViewedByAdmin {
            get {
                return this.viewedByAdminField;
            }
            set {
                this.viewedByAdminField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum PublishStatusEnum {
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsThread {
        
        private long threadIdField;
        
        private System.DateTime createDateField;
        
        private System.DateTime modifiedDateField;
        
        private bool lockedField;
        
        private System.DateTime lockedDateField;
        
        private int lockedForumUserIdField;
        
        private PublishStatusEnum publishStatusIdField;
        
        private string titleField;
        
        private int forumUserIdField;
        
        private int forumIdField;
        
        private int viewsCountField;
        
        private int categoryIdField;
        
        private string categoryNameField;
        
        private bool stickyField;
        
        private bool featuredField;
        
        public WsThread() {
            this.threadIdField = ((long)(-1));
            this.lockedForumUserIdField = -1;
            this.publishStatusIdField = PublishStatusEnum.Pending;
            this.titleField = "";
            this.forumUserIdField = -1;
            this.forumIdField = -1;
            this.categoryIdField = -1;
            this.categoryNameField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "-1")]
        public long ThreadId {
            get {
                return this.threadIdField;
            }
            set {
                this.threadIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LockedDate {
            get {
                return this.lockedDateField;
            }
            set {
                this.lockedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int LockedForumUserId {
            get {
                return this.lockedForumUserIdField;
            }
            set {
                this.lockedForumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(PublishStatusEnum.Pending)]
        public PublishStatusEnum PublishStatusId {
            get {
                return this.publishStatusIdField;
            }
            set {
                this.publishStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        public int ViewsCount {
            get {
                return this.viewsCountField;
            }
            set {
                this.viewsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Sticky {
            get {
                return this.stickyField;
            }
            set {
                this.stickyField = value;
            }
        }
        
        /// <remarks/>
        public bool Featured {
            get {
                return this.featuredField;
            }
            set {
                this.featuredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsCategory {
        
        private int categoryIdField;
        
        private string categoryNameField;
        
        private CategoryTypeEnum categoryTypeIdField;
        
        private string descriptionField;
        
        private int orderNumberField;
        
        private int forumIdField;
        
        private int parentField;
        
        private int referenceCountField;
        
        private bool couldNotBeDeletedField;
        
        private int subcategoryCountField;
        
        private int publishStatusIdField;
        
        public WsCategory() {
            this.categoryIdField = -1;
            this.categoryNameField = "";
            this.categoryTypeIdField = CategoryTypeEnum.General;
            this.descriptionField = "";
            this.forumIdField = -1;
            this.parentField = -1;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(CategoryTypeEnum.General)]
        public CategoryTypeEnum CategoryTypeId {
            get {
                return this.categoryTypeIdField;
            }
            set {
                this.categoryTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int OrderNumber {
            get {
                return this.orderNumberField;
            }
            set {
                this.orderNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int Parent {
            get {
                return this.parentField;
            }
            set {
                this.parentField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceCount {
            get {
                return this.referenceCountField;
            }
            set {
                this.referenceCountField = value;
            }
        }
        
        /// <remarks/>
        public bool CouldNotBeDeleted {
            get {
                return this.couldNotBeDeletedField;
            }
            set {
                this.couldNotBeDeletedField = value;
            }
        }
        
        /// <remarks/>
        public int SubcategoryCount {
            get {
                return this.subcategoryCountField;
            }
            set {
                this.subcategoryCountField = value;
            }
        }
        
        /// <remarks/>
        public int PublishStatusId {
            get {
                return this.publishStatusIdField;
            }
            set {
                this.publishStatusIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum CategoryTypeEnum {
        
        /// <remarks/>
        General,
        
        /// <remarks/>
        Announcements,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsRecentActivityCounts {
        
        private int newCommentsField;
        
        private int newDiscussionsField;
        
        private int newMembersField;
        
        /// <remarks/>
        public int NewComments {
            get {
                return this.newCommentsField;
            }
            set {
                this.newCommentsField = value;
            }
        }
        
        /// <remarks/>
        public int NewDiscussions {
            get {
                return this.newDiscussionsField;
            }
            set {
                this.newDiscussionsField = value;
            }
        }
        
        /// <remarks/>
        public int NewMembers {
            get {
                return this.newMembersField;
            }
            set {
                this.newMembersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForumUserCounts {
        
        private int totalField;
        
        private int approvedField;
        
        private int pendingField;
        
        private int revokedField;
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public int Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        public int Pending {
            get {
                return this.pendingField;
            }
            set {
                this.pendingField = value;
            }
        }
        
        /// <remarks/>
        public int Revoked {
            get {
                return this.revokedField;
            }
            set {
                this.revokedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForumUserStatistics {
        
        private System.DateTime accountCreatedField;
        
        private System.DateTime lastActiveDateField;
        
        private int visitCountField;
        
        private int discussionsStartedField;
        
        private int commentsAddField;
        
        private int reviewsPostedField;
        
        public WsForumUserStatistics() {
            this.visitCountField = 0;
            this.discussionsStartedField = 0;
            this.commentsAddField = 0;
            this.reviewsPostedField = 0;
        }
        
        /// <remarks/>
        public System.DateTime AccountCreated {
            get {
                return this.accountCreatedField;
            }
            set {
                this.accountCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastActiveDate {
            get {
                return this.lastActiveDateField;
            }
            set {
                this.lastActiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int VisitCount {
            get {
                return this.visitCountField;
            }
            set {
                this.visitCountField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int DiscussionsStarted {
            get {
                return this.discussionsStartedField;
            }
            set {
                this.discussionsStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int CommentsAdd {
            get {
                return this.commentsAddField;
            }
            set {
                this.commentsAddField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ReviewsPosted {
            get {
                return this.reviewsPostedField;
            }
            set {
                this.reviewsPostedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WsForumUser))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsUser {
        
        private int userIdField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailAddressField;
        
        private System.DateTime createDateField;
        
        private System.DateTime modifiedDateField;
        
        private string passwordField;
        
        private string passwordHintField;
        
        private string avatarField;
        
        private string signatureField;
        
        private bool showAvatarField;
        
        private string filerPrefixField;
        
        private long userProfileIdField;
        
        public WsUser() {
            this.userIdField = -1;
            this.userNameField = "";
            this.firstNameField = "";
            this.lastNameField = "";
            this.emailAddressField = "";
            this.passwordField = "";
            this.passwordHintField = "";
            this.avatarField = "";
            this.signatureField = "";
            this.showAvatarField = true;
            this.filerPrefixField = "";
            this.userProfileIdField = ((long)(0));
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string PasswordHint {
            get {
                return this.passwordHintField;
            }
            set {
                this.passwordHintField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ShowAvatar {
            get {
                return this.showAvatarField;
            }
            set {
                this.showAvatarField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string FilerPrefix {
            get {
                return this.filerPrefixField;
            }
            set {
                this.filerPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "0")]
        public long UserProfileId {
            get {
                return this.userProfileIdField;
            }
            set {
                this.userProfileIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForumUser : WsUser {
        
        private int forumUserIdField;
        
        private int forumIdField;
        
        private RoleEnum roleIdField;
        
        private System.DateTime applicationDateField;
        
        private System.DateTime approvalDateField;
        
        private System.DateTime revokedDateField;
        
        private System.DateTime firstVisitDateField;
        
        private System.DateTime lastActiveDateField;
        
        private UserStatusEnum userStatusIdField;
        
        private int visitsToForumField;
        
        private bool autoPostOnField;
        
        public WsForumUser() {
            this.forumUserIdField = -1;
            this.forumIdField = -1;
            this.roleIdField = RoleEnum.Member;
            this.userStatusIdField = UserStatusEnum.Pending;
            this.visitsToForumField = 0;
            this.autoPostOnField = true;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumUserId {
            get {
                return this.forumUserIdField;
            }
            set {
                this.forumUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(RoleEnum.Member)]
        public RoleEnum RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ApplicationDate {
            get {
                return this.applicationDateField;
            }
            set {
                this.applicationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ApprovalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RevokedDate {
            get {
                return this.revokedDateField;
            }
            set {
                this.revokedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstVisitDate {
            get {
                return this.firstVisitDateField;
            }
            set {
                this.firstVisitDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastActiveDate {
            get {
                return this.lastActiveDateField;
            }
            set {
                this.lastActiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(UserStatusEnum.Pending)]
        public UserStatusEnum UserStatusId {
            get {
                return this.userStatusIdField;
            }
            set {
                this.userStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int VisitsToForum {
            get {
                return this.visitsToForumField;
            }
            set {
                this.visitsToForumField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AutoPostOn {
            get {
                return this.autoPostOnField;
            }
            set {
                this.autoPostOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum RoleEnum {
        
        /// <remarks/>
        Administrator,
        
        /// <remarks/>
        Member,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum UserStatusEnum {
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Revoked,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WsForum))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsSettings {
        
        private string forumNameField;
        
        private string supportNameField;
        
        private string supportEmailAddressField;
        
        private string subscriptionEmailAddressField;
        
        private bool displayAnnouncementsSidebarField;
        
        private bool changeUserNameField;
        
        private bool privateForumField;
        
        private int popularDiscussionCommentCountField;
        
        private int popularDiscussionHourRangeField;
        
        public WsSettings() {
            this.forumNameField = "";
            this.supportNameField = "";
            this.supportEmailAddressField = "";
            this.subscriptionEmailAddressField = "";
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ForumName {
            get {
                return this.forumNameField;
            }
            set {
                this.forumNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SupportName {
            get {
                return this.supportNameField;
            }
            set {
                this.supportNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SupportEmailAddress {
            get {
                return this.supportEmailAddressField;
            }
            set {
                this.supportEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SubscriptionEmailAddress {
            get {
                return this.subscriptionEmailAddressField;
            }
            set {
                this.subscriptionEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool DisplayAnnouncementsSidebar {
            get {
                return this.displayAnnouncementsSidebarField;
            }
            set {
                this.displayAnnouncementsSidebarField = value;
            }
        }
        
        /// <remarks/>
        public bool ChangeUserName {
            get {
                return this.changeUserNameField;
            }
            set {
                this.changeUserNameField = value;
            }
        }
        
        /// <remarks/>
        public bool PrivateForum {
            get {
                return this.privateForumField;
            }
            set {
                this.privateForumField = value;
            }
        }
        
        /// <remarks/>
        public int PopularDiscussionCommentCount {
            get {
                return this.popularDiscussionCommentCountField;
            }
            set {
                this.popularDiscussionCommentCountField = value;
            }
        }
        
        /// <remarks/>
        public int PopularDiscussionHourRange {
            get {
                return this.popularDiscussionHourRangeField;
            }
            set {
                this.popularDiscussionHourRangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public partial class WsForum : WsSettings {
        
        private int forumIdField;
        
        private System.Guid orionaccountUidField;
        
        private string domainField;
        
        private DomainTypeEnum domainTypeIdField;
        
        private System.DateTime createDateField;
        
        private System.DateTime modifiedDateField;
        
        private bool applicantAutomaticApprovalField;
        
        private AccountStatusEnum accountStatusIdField;
        
        private System.DateTime forumStatusDateField;
        
        private string filerPrefixField;
        
        private string cssResourcesField;
        
        private string bannerField;
        
        private ContentFilterEnum contentFilterField;
        
        private ForumTypeEnum forumTypeField;
        
        private bool enableReputationField;
        
        private string masterPageNameField;
        
        private int applicationIdField;
        
        private int autoPostStartValueField;
        
        public WsForum() {
            this.forumIdField = -1;
            this.domainField = "";
            this.accountStatusIdField = AccountStatusEnum.Active;
            this.filerPrefixField = "A_";
            this.cssResourcesField = "";
            this.bannerField = "";
            this.contentFilterField = ContentFilterEnum.None;
            this.forumTypeField = ForumTypeEnum.WebSiteTonight;
            this.masterPageNameField = "";
            this.applicationIdField = -1;
            this.autoPostStartValueField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ForumId {
            get {
                return this.forumIdField;
            }
            set {
                this.forumIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid OrionaccountUid {
            get {
                return this.orionaccountUidField;
            }
            set {
                this.orionaccountUidField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public DomainTypeEnum DomainTypeId {
            get {
                return this.domainTypeIdField;
            }
            set {
                this.domainTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public bool ApplicantAutomaticApproval {
            get {
                return this.applicantAutomaticApprovalField;
            }
            set {
                this.applicantAutomaticApprovalField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(AccountStatusEnum.Active)]
        public AccountStatusEnum AccountStatusId {
            get {
                return this.accountStatusIdField;
            }
            set {
                this.accountStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ForumStatusDate {
            get {
                return this.forumStatusDateField;
            }
            set {
                this.forumStatusDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("A_")]
        public string FilerPrefix {
            get {
                return this.filerPrefixField;
            }
            set {
                this.filerPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CssResources {
            get {
                return this.cssResourcesField;
            }
            set {
                this.cssResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string Banner {
            get {
                return this.bannerField;
            }
            set {
                this.bannerField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(ContentFilterEnum.None)]
        public ContentFilterEnum ContentFilter {
            get {
                return this.contentFilterField;
            }
            set {
                this.contentFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(ForumTypeEnum.WebSiteTonight)]
        public ForumTypeEnum ForumType {
            get {
                return this.forumTypeField;
            }
            set {
                this.forumTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableReputation {
            get {
                return this.enableReputationField;
            }
            set {
                this.enableReputationField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string MasterPageName {
            get {
                return this.masterPageNameField;
            }
            set {
                this.masterPageNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int ApplicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int AutoPostStartValue {
            get {
                return this.autoPostStartValueField;
            }
            set {
                this.autoPostStartValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum DomainTypeEnum {
        
        /// <remarks/>
        ManagedDomain,
        
        /// <remarks/>
        SubDomain,
        
        /// <remarks/>
        UnmanagedDomain,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum AccountStatusEnum {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Deleted,
        
        /// <remarks/>
        Purged,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum ContentFilterEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Basic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum ForumTypeEnum {
        
        /// <remarks/>
        WebSiteTonight,
        
        /// <remarks/>
        GoDaddy,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum ForumResultEnum {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        GeneralException,
        
        /// <remarks/>
        NotNewUserException,
        
        /// <remarks/>
        NewUserException,
        
        /// <remarks/>
        LoginNameInUseException,
        
        /// <remarks/>
        EmailAddressInUseException,
        
        /// <remarks/>
        ForumLoginNotFoundException,
        
        /// <remarks/>
        LoginNotUpdatedException,
        
        /// <remarks/>
        NotForumMemberException,
        
        /// <remarks/>
        CreateWSTForumException,
        
        /// <remarks/>
        NotNewForumException,
        
        /// <remarks/>
        InvalidForumOrionAccountUidException,
        
        /// <remarks/>
        ForumDomainInUseException,
        
        /// <remarks/>
        UserStatusChangeException,
        
        /// <remarks/>
        ForumNotFoundException,
        
        /// <remarks/>
        UnableToSetCssResourcesException,
        
        /// <remarks/>
        WSTAuthenticationException,
        
        /// <remarks/>
        UpdateWSTForumException,
        
        /// <remarks/>
        ForumDomainInvalid,
        
        /// <remarks/>
        UnableToSetWSTResourcesException,
        
        /// <remarks/>
        UpdateForumContentFilterException,
        
        /// <remarks/>
        EMailNotificationSetupException,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum FolderEnum {
        
        /// <remarks/>
        Inbox,
        
        /// <remarks/>
        Sent,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum MessageStatusEnum {
        
        /// <remarks/>
        NotRead,
        
        /// <remarks/>
        Read,
        
        /// <remarks/>
        Deleted,
        
        /// <remarks/>
        PermanentlyDeleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum SearchTypeEnum {
        
        /// <remarks/>
        AllWords,
        
        /// <remarks/>
        AnyWord,
        
        /// <remarks/>
        ExactPhrase,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://forum.starfieldtech.com.gdg/")]
    public enum SearchFilterTypeEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Discussion,
        
        /// <remarks/>
        Category,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateForumNoOrionAccountCompletedEventHandler(object sender, CreateForumNoOrionAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateForumNoOrionAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateForumNoOrionAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateOtherForumCompletedEventHandler(object sender, CreateOtherForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOtherForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOtherForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateGoDaddyForumCompletedEventHandler(object sender, CreateGoDaddyForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGoDaddyForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGoDaddyForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateWSTForumCompletedEventHandler(object sender, CreateWSTForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWSTForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWSTForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateWSTForumUsingProjectIdCompletedEventHandler(object sender, CreateWSTForumUsingProjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWSTForumUsingProjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWSTForumUsingProjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumByUrlCompletedEventHandler(object sender, GetForumByUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumByUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumByUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumByIdCompletedEventHandler(object sender, GetForumByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumByApplicationAndProfileCompletedEventHandler(object sender, GetForumByApplicationAndProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumByApplicationAndProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumByApplicationAndProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumCompletedEventHandler(object sender, GetForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumCompletedEventHandler(object sender, UpdateForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumByOrionAccountUidCompletedEventHandler(object sender, GetForumByOrionAccountUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumByOrionAccountUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumByOrionAccountUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumSettingsCompletedEventHandler(object sender, GetForumSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetForumSettingsCompletedEventHandler(object sender, SetForumSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForumSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForumSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetForumStatusCompletedEventHandler(object sender, SetForumStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForumStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForumStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DisableForumCompletedEventHandler(object sender, DisableForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnableForumCompletedEventHandler(object sender, EnableForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetForumCssResourcesCompletedEventHandler(object sender, SetForumCssResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForumCssResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForumCssResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetForumWSTResourcesCompletedEventHandler(object sender, SetForumWSTResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForumWSTResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForumWSTResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForum forum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForum)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserStatisticsCompletedEventHandler(object sender, GetForumUserStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUserStatistics Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUserStatistics)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsUser)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserVisitCountCompletedEventHandler(object sender, UpdateUserVisitCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserVisitCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserVisitCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateEMailAddressCompletedEventHandler(object sender, UpdateEMailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEMailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEMailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateEMailAddressByForumUserCompletedEventHandler(object sender, UpdateEMailAddressByForumUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEMailAddressByForumUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEMailAddressByForumUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserAuthenticationDetailsCompletedEventHandler(object sender, UpdateUserAuthenticationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserAuthenticationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserAuthenticationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsUser)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RenameUserNameCompletedEventHandler(object sender, RenameUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserCompletedEventHandler(object sender, GetForumUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserByIdCompletedEventHandler(object sender, GetForumUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserByForumUserIdCompletedEventHandler(object sender, GetForumUserByForumUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserByForumUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserByForumUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUsersCompletedEventHandler(object sender, GetForumUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserCountsCompletedEventHandler(object sender, GetForumUserCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUserCounts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUserCounts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRecentActivityCountsCompletedEventHandler(object sender, GetRecentActivityCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecentActivityCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecentActivityCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsRecentActivityCounts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsRecentActivityCounts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentsUnreadByAdminCountCompletedEventHandler(object sender, GetCommentsUnreadByAdminCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsUnreadByAdminCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsUnreadByAdminCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserCountCompletedEventHandler(object sender, GetForumUserCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUsersPageCompletedEventHandler(object sender, GetForumUsersPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUsersPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUsersPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUsersPageSinceDateCompletedEventHandler(object sender, GetForumUsersPageSinceDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUsersPageSinceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUsersPageSinceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumAdminUsersCompletedEventHandler(object sender, GetForumAdminUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumAdminUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumAdminUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUsersByStatusCompletedEventHandler(object sender, GetForumUsersByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUsersByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUsersByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUsersPageByStatusCompletedEventHandler(object sender, GetForumUsersPageByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUsersPageByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUsersPageByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserIdCompletedEventHandler(object sender, GetForumUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserByForumIdAndLoginNameCompletedEventHandler(object sender, GetForumUserByForumIdAndLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserByForumIdAndLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserByForumIdAndLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserByUserNameCompletedEventHandler(object sender, GetUserByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewUserCompletedEventHandler(object sender, AddNewUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForumUser forumUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewGoDaddyUserCompletedEventHandler(object sender, AddNewGoDaddyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewGoDaddyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewGoDaddyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsForumUser forumUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewOrUpdateUserCompletedEventHandler(object sender, AddNewOrUpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewOrUpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewOrUpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddUserToForumCompletedEventHandler(object sender, AddUserToForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddUserToForumFromGoDaddyCompletedEventHandler(object sender, AddUserToForumFromGoDaddyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToForumFromGoDaddyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToForumFromGoDaddyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetForumUserRoleCompletedEventHandler(object sender, SetForumUserRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForumUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForumUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumUserRoleCompletedEventHandler(object sender, UpdateForumUserRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumUserAutoPostOnCompletedEventHandler(object sender, UpdateForumUserAutoPostOnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumUserAutoPostOnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumUserAutoPostOnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumUserUserProfileIdCompletedEventHandler(object sender, UpdateForumUserUserProfileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumUserUserProfileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumUserUserProfileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumUserUserStatusCompletedEventHandler(object sender, UpdateForumUserUserStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumUserUserStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumUserUserStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApproveForumUserCompletedEventHandler(object sender, ApproveForumUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveForumUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveForumUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteForumUserCompletedEventHandler(object sender, DeleteForumUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteForumUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteForumUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DenyForumUserCompletedEventHandler(object sender, DenyForumUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DenyForumUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DenyForumUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RevokeForumUserCompletedEventHandler(object sender, RevokeForumUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevokeForumUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevokeForumUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserByUserProfileIdCompletedEventHandler(object sender, GetForumUserByUserProfileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserByUserProfileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserByUserProfileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserProfileIdByForumUserIdCompletedEventHandler(object sender, GetUserProfileIdByForumUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserProfileIdByForumUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserProfileIdByForumUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long userProfileId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCategoryCompletedEventHandler(object sender, GetCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumCategoriesCompletedEventHandler(object sender, GetForumCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumTopLevelCategoriesCompletedEventHandler(object sender, GetForumTopLevelCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumTopLevelCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumTopLevelCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumSubCategoriesCompletedEventHandler(object sender, GetForumSubCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumSubCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumSubCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAnnouncementCategoriesCompletedEventHandler(object sender, GetAnnouncementCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnouncementCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnouncementCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumCategoriesCompletedEventHandler(object sender, UpdateForumCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumCategoriesWithParentCompletedEventHandler(object sender, UpdateForumCategoriesWithParentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumCategoriesWithParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumCategoriesWithParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReorderSpecialCategoriesCompletedEventHandler(object sender, ReorderSpecialCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReorderSpecialCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReorderSpecialCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewCategoryCompletedEventHandler(object sender, AddNewCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCategoryCompletedEventHandler(object sender, UpdateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCategoryCompletedEventHandler(object sender, DeleteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IncrementCategoryOrderNumberCompletedEventHandler(object sender, IncrementCategoryOrderNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementCategoryOrderNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementCategoryOrderNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DecrementCategoryOrderNumberCompletedEventHandler(object sender, DecrementCategoryOrderNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecrementCategoryOrderNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecrementCategoryOrderNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewThreadCompletedEventHandler(object sender, AddNewThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsThread Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsThread)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetThreadCompletedEventHandler(object sender, GetThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsThread Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsThread)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateThreadCompletedEventHandler(object sender, UpdateThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsThread Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsThread)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXThreadsFromYCompletedEventHandler(object sender, GetNextXThreadsFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXThreadsFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXThreadsFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXAnnouncementThreadsFromYCompletedEventHandler(object sender, GetNextXAnnouncementThreadsFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXAnnouncementThreadsFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXAnnouncementThreadsFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsThread[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsThread[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LockThreadCompletedEventHandler(object sender, LockThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnlockThreadCompletedEventHandler(object sender, UnlockThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetStickyThreadCompletedEventHandler(object sender, SetStickyThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetStickyThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetStickyThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetFeatureThreadCompletedEventHandler(object sender, SetFeatureThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFeatureThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFeatureThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetThreadMarkAsReadCompletedEventHandler(object sender, SetThreadMarkAsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetThreadMarkAsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetThreadMarkAsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MarkAllAsReadCompletedEventHandler(object sender, MarkAllAsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkAllAsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkAllAsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IncrementThreadViewCountCompletedEventHandler(object sender, IncrementThreadViewCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementThreadViewCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementThreadViewCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteThreadCompletedEventHandler(object sender, DeleteThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApproveThreadCompletedEventHandler(object sender, ApproveThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetThreadPublishStatusCompletedEventHandler(object sender, SetThreadPublishStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetThreadPublishStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetThreadPublishStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewCommentCompletedEventHandler(object sender, AddNewCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentCompletedEventHandler(object sender, GetCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetCommentViewedByAdminCompletedEventHandler(object sender, SetCommentViewedByAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCommentViewedByAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCommentViewedByAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCommentCompletedEventHandler(object sender, UpdateCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCommentBodyCompletedEventHandler(object sender, UpdateCommentBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommentBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommentBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedCommentsCompletedEventHandler(object sender, GetPagedCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedCommentsByCommentIdCompletedEventHandler(object sender, GetPagedCommentsByCommentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedCommentsByCommentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedCommentsByCommentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int startRowIndex {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXCommentsFromYCompletedEventHandler(object sender, GetNextXCommentsFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXCommentsFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXCommentsFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLastPageOfCommentsCompletedEventHandler(object sender, GetLastPageOfCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastPageOfCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastPageOfCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXCommentsFromYByStatusIdCompletedEventHandler(object sender, GetNextXCommentsFromYByStatusIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXCommentsFromYByStatusIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXCommentsFromYByStatusIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentCountsCompletedEventHandler(object sender, GetCommentCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCommentCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCommentCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentApprovedCountCompletedEventHandler(object sender, GetCommentApprovedCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentApprovedCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentApprovedCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCommentCompletedEventHandler(object sender, DeleteCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetCommentPublishStatusCompletedEventHandler(object sender, SetCommentPublishStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCommentPublishStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCommentPublishStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewReviewCompletedEventHandler(object sender, AddNewReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCommentReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCommentReview)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentReviewCompletedEventHandler(object sender, GetCommentReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCommentReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCommentReview)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentReviewByIdCompletedEventHandler(object sender, GetCommentReviewByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentReviewByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentReviewByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsReview)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCommentReviewCompletedEventHandler(object sender, UpdateCommentReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommentReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommentReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCommentReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCommentReview)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApprovePostCompletedEventHandler(object sender, ApprovePostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovePostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovePostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeletePostCompletedEventHandler(object sender, DeletePostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXCommentReviewsFromYCompletedEventHandler(object sender, GetNextXCommentReviewsFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXCommentReviewsFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXCommentReviewsFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsReview[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsReview[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCommentReviewCountsCompletedEventHandler(object sender, GetCommentReviewCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentReviewCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentReviewCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsCommentReviewCount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsCommentReviewCount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewMessageCompletedEventHandler(object sender, AddNewMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateMessageCompletedEventHandler(object sender, UpdateMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMessageCompletedEventHandler(object sender, GetMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, DeleteMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetMessageStatusCompletedEventHandler(object sender, SetMessageStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMessageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMessageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXMessageViewFromYCompletedEventHandler(object sender, GetNextXMessageViewFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXMessageViewFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXMessageViewFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsMessageView[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsMessageView[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMessageViewByIdCompletedEventHandler(object sender, GetMessageViewByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageViewByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageViewByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsMessageView Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsMessageView)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasReachMessageLimitCompletedEventHandler(object sender, HasReachMessageLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasReachMessageLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasReachMessageLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedDiscussionsCompletedEventHandler(object sender, GetPagedDiscussionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedDiscussionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedDiscussionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXDiscussionsFromYCompletedEventHandler(object sender, GetNextXDiscussionsFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXDiscussionsFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXDiscussionsFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXDiscussionsFromY_AdminUnreadCompletedEventHandler(object sender, GetNextXDiscussionsFromY_AdminUnreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXDiscussionsFromY_AdminUnreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXDiscussionsFromY_AdminUnreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNextXNewDiscussionsFromYCompletedEventHandler(object sender, GetNextXNewDiscussionsFromYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextXNewDiscussionsFromYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextXNewDiscussionsFromYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumDiscussionCountCompletedEventHandler(object sender, GetForumDiscussionCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumDiscussionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumDiscussionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContentFilterCompletedEventHandler(object sender, GetContentFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsContentFilter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsContentFilter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContentFilterCompletedEventHandler(object sender, UpdateContentFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsContentFilter contentFilter {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsContentFilter)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRegisteredDomainsCompletedEventHandler(object sender, GetRegisteredDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisteredDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisteredDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnusedDomainsCompletedEventHandler(object sender, GetUnusedDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnusedDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnusedDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsForumActiveCompletedEventHandler(object sender, IsForumActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsForumActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsForumActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLoginDataCompletedEventHandler(object sender, GetLoginDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogForumApplicationExceptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EncryptUserPasswordCompletedEventHandler(object sender, EncryptUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EncryptPasswordsCompletedEventHandler(object sender, EncryptPasswordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptPasswordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptPasswordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DecryptUserPasswordCompletedEventHandler(object sender, DecryptUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DecryptPasswordsCompletedEventHandler(object sender, DecryptPasswordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptPasswordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptPasswordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateWSTAccountCompletedEventHandler(object sender, AuthenticateWSTAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateWSTAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateWSTAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string customerNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int resellerId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddForumUserToReceiveEMailCompletedEventHandler(object sender, AddForumUserToReceiveEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddForumUserToReceiveEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddForumUserToReceiveEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveForumUserToReceiveEMailCompletedEventHandler(object sender, RemoveForumUserToReceiveEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveForumUserToReceiveEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveForumUserToReceiveEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserToReceiveEMailCompletedEventHandler(object sender, GetForumUserToReceiveEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserToReceiveEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserToReceiveEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsEmailMessage eMailMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsEmailMessage)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUserThreadsWithEMailStatusCompletedEventHandler(object sender, GetForumUserThreadsWithEMailStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUserThreadsWithEMailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUserThreadsWithEMailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsEmailMessageStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsEmailMessageStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendThreadEMailCompletedEventHandler(object sender, SendThreadEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendThreadEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendThreadEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendUsersEMailCompletedEventHandler(object sender, SendUsersEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendUsersEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendUsersEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumUsersEMailEnabledCompletedEventHandler(object sender, GetForumUsersEMailEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumUsersEMailEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumUsersEMailEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumUserEMailAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumUserEMailAddress[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetThreadCategoryTypeCompletedEventHandler(object sender, GetThreadCategoryTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThreadCategoryTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThreadCategoryTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ForumResultEnum Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForumResultEnum)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WsThreadCategoryType threadCategoryType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsThreadCategoryType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMasterPageLayoutByForumIdCompletedEventHandler(object sender, GetMasterPageLayoutByForumIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterPageLayoutByForumIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterPageLayoutByForumIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsMasterPageLayout Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsMasterPageLayout)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumStyleSheetCompletedEventHandler(object sender, GetForumStyleSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumStyleSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumStyleSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNavigationUrlCompletedEventHandler(object sender, GetNavigationUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNavigationUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNavigationUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDiscussionCompletedEventHandler(object sender, GetDiscussionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiscussionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiscussionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDiscussionsCountCompletedEventHandler(object sender, GetDiscussionsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiscussionsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiscussionsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchCommentsCompletedEventHandler(object sender, SearchCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsComment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchDiscussionsCompletedEventHandler(object sender, SearchDiscussionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDiscussionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDiscussionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturedDiscussionsCompletedEventHandler(object sender, GetFeaturedDiscussionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturedDiscussionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturedDiscussionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsFeaturedDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsFeaturedDiscussion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubscribeToADiscussionCompletedEventHandler(object sender, SubscribeToADiscussionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeToADiscussionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeToADiscussionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnSubscribeToADiscussionCompletedEventHandler(object sender, UnSubscribeToADiscussionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnSubscribeToADiscussionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnSubscribeToADiscussionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsEmailSubscriberCompletedEventHandler(object sender, IsEmailSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEmailSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEmailSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewEmailSubscriberCompletedEventHandler(object sender, AddNewEmailSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewEmailSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewEmailSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateEmailSubscriberCompletedEventHandler(object sender, UpdateEmailSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmailSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmailSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmailSubscriberViewsCompletedEventHandler(object sender, GetEmailSubscriberViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailSubscriberViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailSubscriberViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsEmailSubscriberView[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsEmailSubscriberView[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDiscussionLastViewDateOneWayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmailSubscribedDiscussionsCompletedEventHandler(object sender, GetEmailSubscribedDiscussionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailSubscribedDiscussionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailSubscribedDiscussionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsDiscussion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsDiscussion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumAliasCompletedEventHandler(object sender, GetForumAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumAlias Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumAlias)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteForumAliasCompletedEventHandler(object sender, DeleteForumAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteForumAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteForumAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddForumAliasCompletedEventHandler(object sender, AddForumAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddForumAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddForumAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumAliasCompletedEventHandler(object sender, UpdateForumAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSettingCompletedEventHandler(object sender, GetSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumSetting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumSetting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteSettingCompletedEventHandler(object sender, DeleteSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddSettingCompletedEventHandler(object sender, AddSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSettingCompletedEventHandler(object sender, UpdateSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetForumSettingCompletedEventHandler(object sender, GetForumSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsForumSetting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsForumSetting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertForumSettingCompletedEventHandler(object sender, InsertForumSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertForumSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertForumSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateForumSettingCompletedEventHandler(object sender, UpdateForumSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForumSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForumSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteForumSettingCompletedEventHandler(object sender, DeleteForumSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteForumSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteForumSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetActionViewsByDiscussionCompletedEventHandler(object sender, GetActionViewsByDiscussionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionViewsByDiscussionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionViewsByDiscussionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsActionView[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsActionView[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591