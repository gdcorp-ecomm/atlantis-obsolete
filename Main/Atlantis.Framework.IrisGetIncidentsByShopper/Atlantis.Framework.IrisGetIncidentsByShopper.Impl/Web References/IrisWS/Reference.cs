//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.IrisGetIncidentsByShopper.Impl.IrisWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IrisCommunityServiceSoap", Namespace="http://tempuri.org/")]
    public partial class IrisCommunityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchIncidentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIncidentNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncidentAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIncidentResolvedVoteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IrisCommunityService() {
            this.Url = global::Atlantis.Framework.IrisGetIncidentsByShopper.Impl.Properties.Settings.Default.Atlantis_Framework_IrisGetIncidentsByShopper_Impl_IrisWS_IrisCommunityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateIncidentCompletedEventHandler CreateIncidentCompleted;
        
        /// <remarks/>
        public event SearchIncidentsCompletedEventHandler SearchIncidentsCompleted;
        
        /// <remarks/>
        public event GetCustomerNotesCompletedEventHandler GetCustomerNotesCompleted;
        
        /// <remarks/>
        public event AddIncidentNoteCompletedEventHandler AddIncidentNoteCompleted;
        
        /// <remarks/>
        public event GetIncidentAttachmentsCompletedEventHandler GetIncidentAttachmentsCompleted;
        
        /// <remarks/>
        public event AddIncidentResolvedVoteCompletedEventHandler AddIncidentResolvedVoteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateIncident", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateIncident(string xmlString) {
            object[] results = this.Invoke("CreateIncident", new object[] {
                        xmlString});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateIncidentAsync(string xmlString) {
            this.CreateIncidentAsync(xmlString, null);
        }
        
        /// <remarks/>
        public void CreateIncidentAsync(string xmlString, object userState) {
            if ((this.CreateIncidentOperationCompleted == null)) {
                this.CreateIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateIncidentOperationCompleted);
            }
            this.InvokeAsync("CreateIncident", new object[] {
                        xmlString}, this.CreateIncidentOperationCompleted, userState);
        }
        
        private void OnCreateIncidentOperationCompleted(object arg) {
            if ((this.CreateIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateIncidentCompleted(this, new CreateIncidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchIncidents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SearchIncidents(string xmlInput) {
            object[] results = this.Invoke("SearchIncidents", new object[] {
                        xmlInput});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchIncidentsAsync(string xmlInput) {
            this.SearchIncidentsAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void SearchIncidentsAsync(string xmlInput, object userState) {
            if ((this.SearchIncidentsOperationCompleted == null)) {
                this.SearchIncidentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchIncidentsOperationCompleted);
            }
            this.InvokeAsync("SearchIncidents", new object[] {
                        xmlInput}, this.SearchIncidentsOperationCompleted, userState);
        }
        
        private void OnSearchIncidentsOperationCompleted(object arg) {
            if ((this.SearchIncidentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchIncidentsCompleted(this, new SearchIncidentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCustomerNotes(string xmlIncidentID) {
            object[] results = this.Invoke("GetCustomerNotes", new object[] {
                        xmlIncidentID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerNotesAsync(string xmlIncidentID) {
            this.GetCustomerNotesAsync(xmlIncidentID, null);
        }
        
        /// <remarks/>
        public void GetCustomerNotesAsync(string xmlIncidentID, object userState) {
            if ((this.GetCustomerNotesOperationCompleted == null)) {
                this.GetCustomerNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerNotesOperationCompleted);
            }
            this.InvokeAsync("GetCustomerNotes", new object[] {
                        xmlIncidentID}, this.GetCustomerNotesOperationCompleted, userState);
        }
        
        private void OnGetCustomerNotesOperationCompleted(object arg) {
            if ((this.GetCustomerNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerNotesCompleted(this, new GetCustomerNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddIncidentNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddIncidentNote(string xmlString) {
            object[] results = this.Invoke("AddIncidentNote", new object[] {
                        xmlString});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddIncidentNoteAsync(string xmlString) {
            this.AddIncidentNoteAsync(xmlString, null);
        }
        
        /// <remarks/>
        public void AddIncidentNoteAsync(string xmlString, object userState) {
            if ((this.AddIncidentNoteOperationCompleted == null)) {
                this.AddIncidentNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIncidentNoteOperationCompleted);
            }
            this.InvokeAsync("AddIncidentNote", new object[] {
                        xmlString}, this.AddIncidentNoteOperationCompleted, userState);
        }
        
        private void OnAddIncidentNoteOperationCompleted(object arg) {
            if ((this.AddIncidentNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIncidentNoteCompleted(this, new AddIncidentNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIncidentAttachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetIncidentAttachments(string xmlString) {
            object[] results = this.Invoke("GetIncidentAttachments", new object[] {
                        xmlString});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncidentAttachmentsAsync(string xmlString) {
            this.GetIncidentAttachmentsAsync(xmlString, null);
        }
        
        /// <remarks/>
        public void GetIncidentAttachmentsAsync(string xmlString, object userState) {
            if ((this.GetIncidentAttachmentsOperationCompleted == null)) {
                this.GetIncidentAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncidentAttachmentsOperationCompleted);
            }
            this.InvokeAsync("GetIncidentAttachments", new object[] {
                        xmlString}, this.GetIncidentAttachmentsOperationCompleted, userState);
        }
        
        private void OnGetIncidentAttachmentsOperationCompleted(object arg) {
            if ((this.GetIncidentAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncidentAttachmentsCompleted(this, new GetIncidentAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddIncidentResolvedVote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddIncidentResolvedVote(string xmlString) {
            object[] results = this.Invoke("AddIncidentResolvedVote", new object[] {
                        xmlString});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddIncidentResolvedVoteAsync(string xmlString) {
            this.AddIncidentResolvedVoteAsync(xmlString, null);
        }
        
        /// <remarks/>
        public void AddIncidentResolvedVoteAsync(string xmlString, object userState) {
            if ((this.AddIncidentResolvedVoteOperationCompleted == null)) {
                this.AddIncidentResolvedVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIncidentResolvedVoteOperationCompleted);
            }
            this.InvokeAsync("AddIncidentResolvedVote", new object[] {
                        xmlString}, this.AddIncidentResolvedVoteOperationCompleted, userState);
        }
        
        private void OnAddIncidentResolvedVoteOperationCompleted(object arg) {
            if ((this.AddIncidentResolvedVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIncidentResolvedVoteCompleted(this, new AddIncidentResolvedVoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateIncidentCompletedEventHandler(object sender, CreateIncidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateIncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateIncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchIncidentsCompletedEventHandler(object sender, SearchIncidentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchIncidentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchIncidentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerNotesCompletedEventHandler(object sender, GetCustomerNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddIncidentNoteCompletedEventHandler(object sender, AddIncidentNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIncidentNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIncidentNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetIncidentAttachmentsCompletedEventHandler(object sender, GetIncidentAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncidentAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncidentAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddIncidentResolvedVoteCompletedEventHandler(object sender, AddIncidentResolvedVoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIncidentResolvedVoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIncidentResolvedVoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591