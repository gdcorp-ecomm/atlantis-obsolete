//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DomainsBot.Impl.domainsBot {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FirstImpactSoap", Namespace="DomainsBot.FirstImpact")]
    public partial class FirstImpact : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainsSimplifiedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainsExOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FirstImpact() {
            this.Url = global::Atlantis.Framework.DomainsBot.Impl.Properties.Settings.Default.Atlantis_Framework_DomainsBot_Impl_domainsBot_FirstImpact;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDomainsCompletedEventHandler GetDomainsCompleted;
        
        /// <remarks/>
        public event GetDomainsSimplifiedCompletedEventHandler GetDomainsSimplifiedCompleted;
        
        /// <remarks/>
        public event GetDomainsExCompletedEventHandler GetDomainsExCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DomainsBot.FirstImpact/GetDomains", RequestNamespace="DomainsBot.FirstImpact", ResponseNamespace="DomainsBot.FirstImpact", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Domain[] GetDomains(string Key, string sessionId) {
            object[] results = this.Invoke("GetDomains", new object[] {
                        Key,
                        sessionId});
            return ((Domain[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDomains(string Key, string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDomains", new object[] {
                        Key,
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Domain[] EndGetDomains(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Domain[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainsAsync(string Key, string sessionId) {
            this.GetDomainsAsync(Key, sessionId, null);
        }
        
        /// <remarks/>
        public void GetDomainsAsync(string Key, string sessionId, object userState) {
            if ((this.GetDomainsOperationCompleted == null)) {
                this.GetDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainsOperationCompleted);
            }
            this.InvokeAsync("GetDomains", new object[] {
                        Key,
                        sessionId}, this.GetDomainsOperationCompleted, userState);
        }
        
        private void OnGetDomainsOperationCompleted(object arg) {
            if ((this.GetDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainsCompleted(this, new GetDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DomainsBot.FirstImpact/GetDomainsSimplified", RequestNamespace="DomainsBot.FirstImpact", ResponseNamespace="DomainsBot.FirstImpact", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Domain[] GetDomainsSimplified(string Key, int MaxResults, bool AddDashes) {
            object[] results = this.Invoke("GetDomainsSimplified", new object[] {
                        Key,
                        MaxResults,
                        AddDashes});
            return ((Domain[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDomainsSimplified(string Key, int MaxResults, bool AddDashes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDomainsSimplified", new object[] {
                        Key,
                        MaxResults,
                        AddDashes}, callback, asyncState);
        }
        
        /// <remarks/>
        public Domain[] EndGetDomainsSimplified(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Domain[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainsSimplifiedAsync(string Key, int MaxResults, bool AddDashes) {
            this.GetDomainsSimplifiedAsync(Key, MaxResults, AddDashes, null);
        }
        
        /// <remarks/>
        public void GetDomainsSimplifiedAsync(string Key, int MaxResults, bool AddDashes, object userState) {
            if ((this.GetDomainsSimplifiedOperationCompleted == null)) {
                this.GetDomainsSimplifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainsSimplifiedOperationCompleted);
            }
            this.InvokeAsync("GetDomainsSimplified", new object[] {
                        Key,
                        MaxResults,
                        AddDashes}, this.GetDomainsSimplifiedOperationCompleted, userState);
        }
        
        private void OnGetDomainsSimplifiedOperationCompleted(object arg) {
            if ((this.GetDomainsSimplifiedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainsSimplifiedCompleted(this, new GetDomainsSimplifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DomainsBot.FirstImpact/GetDomainsEx", RequestNamespace="DomainsBot.FirstImpact", ResponseNamespace="DomainsBot.FirstImpact", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchResult GetDomainsEx(string Key, int MaxResults, bool ExcludeTaken, Tld[] Tlds, bool AddPref, bool AddSuff, bool AddDashes, bool AddRelated, bool AdvancedSplit, bool BaseOnTop, string sessionId) {
            object[] results = this.Invoke("GetDomainsEx", new object[] {
                        Key,
                        MaxResults,
                        ExcludeTaken,
                        Tlds,
                        AddPref,
                        AddSuff,
                        AddDashes,
                        AddRelated,
                        AdvancedSplit,
                        BaseOnTop,
                        sessionId});
            return ((SearchResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDomainsEx(string Key, int MaxResults, bool ExcludeTaken, Tld[] Tlds, bool AddPref, bool AddSuff, bool AddDashes, bool AddRelated, bool AdvancedSplit, bool BaseOnTop, string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDomainsEx", new object[] {
                        Key,
                        MaxResults,
                        ExcludeTaken,
                        Tlds,
                        AddPref,
                        AddSuff,
                        AddDashes,
                        AddRelated,
                        AdvancedSplit,
                        BaseOnTop,
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SearchResult EndGetDomainsEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainsExAsync(string Key, int MaxResults, bool ExcludeTaken, Tld[] Tlds, bool AddPref, bool AddSuff, bool AddDashes, bool AddRelated, bool AdvancedSplit, bool BaseOnTop, string sessionId) {
            this.GetDomainsExAsync(Key, MaxResults, ExcludeTaken, Tlds, AddPref, AddSuff, AddDashes, AddRelated, AdvancedSplit, BaseOnTop, sessionId, null);
        }
        
        /// <remarks/>
        public void GetDomainsExAsync(string Key, int MaxResults, bool ExcludeTaken, Tld[] Tlds, bool AddPref, bool AddSuff, bool AddDashes, bool AddRelated, bool AdvancedSplit, bool BaseOnTop, string sessionId, object userState) {
            if ((this.GetDomainsExOperationCompleted == null)) {
                this.GetDomainsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainsExOperationCompleted);
            }
            this.InvokeAsync("GetDomainsEx", new object[] {
                        Key,
                        MaxResults,
                        ExcludeTaken,
                        Tlds,
                        AddPref,
                        AddSuff,
                        AddDashes,
                        AddRelated,
                        AdvancedSplit,
                        BaseOnTop,
                        sessionId}, this.GetDomainsExOperationCompleted, userState);
        }
        
        private void OnGetDomainsExOperationCompleted(object arg) {
            if ((this.GetDomainsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainsExCompleted(this, new GetDomainsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DomainsBot.FirstImpact")]
    public partial class Domain {
        
        private string nameField;
        
        private int rateField;
        
        private bool isTypedNameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTypedName {
            get {
                return this.isTypedNameField;
            }
            set {
                this.isTypedNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DomainsBot.FirstImpact")]
    public partial class SearchResult {
        
        private Domain[] domainsField;
        
        private int availableResultsField;
        
        /// <remarks/>
        public Domain[] Domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
        
        /// <remarks/>
        public int AvailableResults {
            get {
                return this.availableResultsField;
            }
            set {
                this.availableResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DomainsBot.FirstImpact")]
    public partial class Tld {
        
        private string extensionField;
        
        private double factorField;
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public double Factor {
            get {
                return this.factorField;
            }
            set {
                this.factorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainsCompletedEventHandler(object sender, GetDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Domain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Domain[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainsSimplifiedCompletedEventHandler(object sender, GetDomainsSimplifiedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainsSimplifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainsSimplifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Domain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Domain[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainsExCompletedEventHandler(object sender, GetDomainsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591