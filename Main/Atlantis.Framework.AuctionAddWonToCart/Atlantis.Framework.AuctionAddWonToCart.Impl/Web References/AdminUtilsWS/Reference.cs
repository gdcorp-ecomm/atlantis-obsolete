//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.AuctionAddWonToCart.Impl.AdminUtilsWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="trpAdminUtilsServiceSoap", Namespace="trpAdminUtilsService")]
    public partial class trpAdminUtilsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getRSSStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnpaidExpiredAuctionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnpaidAuctionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnpaidAuctionsByShopperIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExpiredAuctionsToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExpiredAuctionsToCartWithITCOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemsIveWonToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemsIveWonToCartWithITCOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddValuePricedDomainToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberIsSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberIsActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMembershipToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMembersAreaBySectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMembersAreaAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMembersAreaBySingleSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMembersAreaBySectionXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDomainListingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDomainListingsToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDomainListingsToCartVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportAPPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback OptionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedTldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListingsByShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsellShopperListingOperationCompleted;
        
        private System.Threading.SendOrPostCallback BDDomainCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BDHoldDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback BDReleaseDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback CLSItemCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CLSBidCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CLSBidStatusUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CLSBidInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTDNAMWhoIsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuctionSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberInfoByShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMemberSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberSavedSearchesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public trpAdminUtilsService() {
            this.Url = global::Atlantis.Framework.AuctionAddWonToCart.Impl.Properties.Settings.Default.Atlantis_Framework_AuctionAddWonToCart_Impl_AdminUtilsWS_trpAdminUtilsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getRSSStatusCompletedEventHandler getRSSStatusCompleted;
        
        /// <remarks/>
        public event getServiceStatusCompletedEventHandler getServiceStatusCompleted;
        
        /// <remarks/>
        public event ResetCacheCompletedEventHandler ResetCacheCompleted;
        
        /// <remarks/>
        public event GetUnpaidExpiredAuctionsCompletedEventHandler GetUnpaidExpiredAuctionsCompleted;
        
        /// <remarks/>
        public event GetUnpaidAuctionsCompletedEventHandler GetUnpaidAuctionsCompleted;
        
        /// <remarks/>
        public event GetUnpaidAuctionsByShopperIDCompletedEventHandler GetUnpaidAuctionsByShopperIDCompleted;
        
        /// <remarks/>
        public event AddExpiredAuctionsToCartCompletedEventHandler AddExpiredAuctionsToCartCompleted;
        
        /// <remarks/>
        public event AddExpiredAuctionsToCartWithITCCompletedEventHandler AddExpiredAuctionsToCartWithITCCompleted;
        
        /// <remarks/>
        public event AddItemsIveWonToCartCompletedEventHandler AddItemsIveWonToCartCompleted;
        
        /// <remarks/>
        public event AddItemsIveWonToCartWithITCCompletedEventHandler AddItemsIveWonToCartWithITCCompleted;
        
        /// <remarks/>
        public event AddValuePricedDomainToCartCompletedEventHandler AddValuePricedDomainToCartCompleted;
        
        /// <remarks/>
        public event MemberIsSubscriberCompletedEventHandler MemberIsSubscriberCompleted;
        
        /// <remarks/>
        public event MemberIsActiveCompletedEventHandler MemberIsActiveCompleted;
        
        /// <remarks/>
        public event AddMembershipToCartCompletedEventHandler AddMembershipToCartCompleted;
        
        /// <remarks/>
        public event GetMembersAreaBySectionCompletedEventHandler GetMembersAreaBySectionCompleted;
        
        /// <remarks/>
        public event GetMembersAreaAlertsCompletedEventHandler GetMembersAreaAlertsCompleted;
        
        /// <remarks/>
        public event GetMembersAreaBySingleSectionCompletedEventHandler GetMembersAreaBySingleSectionCompleted;
        
        /// <remarks/>
        public event GetMembersAreaBySectionXMLCompletedEventHandler GetMembersAreaBySectionXMLCompleted;
        
        /// <remarks/>
        public event UpdateMemberPreferencesCompletedEventHandler UpdateMemberPreferencesCompleted;
        
        /// <remarks/>
        public event LoadDomainListingsCompletedEventHandler LoadDomainListingsCompleted;
        
        /// <remarks/>
        public event LoadDomainListingsToCartCompletedEventHandler LoadDomainListingsToCartCompleted;
        
        /// <remarks/>
        public event LoadDomainListingsToCartVendorCompletedEventHandler LoadDomainListingsToCartVendorCompleted;
        
        /// <remarks/>
        public event ImportAPPaymentCompletedEventHandler ImportAPPaymentCompleted;
        
        /// <remarks/>
        public event GetConfigSettingCompletedEventHandler GetConfigSettingCompleted;
        
        /// <remarks/>
        public event GetReferenceTableCompletedEventHandler GetReferenceTableCompleted;
        
        /// <remarks/>
        public event OptionListCompletedEventHandler OptionListCompleted;
        
        /// <remarks/>
        public event GetSupportedTldsCompletedEventHandler GetSupportedTldsCompleted;
        
        /// <remarks/>
        public event GetListingsByShopperCompletedEventHandler GetListingsByShopperCompleted;
        
        /// <remarks/>
        public event UpsellShopperListingCompletedEventHandler UpsellShopperListingCompleted;
        
        /// <remarks/>
        public event BDDomainCheckCompletedEventHandler BDDomainCheckCompleted;
        
        /// <remarks/>
        public event BDHoldDomainCompletedEventHandler BDHoldDomainCompleted;
        
        /// <remarks/>
        public event BDReleaseDomainCompletedEventHandler BDReleaseDomainCompleted;
        
        /// <remarks/>
        public event CLSItemCheckCompletedEventHandler CLSItemCheckCompleted;
        
        /// <remarks/>
        public event CLSBidCreateCompletedEventHandler CLSBidCreateCompleted;
        
        /// <remarks/>
        public event CLSBidStatusUpdateCompletedEventHandler CLSBidStatusUpdateCompleted;
        
        /// <remarks/>
        public event CLSBidInfoCompletedEventHandler CLSBidInfoCompleted;
        
        /// <remarks/>
        public event GetTDNAMWhoIsCompletedEventHandler GetTDNAMWhoIsCompleted;
        
        /// <remarks/>
        public event AuctionSearchCompletedEventHandler AuctionSearchCompleted;
        
        /// <remarks/>
        public event GetMemberInfoByShopperCompletedEventHandler GetMemberInfoByShopperCompleted;
        
        /// <remarks/>
        public event GetMemberSettingsCompletedEventHandler GetMemberSettingsCompleted;
        
        /// <remarks/>
        public event SetMemberSettingsCompletedEventHandler SetMemberSettingsCompleted;
        
        /// <remarks/>
        public event GetMemberSavedSearchesCompletedEventHandler GetMemberSavedSearchesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/getRSSStatus", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getRSSStatus() {
            object[] results = this.Invoke("getRSSStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRSSStatusAsync() {
            this.getRSSStatusAsync(null);
        }
        
        /// <remarks/>
        public void getRSSStatusAsync(object userState) {
            if ((this.getRSSStatusOperationCompleted == null)) {
                this.getRSSStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRSSStatusOperationCompleted);
            }
            this.InvokeAsync("getRSSStatus", new object[0], this.getRSSStatusOperationCompleted, userState);
        }
        
        private void OngetRSSStatusOperationCompleted(object arg) {
            if ((this.getRSSStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRSSStatusCompleted(this, new getRSSStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/getServiceStatus", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getServiceStatus(string sDummy) {
            object[] results = this.Invoke("getServiceStatus", new object[] {
                        sDummy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceStatusAsync(string sDummy) {
            this.getServiceStatusAsync(sDummy, null);
        }
        
        /// <remarks/>
        public void getServiceStatusAsync(string sDummy, object userState) {
            if ((this.getServiceStatusOperationCompleted == null)) {
                this.getServiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceStatusOperationCompleted);
            }
            this.InvokeAsync("getServiceStatus", new object[] {
                        sDummy}, this.getServiceStatusOperationCompleted, userState);
        }
        
        private void OngetServiceStatusOperationCompleted(object arg) {
            if ((this.getServiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceStatusCompleted(this, new getServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/ResetCache", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetCache() {
            object[] results = this.Invoke("ResetCache", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetCacheAsync() {
            this.ResetCacheAsync(null);
        }
        
        /// <remarks/>
        public void ResetCacheAsync(object userState) {
            if ((this.ResetCacheOperationCompleted == null)) {
                this.ResetCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetCacheOperationCompleted);
            }
            this.InvokeAsync("ResetCache", new object[0], this.ResetCacheOperationCompleted, userState);
        }
        
        private void OnResetCacheOperationCompleted(object arg) {
            if ((this.ResetCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetCacheCompleted(this, new ResetCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetUnpaidExpiredAuctions", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnpaidExpiredAuctions(string sShopperID) {
            object[] results = this.Invoke("GetUnpaidExpiredAuctions", new object[] {
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnpaidExpiredAuctionsAsync(string sShopperID) {
            this.GetUnpaidExpiredAuctionsAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void GetUnpaidExpiredAuctionsAsync(string sShopperID, object userState) {
            if ((this.GetUnpaidExpiredAuctionsOperationCompleted == null)) {
                this.GetUnpaidExpiredAuctionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnpaidExpiredAuctionsOperationCompleted);
            }
            this.InvokeAsync("GetUnpaidExpiredAuctions", new object[] {
                        sShopperID}, this.GetUnpaidExpiredAuctionsOperationCompleted, userState);
        }
        
        private void OnGetUnpaidExpiredAuctionsOperationCompleted(object arg) {
            if ((this.GetUnpaidExpiredAuctionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnpaidExpiredAuctionsCompleted(this, new GetUnpaidExpiredAuctionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetUnpaidAuctions", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnpaidAuctions() {
            object[] results = this.Invoke("GetUnpaidAuctions", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnpaidAuctionsAsync() {
            this.GetUnpaidAuctionsAsync(null);
        }
        
        /// <remarks/>
        public void GetUnpaidAuctionsAsync(object userState) {
            if ((this.GetUnpaidAuctionsOperationCompleted == null)) {
                this.GetUnpaidAuctionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnpaidAuctionsOperationCompleted);
            }
            this.InvokeAsync("GetUnpaidAuctions", new object[0], this.GetUnpaidAuctionsOperationCompleted, userState);
        }
        
        private void OnGetUnpaidAuctionsOperationCompleted(object arg) {
            if ((this.GetUnpaidAuctionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnpaidAuctionsCompleted(this, new GetUnpaidAuctionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetUnpaidAuctionsByShopperID", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnpaidAuctionsByShopperID(string ShopperID) {
            object[] results = this.Invoke("GetUnpaidAuctionsByShopperID", new object[] {
                        ShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnpaidAuctionsByShopperIDAsync(string ShopperID) {
            this.GetUnpaidAuctionsByShopperIDAsync(ShopperID, null);
        }
        
        /// <remarks/>
        public void GetUnpaidAuctionsByShopperIDAsync(string ShopperID, object userState) {
            if ((this.GetUnpaidAuctionsByShopperIDOperationCompleted == null)) {
                this.GetUnpaidAuctionsByShopperIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnpaidAuctionsByShopperIDOperationCompleted);
            }
            this.InvokeAsync("GetUnpaidAuctionsByShopperID", new object[] {
                        ShopperID}, this.GetUnpaidAuctionsByShopperIDOperationCompleted, userState);
        }
        
        private void OnGetUnpaidAuctionsByShopperIDOperationCompleted(object arg) {
            if ((this.GetUnpaidAuctionsByShopperIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnpaidAuctionsByShopperIDCompleted(this, new GetUnpaidAuctionsByShopperIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AddExpiredAuctionsToCart", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddExpiredAuctionsToCart(string sShopperID, string sIDList, string sISC) {
            object[] results = this.Invoke("AddExpiredAuctionsToCart", new object[] {
                        sShopperID,
                        sIDList,
                        sISC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddExpiredAuctionsToCartAsync(string sShopperID, string sIDList, string sISC) {
            this.AddExpiredAuctionsToCartAsync(sShopperID, sIDList, sISC, null);
        }
        
        /// <remarks/>
        public void AddExpiredAuctionsToCartAsync(string sShopperID, string sIDList, string sISC, object userState) {
            if ((this.AddExpiredAuctionsToCartOperationCompleted == null)) {
                this.AddExpiredAuctionsToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExpiredAuctionsToCartOperationCompleted);
            }
            this.InvokeAsync("AddExpiredAuctionsToCart", new object[] {
                        sShopperID,
                        sIDList,
                        sISC}, this.AddExpiredAuctionsToCartOperationCompleted, userState);
        }
        
        private void OnAddExpiredAuctionsToCartOperationCompleted(object arg) {
            if ((this.AddExpiredAuctionsToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExpiredAuctionsToCartCompleted(this, new AddExpiredAuctionsToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AddExpiredAuctionsToCartWithITC", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddExpiredAuctionsToCartWithITC(string sShopperID, string sIDList, string sISC, string sITC) {
            object[] results = this.Invoke("AddExpiredAuctionsToCartWithITC", new object[] {
                        sShopperID,
                        sIDList,
                        sISC,
                        sITC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddExpiredAuctionsToCartWithITCAsync(string sShopperID, string sIDList, string sISC, string sITC) {
            this.AddExpiredAuctionsToCartWithITCAsync(sShopperID, sIDList, sISC, sITC, null);
        }
        
        /// <remarks/>
        public void AddExpiredAuctionsToCartWithITCAsync(string sShopperID, string sIDList, string sISC, string sITC, object userState) {
            if ((this.AddExpiredAuctionsToCartWithITCOperationCompleted == null)) {
                this.AddExpiredAuctionsToCartWithITCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExpiredAuctionsToCartWithITCOperationCompleted);
            }
            this.InvokeAsync("AddExpiredAuctionsToCartWithITC", new object[] {
                        sShopperID,
                        sIDList,
                        sISC,
                        sITC}, this.AddExpiredAuctionsToCartWithITCOperationCompleted, userState);
        }
        
        private void OnAddExpiredAuctionsToCartWithITCOperationCompleted(object arg) {
            if ((this.AddExpiredAuctionsToCartWithITCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExpiredAuctionsToCartWithITCCompleted(this, new AddExpiredAuctionsToCartWithITCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AddItemsIveWonToCart", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddItemsIveWonToCart(string sShopperID, string sIDList, string sISC) {
            object[] results = this.Invoke("AddItemsIveWonToCart", new object[] {
                        sShopperID,
                        sIDList,
                        sISC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemsIveWonToCartAsync(string sShopperID, string sIDList, string sISC) {
            this.AddItemsIveWonToCartAsync(sShopperID, sIDList, sISC, null);
        }
        
        /// <remarks/>
        public void AddItemsIveWonToCartAsync(string sShopperID, string sIDList, string sISC, object userState) {
            if ((this.AddItemsIveWonToCartOperationCompleted == null)) {
                this.AddItemsIveWonToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemsIveWonToCartOperationCompleted);
            }
            this.InvokeAsync("AddItemsIveWonToCart", new object[] {
                        sShopperID,
                        sIDList,
                        sISC}, this.AddItemsIveWonToCartOperationCompleted, userState);
        }
        
        private void OnAddItemsIveWonToCartOperationCompleted(object arg) {
            if ((this.AddItemsIveWonToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemsIveWonToCartCompleted(this, new AddItemsIveWonToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AddItemsIveWonToCartWithITC", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddItemsIveWonToCartWithITC(string sShopperID, string sIDList, string sISC, string sITC) {
            object[] results = this.Invoke("AddItemsIveWonToCartWithITC", new object[] {
                        sShopperID,
                        sIDList,
                        sISC,
                        sITC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemsIveWonToCartWithITCAsync(string sShopperID, string sIDList, string sISC, string sITC) {
            this.AddItemsIveWonToCartWithITCAsync(sShopperID, sIDList, sISC, sITC, null);
        }
        
        /// <remarks/>
        public void AddItemsIveWonToCartWithITCAsync(string sShopperID, string sIDList, string sISC, string sITC, object userState) {
            if ((this.AddItemsIveWonToCartWithITCOperationCompleted == null)) {
                this.AddItemsIveWonToCartWithITCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemsIveWonToCartWithITCOperationCompleted);
            }
            this.InvokeAsync("AddItemsIveWonToCartWithITC", new object[] {
                        sShopperID,
                        sIDList,
                        sISC,
                        sITC}, this.AddItemsIveWonToCartWithITCOperationCompleted, userState);
        }
        
        private void OnAddItemsIveWonToCartWithITCOperationCompleted(object arg) {
            if ((this.AddItemsIveWonToCartWithITCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemsIveWonToCartWithITCCompleted(this, new AddItemsIveWonToCartWithITCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AddValuePricedDomainToCart", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddValuePricedDomainToCart(string sShopperID, string sIDList, string sISC, string sAgreementsChecked) {
            object[] results = this.Invoke("AddValuePricedDomainToCart", new object[] {
                        sShopperID,
                        sIDList,
                        sISC,
                        sAgreementsChecked});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddValuePricedDomainToCartAsync(string sShopperID, string sIDList, string sISC, string sAgreementsChecked) {
            this.AddValuePricedDomainToCartAsync(sShopperID, sIDList, sISC, sAgreementsChecked, null);
        }
        
        /// <remarks/>
        public void AddValuePricedDomainToCartAsync(string sShopperID, string sIDList, string sISC, string sAgreementsChecked, object userState) {
            if ((this.AddValuePricedDomainToCartOperationCompleted == null)) {
                this.AddValuePricedDomainToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddValuePricedDomainToCartOperationCompleted);
            }
            this.InvokeAsync("AddValuePricedDomainToCart", new object[] {
                        sShopperID,
                        sIDList,
                        sISC,
                        sAgreementsChecked}, this.AddValuePricedDomainToCartOperationCompleted, userState);
        }
        
        private void OnAddValuePricedDomainToCartOperationCompleted(object arg) {
            if ((this.AddValuePricedDomainToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddValuePricedDomainToCartCompleted(this, new AddValuePricedDomainToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/MemberIsSubscriber", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MemberIsSubscriber(string sShopperID) {
            object[] results = this.Invoke("MemberIsSubscriber", new object[] {
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MemberIsSubscriberAsync(string sShopperID) {
            this.MemberIsSubscriberAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void MemberIsSubscriberAsync(string sShopperID, object userState) {
            if ((this.MemberIsSubscriberOperationCompleted == null)) {
                this.MemberIsSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberIsSubscriberOperationCompleted);
            }
            this.InvokeAsync("MemberIsSubscriber", new object[] {
                        sShopperID}, this.MemberIsSubscriberOperationCompleted, userState);
        }
        
        private void OnMemberIsSubscriberOperationCompleted(object arg) {
            if ((this.MemberIsSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberIsSubscriberCompleted(this, new MemberIsSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/MemberIsActive", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MemberIsActive(string sShopperID) {
            object[] results = this.Invoke("MemberIsActive", new object[] {
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MemberIsActiveAsync(string sShopperID) {
            this.MemberIsActiveAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void MemberIsActiveAsync(string sShopperID, object userState) {
            if ((this.MemberIsActiveOperationCompleted == null)) {
                this.MemberIsActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberIsActiveOperationCompleted);
            }
            this.InvokeAsync("MemberIsActive", new object[] {
                        sShopperID}, this.MemberIsActiveOperationCompleted, userState);
        }
        
        private void OnMemberIsActiveOperationCompleted(object arg) {
            if ((this.MemberIsActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberIsActiveCompleted(this, new MemberIsActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AddMembershipToCart", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddMembershipToCart(string sShopperID, string sISCCode) {
            object[] results = this.Invoke("AddMembershipToCart", new object[] {
                        sShopperID,
                        sISCCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMembershipToCartAsync(string sShopperID, string sISCCode) {
            this.AddMembershipToCartAsync(sShopperID, sISCCode, null);
        }
        
        /// <remarks/>
        public void AddMembershipToCartAsync(string sShopperID, string sISCCode, object userState) {
            if ((this.AddMembershipToCartOperationCompleted == null)) {
                this.AddMembershipToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMembershipToCartOperationCompleted);
            }
            this.InvokeAsync("AddMembershipToCart", new object[] {
                        sShopperID,
                        sISCCode}, this.AddMembershipToCartOperationCompleted, userState);
        }
        
        private void OnAddMembershipToCartOperationCompleted(object arg) {
            if ((this.AddMembershipToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMembershipToCartCompleted(this, new AddMembershipToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMembersAreaBySection", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMembersAreaBySection(string sShopperID, string sMembersAreaID, string sReturnBids) {
            object[] results = this.Invoke("GetMembersAreaBySection", new object[] {
                        sShopperID,
                        sMembersAreaID,
                        sReturnBids});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMembersAreaBySectionAsync(string sShopperID, string sMembersAreaID, string sReturnBids) {
            this.GetMembersAreaBySectionAsync(sShopperID, sMembersAreaID, sReturnBids, null);
        }
        
        /// <remarks/>
        public void GetMembersAreaBySectionAsync(string sShopperID, string sMembersAreaID, string sReturnBids, object userState) {
            if ((this.GetMembersAreaBySectionOperationCompleted == null)) {
                this.GetMembersAreaBySectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMembersAreaBySectionOperationCompleted);
            }
            this.InvokeAsync("GetMembersAreaBySection", new object[] {
                        sShopperID,
                        sMembersAreaID,
                        sReturnBids}, this.GetMembersAreaBySectionOperationCompleted, userState);
        }
        
        private void OnGetMembersAreaBySectionOperationCompleted(object arg) {
            if ((this.GetMembersAreaBySectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMembersAreaBySectionCompleted(this, new GetMembersAreaBySectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMembersAreaAlerts", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMembersAreaAlerts(string sShopperID) {
            object[] results = this.Invoke("GetMembersAreaAlerts", new object[] {
                        sShopperID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMembersAreaAlertsAsync(string sShopperID) {
            this.GetMembersAreaAlertsAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void GetMembersAreaAlertsAsync(string sShopperID, object userState) {
            if ((this.GetMembersAreaAlertsOperationCompleted == null)) {
                this.GetMembersAreaAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMembersAreaAlertsOperationCompleted);
            }
            this.InvokeAsync("GetMembersAreaAlerts", new object[] {
                        sShopperID}, this.GetMembersAreaAlertsOperationCompleted, userState);
        }
        
        private void OnGetMembersAreaAlertsOperationCompleted(object arg) {
            if ((this.GetMembersAreaAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMembersAreaAlertsCompleted(this, new GetMembersAreaAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMembersAreaBySingleSection", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMembersAreaBySingleSection(string sShopperID, string sMembersAreaID, string sReturnBids) {
            object[] results = this.Invoke("GetMembersAreaBySingleSection", new object[] {
                        sShopperID,
                        sMembersAreaID,
                        sReturnBids});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMembersAreaBySingleSectionAsync(string sShopperID, string sMembersAreaID, string sReturnBids) {
            this.GetMembersAreaBySingleSectionAsync(sShopperID, sMembersAreaID, sReturnBids, null);
        }
        
        /// <remarks/>
        public void GetMembersAreaBySingleSectionAsync(string sShopperID, string sMembersAreaID, string sReturnBids, object userState) {
            if ((this.GetMembersAreaBySingleSectionOperationCompleted == null)) {
                this.GetMembersAreaBySingleSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMembersAreaBySingleSectionOperationCompleted);
            }
            this.InvokeAsync("GetMembersAreaBySingleSection", new object[] {
                        sShopperID,
                        sMembersAreaID,
                        sReturnBids}, this.GetMembersAreaBySingleSectionOperationCompleted, userState);
        }
        
        private void OnGetMembersAreaBySingleSectionOperationCompleted(object arg) {
            if ((this.GetMembersAreaBySingleSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMembersAreaBySingleSectionCompleted(this, new GetMembersAreaBySingleSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMembersAreaBySectionXML", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMembersAreaBySectionXML(string xmlInput) {
            object[] results = this.Invoke("GetMembersAreaBySectionXML", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMembersAreaBySectionXMLAsync(string xmlInput) {
            this.GetMembersAreaBySectionXMLAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetMembersAreaBySectionXMLAsync(string xmlInput, object userState) {
            if ((this.GetMembersAreaBySectionXMLOperationCompleted == null)) {
                this.GetMembersAreaBySectionXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMembersAreaBySectionXMLOperationCompleted);
            }
            this.InvokeAsync("GetMembersAreaBySectionXML", new object[] {
                        xmlInput}, this.GetMembersAreaBySectionXMLOperationCompleted, userState);
        }
        
        private void OnGetMembersAreaBySectionXMLOperationCompleted(object arg) {
            if ((this.GetMembersAreaBySectionXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMembersAreaBySectionXMLCompleted(this, new GetMembersAreaBySectionXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/UpdateMemberPreferences", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMemberPreferences(string sShopperID, string sPayPalEmail, string sRecordsPerPage, string sAdultFilterFlag) {
            object[] results = this.Invoke("UpdateMemberPreferences", new object[] {
                        sShopperID,
                        sPayPalEmail,
                        sRecordsPerPage,
                        sAdultFilterFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberPreferencesAsync(string sShopperID, string sPayPalEmail, string sRecordsPerPage, string sAdultFilterFlag) {
            this.UpdateMemberPreferencesAsync(sShopperID, sPayPalEmail, sRecordsPerPage, sAdultFilterFlag, null);
        }
        
        /// <remarks/>
        public void UpdateMemberPreferencesAsync(string sShopperID, string sPayPalEmail, string sRecordsPerPage, string sAdultFilterFlag, object userState) {
            if ((this.UpdateMemberPreferencesOperationCompleted == null)) {
                this.UpdateMemberPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberPreferencesOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberPreferences", new object[] {
                        sShopperID,
                        sPayPalEmail,
                        sRecordsPerPage,
                        sAdultFilterFlag}, this.UpdateMemberPreferencesOperationCompleted, userState);
        }
        
        private void OnUpdateMemberPreferencesOperationCompleted(object arg) {
            if ((this.UpdateMemberPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberPreferencesCompleted(this, new UpdateMemberPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/LoadDomainListings", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDomainListings(string sShopperID, string sInputString, string sPayPalAddress) {
            object[] results = this.Invoke("LoadDomainListings", new object[] {
                        sShopperID,
                        sInputString,
                        sPayPalAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDomainListingsAsync(string sShopperID, string sInputString, string sPayPalAddress) {
            this.LoadDomainListingsAsync(sShopperID, sInputString, sPayPalAddress, null);
        }
        
        /// <remarks/>
        public void LoadDomainListingsAsync(string sShopperID, string sInputString, string sPayPalAddress, object userState) {
            if ((this.LoadDomainListingsOperationCompleted == null)) {
                this.LoadDomainListingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDomainListingsOperationCompleted);
            }
            this.InvokeAsync("LoadDomainListings", new object[] {
                        sShopperID,
                        sInputString,
                        sPayPalAddress}, this.LoadDomainListingsOperationCompleted, userState);
        }
        
        private void OnLoadDomainListingsOperationCompleted(object arg) {
            if ((this.LoadDomainListingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDomainListingsCompleted(this, new LoadDomainListingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/LoadDomainListingsToCart", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDomainListingsToCart(string sShopperID, string sInputString, string sPayPalAddress, string sISCCode, string sAgreementChecked) {
            object[] results = this.Invoke("LoadDomainListingsToCart", new object[] {
                        sShopperID,
                        sInputString,
                        sPayPalAddress,
                        sISCCode,
                        sAgreementChecked});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDomainListingsToCartAsync(string sShopperID, string sInputString, string sPayPalAddress, string sISCCode, string sAgreementChecked) {
            this.LoadDomainListingsToCartAsync(sShopperID, sInputString, sPayPalAddress, sISCCode, sAgreementChecked, null);
        }
        
        /// <remarks/>
        public void LoadDomainListingsToCartAsync(string sShopperID, string sInputString, string sPayPalAddress, string sISCCode, string sAgreementChecked, object userState) {
            if ((this.LoadDomainListingsToCartOperationCompleted == null)) {
                this.LoadDomainListingsToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDomainListingsToCartOperationCompleted);
            }
            this.InvokeAsync("LoadDomainListingsToCart", new object[] {
                        sShopperID,
                        sInputString,
                        sPayPalAddress,
                        sISCCode,
                        sAgreementChecked}, this.LoadDomainListingsToCartOperationCompleted, userState);
        }
        
        private void OnLoadDomainListingsToCartOperationCompleted(object arg) {
            if ((this.LoadDomainListingsToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDomainListingsToCartCompleted(this, new LoadDomainListingsToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/LoadDomainListingsToCartVendor", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDomainListingsToCartVendor(string sShopperID, string sInputString, string sPayPalAddress, string sISCCode, string sAgreementChecked, string sVendorId) {
            object[] results = this.Invoke("LoadDomainListingsToCartVendor", new object[] {
                        sShopperID,
                        sInputString,
                        sPayPalAddress,
                        sISCCode,
                        sAgreementChecked,
                        sVendorId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDomainListingsToCartVendorAsync(string sShopperID, string sInputString, string sPayPalAddress, string sISCCode, string sAgreementChecked, string sVendorId) {
            this.LoadDomainListingsToCartVendorAsync(sShopperID, sInputString, sPayPalAddress, sISCCode, sAgreementChecked, sVendorId, null);
        }
        
        /// <remarks/>
        public void LoadDomainListingsToCartVendorAsync(string sShopperID, string sInputString, string sPayPalAddress, string sISCCode, string sAgreementChecked, string sVendorId, object userState) {
            if ((this.LoadDomainListingsToCartVendorOperationCompleted == null)) {
                this.LoadDomainListingsToCartVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDomainListingsToCartVendorOperationCompleted);
            }
            this.InvokeAsync("LoadDomainListingsToCartVendor", new object[] {
                        sShopperID,
                        sInputString,
                        sPayPalAddress,
                        sISCCode,
                        sAgreementChecked,
                        sVendorId}, this.LoadDomainListingsToCartVendorOperationCompleted, userState);
        }
        
        private void OnLoadDomainListingsToCartVendorOperationCompleted(object arg) {
            if ((this.LoadDomainListingsToCartVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDomainListingsToCartVendorCompleted(this, new LoadDomainListingsToCartVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/ImportAPPayment", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ImportAPPayment(string xml) {
            object[] results = this.Invoke("ImportAPPayment", new object[] {
                        xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ImportAPPaymentAsync(string xml) {
            this.ImportAPPaymentAsync(xml, null);
        }
        
        /// <remarks/>
        public void ImportAPPaymentAsync(string xml, object userState) {
            if ((this.ImportAPPaymentOperationCompleted == null)) {
                this.ImportAPPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportAPPaymentOperationCompleted);
            }
            this.InvokeAsync("ImportAPPayment", new object[] {
                        xml}, this.ImportAPPaymentOperationCompleted, userState);
        }
        
        private void OnImportAPPaymentOperationCompleted(object arg) {
            if ((this.ImportAPPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportAPPaymentCompleted(this, new ImportAPPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetConfigSetting", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfigSetting(string sConfigFile, string sKey) {
            object[] results = this.Invoke("GetConfigSetting", new object[] {
                        sConfigFile,
                        sKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigSettingAsync(string sConfigFile, string sKey) {
            this.GetConfigSettingAsync(sConfigFile, sKey, null);
        }
        
        /// <remarks/>
        public void GetConfigSettingAsync(string sConfigFile, string sKey, object userState) {
            if ((this.GetConfigSettingOperationCompleted == null)) {
                this.GetConfigSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigSettingOperationCompleted);
            }
            this.InvokeAsync("GetConfigSetting", new object[] {
                        sConfigFile,
                        sKey}, this.GetConfigSettingOperationCompleted, userState);
        }
        
        private void OnGetConfigSettingOperationCompleted(object arg) {
            if ((this.GetConfigSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigSettingCompleted(this, new GetConfigSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetReferenceTable", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferenceTable(string sTable) {
            object[] results = this.Invoke("GetReferenceTable", new object[] {
                        sTable});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceTableAsync(string sTable) {
            this.GetReferenceTableAsync(sTable, null);
        }
        
        /// <remarks/>
        public void GetReferenceTableAsync(string sTable, object userState) {
            if ((this.GetReferenceTableOperationCompleted == null)) {
                this.GetReferenceTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceTableOperationCompleted);
            }
            this.InvokeAsync("GetReferenceTable", new object[] {
                        sTable}, this.GetReferenceTableOperationCompleted, userState);
        }
        
        private void OnGetReferenceTableOperationCompleted(object arg) {
            if ((this.GetReferenceTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceTableCompleted(this, new GetReferenceTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/OptionList", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OptionList(string sOptionType) {
            object[] results = this.Invoke("OptionList", new object[] {
                        sOptionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OptionListAsync(string sOptionType) {
            this.OptionListAsync(sOptionType, null);
        }
        
        /// <remarks/>
        public void OptionListAsync(string sOptionType, object userState) {
            if ((this.OptionListOperationCompleted == null)) {
                this.OptionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOptionListOperationCompleted);
            }
            this.InvokeAsync("OptionList", new object[] {
                        sOptionType}, this.OptionListOperationCompleted, userState);
        }
        
        private void OnOptionListOperationCompleted(object arg) {
            if ((this.OptionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OptionListCompleted(this, new OptionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetSupportedTlds", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupportedTlds() {
            object[] results = this.Invoke("GetSupportedTlds", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedTldsAsync() {
            this.GetSupportedTldsAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedTldsAsync(object userState) {
            if ((this.GetSupportedTldsOperationCompleted == null)) {
                this.GetSupportedTldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedTldsOperationCompleted);
            }
            this.InvokeAsync("GetSupportedTlds", new object[0], this.GetSupportedTldsOperationCompleted, userState);
        }
        
        private void OnGetSupportedTldsOperationCompleted(object arg) {
            if ((this.GetSupportedTldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedTldsCompleted(this, new GetSupportedTldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetListingsByShopper", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListingsByShopper(string sShopperID, string sSearchVal, string sCurrentPageIndex, string sPageSize) {
            object[] results = this.Invoke("GetListingsByShopper", new object[] {
                        sShopperID,
                        sSearchVal,
                        sCurrentPageIndex,
                        sPageSize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListingsByShopperAsync(string sShopperID, string sSearchVal, string sCurrentPageIndex, string sPageSize) {
            this.GetListingsByShopperAsync(sShopperID, sSearchVal, sCurrentPageIndex, sPageSize, null);
        }
        
        /// <remarks/>
        public void GetListingsByShopperAsync(string sShopperID, string sSearchVal, string sCurrentPageIndex, string sPageSize, object userState) {
            if ((this.GetListingsByShopperOperationCompleted == null)) {
                this.GetListingsByShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListingsByShopperOperationCompleted);
            }
            this.InvokeAsync("GetListingsByShopper", new object[] {
                        sShopperID,
                        sSearchVal,
                        sCurrentPageIndex,
                        sPageSize}, this.GetListingsByShopperOperationCompleted, userState);
        }
        
        private void OnGetListingsByShopperOperationCompleted(object arg) {
            if ((this.GetListingsByShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListingsByShopperCompleted(this, new GetListingsByShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/UpsellShopperListing", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsellShopperListing(string sShopperID, string sListingInput, string sISC) {
            object[] results = this.Invoke("UpsellShopperListing", new object[] {
                        sShopperID,
                        sListingInput,
                        sISC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsellShopperListingAsync(string sShopperID, string sListingInput, string sISC) {
            this.UpsellShopperListingAsync(sShopperID, sListingInput, sISC, null);
        }
        
        /// <remarks/>
        public void UpsellShopperListingAsync(string sShopperID, string sListingInput, string sISC, object userState) {
            if ((this.UpsellShopperListingOperationCompleted == null)) {
                this.UpsellShopperListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsellShopperListingOperationCompleted);
            }
            this.InvokeAsync("UpsellShopperListing", new object[] {
                        sShopperID,
                        sListingInput,
                        sISC}, this.UpsellShopperListingOperationCompleted, userState);
        }
        
        private void OnUpsellShopperListingOperationCompleted(object arg) {
            if ((this.UpsellShopperListingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsellShopperListingCompleted(this, new UpsellShopperListingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/BDDomainCheck", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BDDomainCheck(string sDomainName) {
            object[] results = this.Invoke("BDDomainCheck", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BDDomainCheckAsync(string sDomainName) {
            this.BDDomainCheckAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void BDDomainCheckAsync(string sDomainName, object userState) {
            if ((this.BDDomainCheckOperationCompleted == null)) {
                this.BDDomainCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBDDomainCheckOperationCompleted);
            }
            this.InvokeAsync("BDDomainCheck", new object[] {
                        sDomainName}, this.BDDomainCheckOperationCompleted, userState);
        }
        
        private void OnBDDomainCheckOperationCompleted(object arg) {
            if ((this.BDDomainCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BDDomainCheckCompleted(this, new BDDomainCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/BDHoldDomain", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BDHoldDomain(string sDomainName) {
            object[] results = this.Invoke("BDHoldDomain", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BDHoldDomainAsync(string sDomainName) {
            this.BDHoldDomainAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void BDHoldDomainAsync(string sDomainName, object userState) {
            if ((this.BDHoldDomainOperationCompleted == null)) {
                this.BDHoldDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBDHoldDomainOperationCompleted);
            }
            this.InvokeAsync("BDHoldDomain", new object[] {
                        sDomainName}, this.BDHoldDomainOperationCompleted, userState);
        }
        
        private void OnBDHoldDomainOperationCompleted(object arg) {
            if ((this.BDHoldDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BDHoldDomainCompleted(this, new BDHoldDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/BDReleaseDomain", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BDReleaseDomain(string sDomainName) {
            object[] results = this.Invoke("BDReleaseDomain", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BDReleaseDomainAsync(string sDomainName) {
            this.BDReleaseDomainAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void BDReleaseDomainAsync(string sDomainName, object userState) {
            if ((this.BDReleaseDomainOperationCompleted == null)) {
                this.BDReleaseDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBDReleaseDomainOperationCompleted);
            }
            this.InvokeAsync("BDReleaseDomain", new object[] {
                        sDomainName}, this.BDReleaseDomainOperationCompleted, userState);
        }
        
        private void OnBDReleaseDomainOperationCompleted(object arg) {
            if ((this.BDReleaseDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BDReleaseDomainCompleted(this, new BDReleaseDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/CLSItemCheck", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CLSItemCheck(string sDomainName) {
            object[] results = this.Invoke("CLSItemCheck", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CLSItemCheckAsync(string sDomainName) {
            this.CLSItemCheckAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void CLSItemCheckAsync(string sDomainName, object userState) {
            if ((this.CLSItemCheckOperationCompleted == null)) {
                this.CLSItemCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCLSItemCheckOperationCompleted);
            }
            this.InvokeAsync("CLSItemCheck", new object[] {
                        sDomainName}, this.CLSItemCheckOperationCompleted, userState);
        }
        
        private void OnCLSItemCheckOperationCompleted(object arg) {
            if ((this.CLSItemCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CLSItemCheckCompleted(this, new CLSItemCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/CLSBidCreate", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CLSBidCreate(string sDomainName, string sMaxBidAmount, int iPrivateLabelID) {
            object[] results = this.Invoke("CLSBidCreate", new object[] {
                        sDomainName,
                        sMaxBidAmount,
                        iPrivateLabelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CLSBidCreateAsync(string sDomainName, string sMaxBidAmount, int iPrivateLabelID) {
            this.CLSBidCreateAsync(sDomainName, sMaxBidAmount, iPrivateLabelID, null);
        }
        
        /// <remarks/>
        public void CLSBidCreateAsync(string sDomainName, string sMaxBidAmount, int iPrivateLabelID, object userState) {
            if ((this.CLSBidCreateOperationCompleted == null)) {
                this.CLSBidCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCLSBidCreateOperationCompleted);
            }
            this.InvokeAsync("CLSBidCreate", new object[] {
                        sDomainName,
                        sMaxBidAmount,
                        iPrivateLabelID}, this.CLSBidCreateOperationCompleted, userState);
        }
        
        private void OnCLSBidCreateOperationCompleted(object arg) {
            if ((this.CLSBidCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CLSBidCreateCompleted(this, new CLSBidCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/CLSBidStatusUpdate", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CLSBidStatusUpdate(string sBidID, string sStatus, int iPrivateLabelID) {
            object[] results = this.Invoke("CLSBidStatusUpdate", new object[] {
                        sBidID,
                        sStatus,
                        iPrivateLabelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CLSBidStatusUpdateAsync(string sBidID, string sStatus, int iPrivateLabelID) {
            this.CLSBidStatusUpdateAsync(sBidID, sStatus, iPrivateLabelID, null);
        }
        
        /// <remarks/>
        public void CLSBidStatusUpdateAsync(string sBidID, string sStatus, int iPrivateLabelID, object userState) {
            if ((this.CLSBidStatusUpdateOperationCompleted == null)) {
                this.CLSBidStatusUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCLSBidStatusUpdateOperationCompleted);
            }
            this.InvokeAsync("CLSBidStatusUpdate", new object[] {
                        sBidID,
                        sStatus,
                        iPrivateLabelID}, this.CLSBidStatusUpdateOperationCompleted, userState);
        }
        
        private void OnCLSBidStatusUpdateOperationCompleted(object arg) {
            if ((this.CLSBidStatusUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CLSBidStatusUpdateCompleted(this, new CLSBidStatusUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/CLSBidInfo", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CLSBidInfo(string sBidID, string sHistory, int iPrivateLabelID) {
            object[] results = this.Invoke("CLSBidInfo", new object[] {
                        sBidID,
                        sHistory,
                        iPrivateLabelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CLSBidInfoAsync(string sBidID, string sHistory, int iPrivateLabelID) {
            this.CLSBidInfoAsync(sBidID, sHistory, iPrivateLabelID, null);
        }
        
        /// <remarks/>
        public void CLSBidInfoAsync(string sBidID, string sHistory, int iPrivateLabelID, object userState) {
            if ((this.CLSBidInfoOperationCompleted == null)) {
                this.CLSBidInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCLSBidInfoOperationCompleted);
            }
            this.InvokeAsync("CLSBidInfo", new object[] {
                        sBidID,
                        sHistory,
                        iPrivateLabelID}, this.CLSBidInfoOperationCompleted, userState);
        }
        
        private void OnCLSBidInfoOperationCompleted(object arg) {
            if ((this.CLSBidInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CLSBidInfoCompleted(this, new CLSBidInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetTDNAMWhoIs", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTDNAMWhoIs(string sDomainName, string sShopperID) {
            object[] results = this.Invoke("GetTDNAMWhoIs", new object[] {
                        sDomainName,
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTDNAMWhoIsAsync(string sDomainName, string sShopperID) {
            this.GetTDNAMWhoIsAsync(sDomainName, sShopperID, null);
        }
        
        /// <remarks/>
        public void GetTDNAMWhoIsAsync(string sDomainName, string sShopperID, object userState) {
            if ((this.GetTDNAMWhoIsOperationCompleted == null)) {
                this.GetTDNAMWhoIsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTDNAMWhoIsOperationCompleted);
            }
            this.InvokeAsync("GetTDNAMWhoIs", new object[] {
                        sDomainName,
                        sShopperID}, this.GetTDNAMWhoIsOperationCompleted, userState);
        }
        
        private void OnGetTDNAMWhoIsOperationCompleted(object arg) {
            if ((this.GetTDNAMWhoIsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTDNAMWhoIsCompleted(this, new GetTDNAMWhoIsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/AuctionSearch", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuctionSearch(string xmlInput) {
            object[] results = this.Invoke("AuctionSearch", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuctionSearchAsync(string xmlInput) {
            this.AuctionSearchAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void AuctionSearchAsync(string xmlInput, object userState) {
            if ((this.AuctionSearchOperationCompleted == null)) {
                this.AuctionSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuctionSearchOperationCompleted);
            }
            this.InvokeAsync("AuctionSearch", new object[] {
                        xmlInput}, this.AuctionSearchOperationCompleted, userState);
        }
        
        private void OnAuctionSearchOperationCompleted(object arg) {
            if ((this.AuctionSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuctionSearchCompleted(this, new AuctionSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMemberInfoByShopper", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberInfoByShopper(string sShopperID) {
            object[] results = this.Invoke("GetMemberInfoByShopper", new object[] {
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberInfoByShopperAsync(string sShopperID) {
            this.GetMemberInfoByShopperAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void GetMemberInfoByShopperAsync(string sShopperID, object userState) {
            if ((this.GetMemberInfoByShopperOperationCompleted == null)) {
                this.GetMemberInfoByShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberInfoByShopperOperationCompleted);
            }
            this.InvokeAsync("GetMemberInfoByShopper", new object[] {
                        sShopperID}, this.GetMemberInfoByShopperOperationCompleted, userState);
        }
        
        private void OnGetMemberInfoByShopperOperationCompleted(object arg) {
            if ((this.GetMemberInfoByShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberInfoByShopperCompleted(this, new GetMemberInfoByShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMemberSettings", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberSettings(string xmlInput) {
            object[] results = this.Invoke("GetMemberSettings", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberSettingsAsync(string xmlInput) {
            this.GetMemberSettingsAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetMemberSettingsAsync(string xmlInput, object userState) {
            if ((this.GetMemberSettingsOperationCompleted == null)) {
                this.GetMemberSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberSettingsOperationCompleted);
            }
            this.InvokeAsync("GetMemberSettings", new object[] {
                        xmlInput}, this.GetMemberSettingsOperationCompleted, userState);
        }
        
        private void OnGetMemberSettingsOperationCompleted(object arg) {
            if ((this.GetMemberSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberSettingsCompleted(this, new GetMemberSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/SetMemberSettings", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMemberSettings(string xmlInput) {
            object[] results = this.Invoke("SetMemberSettings", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMemberSettingsAsync(string xmlInput) {
            this.SetMemberSettingsAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void SetMemberSettingsAsync(string xmlInput, object userState) {
            if ((this.SetMemberSettingsOperationCompleted == null)) {
                this.SetMemberSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMemberSettingsOperationCompleted);
            }
            this.InvokeAsync("SetMemberSettings", new object[] {
                        xmlInput}, this.SetMemberSettingsOperationCompleted, userState);
        }
        
        private void OnSetMemberSettingsOperationCompleted(object arg) {
            if ((this.SetMemberSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMemberSettingsCompleted(this, new SetMemberSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpAdminUtilsService/GetMemberSavedSearches", RequestNamespace="trpAdminUtilsService", ResponseNamespace="trpAdminUtilsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberSavedSearches(string xmlInput) {
            object[] results = this.Invoke("GetMemberSavedSearches", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberSavedSearchesAsync(string xmlInput) {
            this.GetMemberSavedSearchesAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetMemberSavedSearchesAsync(string xmlInput, object userState) {
            if ((this.GetMemberSavedSearchesOperationCompleted == null)) {
                this.GetMemberSavedSearchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberSavedSearchesOperationCompleted);
            }
            this.InvokeAsync("GetMemberSavedSearches", new object[] {
                        xmlInput}, this.GetMemberSavedSearchesOperationCompleted, userState);
        }
        
        private void OnGetMemberSavedSearchesOperationCompleted(object arg) {
            if ((this.GetMemberSavedSearchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberSavedSearchesCompleted(this, new GetMemberSavedSearchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRSSStatusCompletedEventHandler(object sender, getRSSStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRSSStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRSSStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceStatusCompletedEventHandler(object sender, getServiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResetCacheCompletedEventHandler(object sender, ResetCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnpaidExpiredAuctionsCompletedEventHandler(object sender, GetUnpaidExpiredAuctionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnpaidExpiredAuctionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnpaidExpiredAuctionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnpaidAuctionsCompletedEventHandler(object sender, GetUnpaidAuctionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnpaidAuctionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnpaidAuctionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnpaidAuctionsByShopperIDCompletedEventHandler(object sender, GetUnpaidAuctionsByShopperIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnpaidAuctionsByShopperIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnpaidAuctionsByShopperIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddExpiredAuctionsToCartCompletedEventHandler(object sender, AddExpiredAuctionsToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExpiredAuctionsToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExpiredAuctionsToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddExpiredAuctionsToCartWithITCCompletedEventHandler(object sender, AddExpiredAuctionsToCartWithITCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExpiredAuctionsToCartWithITCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExpiredAuctionsToCartWithITCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemsIveWonToCartCompletedEventHandler(object sender, AddItemsIveWonToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemsIveWonToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemsIveWonToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemsIveWonToCartWithITCCompletedEventHandler(object sender, AddItemsIveWonToCartWithITCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemsIveWonToCartWithITCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemsIveWonToCartWithITCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddValuePricedDomainToCartCompletedEventHandler(object sender, AddValuePricedDomainToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddValuePricedDomainToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddValuePricedDomainToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MemberIsSubscriberCompletedEventHandler(object sender, MemberIsSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemberIsSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MemberIsSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MemberIsActiveCompletedEventHandler(object sender, MemberIsActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemberIsActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MemberIsActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddMembershipToCartCompletedEventHandler(object sender, AddMembershipToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMembershipToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMembershipToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMembersAreaBySectionCompletedEventHandler(object sender, GetMembersAreaBySectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMembersAreaBySectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMembersAreaBySectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMembersAreaAlertsCompletedEventHandler(object sender, GetMembersAreaAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMembersAreaAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMembersAreaAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMembersAreaBySingleSectionCompletedEventHandler(object sender, GetMembersAreaBySingleSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMembersAreaBySingleSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMembersAreaBySingleSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMembersAreaBySectionXMLCompletedEventHandler(object sender, GetMembersAreaBySectionXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMembersAreaBySectionXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMembersAreaBySectionXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateMemberPreferencesCompletedEventHandler(object sender, UpdateMemberPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadDomainListingsCompletedEventHandler(object sender, LoadDomainListingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDomainListingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDomainListingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadDomainListingsToCartCompletedEventHandler(object sender, LoadDomainListingsToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDomainListingsToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDomainListingsToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadDomainListingsToCartVendorCompletedEventHandler(object sender, LoadDomainListingsToCartVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDomainListingsToCartVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDomainListingsToCartVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportAPPaymentCompletedEventHandler(object sender, ImportAPPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportAPPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportAPPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfigSettingCompletedEventHandler(object sender, GetConfigSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReferenceTableCompletedEventHandler(object sender, GetReferenceTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OptionListCompletedEventHandler(object sender, OptionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OptionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OptionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSupportedTldsCompletedEventHandler(object sender, GetSupportedTldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedTldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedTldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListingsByShopperCompletedEventHandler(object sender, GetListingsByShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListingsByShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListingsByShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpsellShopperListingCompletedEventHandler(object sender, UpsellShopperListingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsellShopperListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsellShopperListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BDDomainCheckCompletedEventHandler(object sender, BDDomainCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BDDomainCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BDDomainCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BDHoldDomainCompletedEventHandler(object sender, BDHoldDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BDHoldDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BDHoldDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BDReleaseDomainCompletedEventHandler(object sender, BDReleaseDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BDReleaseDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BDReleaseDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CLSItemCheckCompletedEventHandler(object sender, CLSItemCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLSItemCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CLSItemCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CLSBidCreateCompletedEventHandler(object sender, CLSBidCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLSBidCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CLSBidCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CLSBidStatusUpdateCompletedEventHandler(object sender, CLSBidStatusUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLSBidStatusUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CLSBidStatusUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CLSBidInfoCompletedEventHandler(object sender, CLSBidInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLSBidInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CLSBidInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTDNAMWhoIsCompletedEventHandler(object sender, GetTDNAMWhoIsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTDNAMWhoIsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTDNAMWhoIsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuctionSearchCompletedEventHandler(object sender, AuctionSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuctionSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuctionSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberInfoByShopperCompletedEventHandler(object sender, GetMemberInfoByShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberInfoByShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberInfoByShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberSettingsCompletedEventHandler(object sender, GetMemberSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetMemberSettingsCompletedEventHandler(object sender, SetMemberSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMemberSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMemberSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberSavedSearchesCompletedEventHandler(object sender, GetMemberSavedSearchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberSavedSearchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberSavedSearchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591