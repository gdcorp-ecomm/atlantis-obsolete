//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DCCValidateNS.Impl.DNSApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="dnsverifyapiSoap", Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    public partial class dnsverifyapi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private authDataType clientAuthField;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private custDataType custInfoField;
        
        private System.Threading.SendOrPostCallback echoCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateNSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVanityNSByShopperOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public dnsverifyapi() {
            this.Url = global::Atlantis.Framework.DCCValidateNS.Impl.Properties.Settings.Default.Atlantis_Framework_DCCValidateNS_Impl_DNSApi_dnsverifyapi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public authDataType clientAuth {
            get {
                return this.clientAuthField;
            }
            set {
                this.clientAuthField = value;
            }
        }
        
        public custDataType custInfo {
            get {
                return this.custInfoField;
            }
            set {
                this.custInfoField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event echoCustCompletedEventHandler echoCustCompleted;
        
        /// <remarks/>
        public event validateNSCompletedEventHandler validateNSCompleted;
        
        /// <remarks/>
        public event getVanityNSByShopperCompletedEventHandler getVanityNSByShopperCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("version")]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("CustInfo")]
        public custDataType echoCust() {
            object[] results = this.Invoke("echoCust", new object[0]);
            return ((custDataType)(results[0]));
        }
        
        /// <remarks/>
        public void echoCustAsync() {
            this.echoCustAsync(null);
        }
        
        /// <remarks/>
        public void echoCustAsync(object userState) {
            if ((this.echoCustOperationCompleted == null)) {
                this.echoCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnechoCustOperationCompleted);
            }
            this.InvokeAsync("echoCust", new object[0], this.echoCustOperationCompleted, userState);
        }
        
        private void OnechoCustOperationCompleted(object arg) {
            if ((this.echoCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.echoCustCompleted(this, new echoCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public validateNSResponseType validateNS([System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi", IsNullable=false)] string[] request) {
            object[] results = this.Invoke("validateNS", new object[] {
                        request});
            return ((validateNSResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void validateNSAsync(string[] request) {
            this.validateNSAsync(request, null);
        }
        
        /// <remarks/>
        public void validateNSAsync(string[] request, object userState) {
            if ((this.validateNSOperationCompleted == null)) {
                this.validateNSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateNSOperationCompleted);
            }
            this.InvokeAsync("validateNS", new object[] {
                        request}, this.validateNSOperationCompleted, userState);
        }
        
        private void OnvalidateNSOperationCompleted(object arg) {
            if ((this.validateNSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateNSCompleted(this, new validateNSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsverifyapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("vanitynames", Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi", IsNullable=false)]
        public vanityNameServerType[] getVanityNSByShopper() {
            object[] results = this.Invoke("getVanityNSByShopper", new object[0]);
            return ((vanityNameServerType[])(results[0]));
        }
        
        /// <remarks/>
        public void getVanityNSByShopperAsync() {
            this.getVanityNSByShopperAsync(null);
        }
        
        /// <remarks/>
        public void getVanityNSByShopperAsync(object userState) {
            if ((this.getVanityNSByShopperOperationCompleted == null)) {
                this.getVanityNSByShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVanityNSByShopperOperationCompleted);
            }
            this.InvokeAsync("getVanityNSByShopper", new object[0], this.getVanityNSByShopperOperationCompleted, userState);
        }
        
        private void OngetVanityNSByShopperOperationCompleted(object arg) {
            if ((this.getVanityNSByShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVanityNSByShopperCompleted(this, new getVanityNSByShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    [System.Xml.Serialization.XmlRootAttribute("clientAuth", Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi", IsNullable=false)]
    public partial class authDataType : System.Web.Services.Protocols.SoapHeader {
        
        private string clientidField;
        
        private string tokenField;
        
        private string clientipField;
        
        /// <remarks/>
        public string clientid {
            get {
                return this.clientidField;
            }
            set {
                this.clientidField = value;
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string clientip {
            get {
                return this.clientipField;
            }
            set {
                this.clientipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    public partial class vanityNameServerAliasMapType {
        
        private string vanitynameField;
        
        private string realnameField;
        
        private string realipv4Field;
        
        private string realipv6Field;
        
        /// <remarks/>
        public string vanityname {
            get {
                return this.vanitynameField;
            }
            set {
                this.vanitynameField = value;
            }
        }
        
        /// <remarks/>
        public string realname {
            get {
                return this.realnameField;
            }
            set {
                this.realnameField = value;
            }
        }
        
        /// <remarks/>
        public string realipv4 {
            get {
                return this.realipv4Field;
            }
            set {
                this.realipv4Field = value;
            }
        }
        
        /// <remarks/>
        public string realipv6 {
            get {
                return this.realipv6Field;
            }
            set {
                this.realipv6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    public partial class vanityNameServerType {
        
        private string domainField;
        
        private vanityNameServerAliasMapType[] aliasmapField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aliasmap")]
        public vanityNameServerAliasMapType[] aliasmap {
            get {
                return this.aliasmapField;
            }
            set {
                this.aliasmapField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    public partial class nameServerValType {
        
        private string nameserverField;
        
        private int typeField;
        
        private int statusField;
        
        /// <remarks/>
        public string nameserver {
            get {
                return this.nameserverField;
            }
            set {
                this.nameserverField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    public partial class validateNSResponseType {
        
        private int resultField;
        
        private int errorcodeField;
        
        private bool errorcodeFieldSpecified;
        
        private int internalField;
        
        private bool internalFieldSpecified;
        
        private nameServerValType[] nameserversField;
        
        /// <remarks/>
        public int result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                this.errorcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorcodeSpecified {
            get {
                return this.errorcodeFieldSpecified;
            }
            set {
                this.errorcodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int @internal {
            get {
                return this.internalField;
            }
            set {
                this.internalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool internalSpecified {
            get {
                return this.internalFieldSpecified;
            }
            set {
                this.internalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameservers")]
        public nameServerValType[] nameservers {
            get {
                return this.nameserversField;
            }
            set {
                this.nameserversField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi")]
    [System.Xml.Serialization.XmlRootAttribute("custInfo", Namespace="http://dnsapi.domaincontrol.com/dnsverifyapi", IsNullable=false)]
    public partial class custDataType : System.Web.Services.Protocols.SoapHeader {
        
        private string shopperidField;
        
        private int reselleridField;
        
        private string execshopperidField;
        
        private int execreselleridField;
        
        private bool execreselleridFieldSpecified;
        
        private string originField;
        
        private string enduseripField;
        
        private int offsiteField;
        
        private bool offsiteFieldSpecified;
        
        private int[] systemidField;
        
        private string manageruseridField;
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public int resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        public string execshopperid {
            get {
                return this.execshopperidField;
            }
            set {
                this.execshopperidField = value;
            }
        }
        
        /// <remarks/>
        public int execresellerid {
            get {
                return this.execreselleridField;
            }
            set {
                this.execreselleridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool execreselleridSpecified {
            get {
                return this.execreselleridFieldSpecified;
            }
            set {
                this.execreselleridFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public string enduserip {
            get {
                return this.enduseripField;
            }
            set {
                this.enduseripField = value;
            }
        }
        
        /// <remarks/>
        public int offsite {
            get {
                return this.offsiteField;
            }
            set {
                this.offsiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsiteSpecified {
            get {
                return this.offsiteFieldSpecified;
            }
            set {
                this.offsiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("systemid")]
        public int[] systemid {
            get {
                return this.systemidField;
            }
            set {
                this.systemidField = value;
            }
        }
        
        /// <remarks/>
        public string manageruserid {
            get {
                return this.manageruseridField;
            }
            set {
                this.manageruseridField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void echoCustCompletedEventHandler(object sender, echoCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class echoCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal echoCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public custDataType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((custDataType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void validateNSCompletedEventHandler(object sender, validateNSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public validateNSResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((validateNSResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVanityNSByShopperCompletedEventHandler(object sender, getVanityNSByShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVanityNSByShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVanityNSByShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public vanityNameServerType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((vanityNameServerType[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591