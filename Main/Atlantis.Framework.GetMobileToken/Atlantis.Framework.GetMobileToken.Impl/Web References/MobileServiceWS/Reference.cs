//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.GetMobileToken.Impl.MobileServiceWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="#ServiceAggregator")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShopperCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DomainSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback BasketGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHelpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLegalOperationCompleted;
        
        private System.Threading.SendOrPostCallback IrisOperationCompleted;
        
        private System.Threading.SendOrPostCallback AboutOperationCompleted;
        
        private System.Threading.SendOrPostCallback WhoIsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BasketAddOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Atlantis.Framework.GetMobileToken.Impl.Properties.Settings.Default.Atlantis_Framework_GetMobileToken_Impl_MobileServiceWS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTokenCompletedEventHandler GetTokenCompleted;
        
        /// <remarks/>
        public event GetCatalogCompletedEventHandler GetCatalogCompleted;
        
        /// <remarks/>
        public event GetConfigCompletedEventHandler GetConfigCompleted;
        
        /// <remarks/>
        public event ShopperCreateCompletedEventHandler ShopperCreateCompleted;
        
        /// <remarks/>
        public event DomainSearchCompletedEventHandler DomainSearchCompleted;
        
        /// <remarks/>
        public event DataCacheCompletedEventHandler DataCacheCompleted;
        
        /// <remarks/>
        public event BasketGetCompletedEventHandler BasketGetCompleted;
        
        /// <remarks/>
        public event FeedbackCompletedEventHandler FeedbackCompleted;
        
        /// <remarks/>
        public event GetHelpCompletedEventHandler GetHelpCompleted;
        
        /// <remarks/>
        public event GetLegalCompletedEventHandler GetLegalCompleted;
        
        /// <remarks/>
        public event IrisCompletedEventHandler IrisCompleted;
        
        /// <remarks/>
        public event AboutCompletedEventHandler AboutCompleted;
        
        /// <remarks/>
        public event WhoIsCompletedEventHandler WhoIsCompleted;
        
        /// <remarks/>
        public event BasketAddCompletedEventHandler BasketAddCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/GetToken", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse GetToken(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("GetToken", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.GetTokenAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void GetTokenAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.GetTokenOperationCompleted == null)) {
                this.GetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenOperationCompleted);
            }
            this.InvokeAsync("GetToken", new object[] {
                        SchemaVersion,
                        RequestXml}, this.GetTokenOperationCompleted, userState);
        }
        
        private void OnGetTokenOperationCompleted(object arg) {
            if ((this.GetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/GetCatalog", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse GetCatalog(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("GetCatalog", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatalogAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.GetCatalogAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void GetCatalogAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.GetCatalogOperationCompleted == null)) {
                this.GetCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogOperationCompleted);
            }
            this.InvokeAsync("GetCatalog", new object[] {
                        SchemaVersion,
                        RequestXml}, this.GetCatalogOperationCompleted, userState);
        }
        
        private void OnGetCatalogOperationCompleted(object arg) {
            if ((this.GetCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatalogCompleted(this, new GetCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/GetConfig", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse GetConfig(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("GetConfig", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.GetConfigAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void GetConfigAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.GetConfigOperationCompleted == null)) {
                this.GetConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigOperationCompleted);
            }
            this.InvokeAsync("GetConfig", new object[] {
                        SchemaVersion,
                        RequestXml}, this.GetConfigOperationCompleted, userState);
        }
        
        private void OnGetConfigOperationCompleted(object arg) {
            if ((this.GetConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigCompleted(this, new GetConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/ShopperCreate", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse ShopperCreate(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("ShopperCreate", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ShopperCreateAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.ShopperCreateAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void ShopperCreateAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.ShopperCreateOperationCompleted == null)) {
                this.ShopperCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShopperCreateOperationCompleted);
            }
            this.InvokeAsync("ShopperCreate", new object[] {
                        SchemaVersion,
                        RequestXml}, this.ShopperCreateOperationCompleted, userState);
        }
        
        private void OnShopperCreateOperationCompleted(object arg) {
            if ((this.ShopperCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShopperCreateCompleted(this, new ShopperCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/DomainSearch", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse DomainSearch(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("DomainSearch", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DomainSearchAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.DomainSearchAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void DomainSearchAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.DomainSearchOperationCompleted == null)) {
                this.DomainSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDomainSearchOperationCompleted);
            }
            this.InvokeAsync("DomainSearch", new object[] {
                        SchemaVersion,
                        RequestXml}, this.DomainSearchOperationCompleted, userState);
        }
        
        private void OnDomainSearchOperationCompleted(object arg) {
            if ((this.DomainSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DomainSearchCompleted(this, new DomainSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/DataCache", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse DataCache(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("DataCache", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DataCacheAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.DataCacheAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void DataCacheAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.DataCacheOperationCompleted == null)) {
                this.DataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataCacheOperationCompleted);
            }
            this.InvokeAsync("DataCache", new object[] {
                        SchemaVersion,
                        RequestXml}, this.DataCacheOperationCompleted, userState);
        }
        
        private void OnDataCacheOperationCompleted(object arg) {
            if ((this.DataCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataCacheCompleted(this, new DataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/BasketGet", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse BasketGet(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("BasketGet", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void BasketGetAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.BasketGetAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void BasketGetAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.BasketGetOperationCompleted == null)) {
                this.BasketGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBasketGetOperationCompleted);
            }
            this.InvokeAsync("BasketGet", new object[] {
                        SchemaVersion,
                        RequestXml}, this.BasketGetOperationCompleted, userState);
        }
        
        private void OnBasketGetOperationCompleted(object arg) {
            if ((this.BasketGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BasketGetCompleted(this, new BasketGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/Feedback", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse Feedback(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("Feedback", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FeedbackAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.FeedbackAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void FeedbackAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.FeedbackOperationCompleted == null)) {
                this.FeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeedbackOperationCompleted);
            }
            this.InvokeAsync("Feedback", new object[] {
                        SchemaVersion,
                        RequestXml}, this.FeedbackOperationCompleted, userState);
        }
        
        private void OnFeedbackOperationCompleted(object arg) {
            if ((this.FeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeedbackCompleted(this, new FeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/GetHelp", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse GetHelp(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("GetHelp", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetHelpAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.GetHelpAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void GetHelpAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.GetHelpOperationCompleted == null)) {
                this.GetHelpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHelpOperationCompleted);
            }
            this.InvokeAsync("GetHelp", new object[] {
                        SchemaVersion,
                        RequestXml}, this.GetHelpOperationCompleted, userState);
        }
        
        private void OnGetHelpOperationCompleted(object arg) {
            if ((this.GetHelpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHelpCompleted(this, new GetHelpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/GetLegal", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse GetLegal(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("GetLegal", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLegalAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.GetLegalAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void GetLegalAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.GetLegalOperationCompleted == null)) {
                this.GetLegalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLegalOperationCompleted);
            }
            this.InvokeAsync("GetLegal", new object[] {
                        SchemaVersion,
                        RequestXml}, this.GetLegalOperationCompleted, userState);
        }
        
        private void OnGetLegalOperationCompleted(object arg) {
            if ((this.GetLegalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLegalCompleted(this, new GetLegalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/Iris", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse Iris(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("Iris", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IrisAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.IrisAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void IrisAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.IrisOperationCompleted == null)) {
                this.IrisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIrisOperationCompleted);
            }
            this.InvokeAsync("Iris", new object[] {
                        SchemaVersion,
                        RequestXml}, this.IrisOperationCompleted, userState);
        }
        
        private void OnIrisOperationCompleted(object arg) {
            if ((this.IrisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IrisCompleted(this, new IrisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/About", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse About(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("About", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AboutAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.AboutAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void AboutAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.AboutOperationCompleted == null)) {
                this.AboutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAboutOperationCompleted);
            }
            this.InvokeAsync("About", new object[] {
                        SchemaVersion,
                        RequestXml}, this.AboutOperationCompleted, userState);
        }
        
        private void OnAboutOperationCompleted(object arg) {
            if ((this.AboutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AboutCompleted(this, new AboutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/WhoIs", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse WhoIs(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("WhoIs", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void WhoIsAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.WhoIsAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void WhoIsAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.WhoIsOperationCompleted == null)) {
                this.WhoIsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWhoIsOperationCompleted);
            }
            this.InvokeAsync("WhoIs", new object[] {
                        SchemaVersion,
                        RequestXml}, this.WhoIsOperationCompleted, userState);
        }
        
        private void OnWhoIsOperationCompleted(object arg) {
            if ((this.WhoIsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WhoIsCompleted(this, new WhoIsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ServiceAggregator/BasketAdd", RequestNamespace="#ServiceAggregator", ResponseNamespace="#ServiceAggregator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result")]
        public WebServiceResponse BasketAdd(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            object[] results = this.Invoke("BasketAdd", new object[] {
                        SchemaVersion,
                        RequestXml});
            return ((WebServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void BasketAddAsync(string SchemaVersion, System.Xml.XmlNode RequestXml) {
            this.BasketAddAsync(SchemaVersion, RequestXml, null);
        }
        
        /// <remarks/>
        public void BasketAddAsync(string SchemaVersion, System.Xml.XmlNode RequestXml, object userState) {
            if ((this.BasketAddOperationCompleted == null)) {
                this.BasketAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBasketAddOperationCompleted);
            }
            this.InvokeAsync("BasketAdd", new object[] {
                        SchemaVersion,
                        RequestXml}, this.BasketAddOperationCompleted, userState);
        }
        
        private void OnBasketAddOperationCompleted(object arg) {
            if ((this.BasketAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BasketAddCompleted(this, new BasketAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="#ServiceAggregator")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="#ServiceAggregator", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string shopperTokenField;
        
        private string deviceIDField;
        
        private string modelField;
        
        private string systemNameField;
        
        private string systemVerField;
        
        private string mobileAppIDField;
        
        private string carrierTypeField;
        
        private string appVersionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ShopperToken {
            get {
                return this.shopperTokenField;
            }
            set {
                this.shopperTokenField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string SystemName {
            get {
                return this.systemNameField;
            }
            set {
                this.systemNameField = value;
            }
        }
        
        /// <remarks/>
        public string SystemVer {
            get {
                return this.systemVerField;
            }
            set {
                this.systemVerField = value;
            }
        }
        
        /// <remarks/>
        public string MobileAppID {
            get {
                return this.mobileAppIDField;
            }
            set {
                this.mobileAppIDField = value;
            }
        }
        
        /// <remarks/>
        public string CarrierType {
            get {
                return this.carrierTypeField;
            }
            set {
                this.carrierTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AppVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="#ServiceAggregator")]
    public partial class WebServiceResponse {
        
        private int resultCodeField;
        
        private string responseXmlField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseXml {
            get {
                return this.responseXmlField;
            }
            set {
                this.responseXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTokenCompletedEventHandler(object sender, GetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCatalogCompletedEventHandler(object sender, GetCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfigCompletedEventHandler(object sender, GetConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShopperCreateCompletedEventHandler(object sender, ShopperCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShopperCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShopperCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DomainSearchCompletedEventHandler(object sender, DomainSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DomainSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DomainSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataCacheCompletedEventHandler(object sender, DataCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BasketGetCompletedEventHandler(object sender, BasketGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BasketGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BasketGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FeedbackCompletedEventHandler(object sender, FeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHelpCompletedEventHandler(object sender, GetHelpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHelpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHelpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLegalCompletedEventHandler(object sender, GetLegalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLegalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLegalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IrisCompletedEventHandler(object sender, IrisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IrisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IrisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AboutCompletedEventHandler(object sender, AboutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AboutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AboutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WhoIsCompletedEventHandler(object sender, WhoIsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WhoIsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WhoIsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BasketAddCompletedEventHandler(object sender, BasketAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BasketAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BasketAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebServiceResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591