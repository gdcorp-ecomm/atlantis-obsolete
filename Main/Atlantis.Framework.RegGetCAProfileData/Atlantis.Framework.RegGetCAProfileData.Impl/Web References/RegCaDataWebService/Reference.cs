//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.RegGetCAProfileData.Impl.RegCaDataWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RegCaDataWebSvcSoap", Namespace="http://check.secureserver.net/RegCaDataWebSvc")]
    public partial class RegCaDataWebSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VerifyRegistrantProfileMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileDataFromShopperIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistrantCompareOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsActiveProcessOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRantInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback InternalGetAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback InternalCheckAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrivateWhoisOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDomainAndContactsCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateContactsCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCAProfileIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RegCaDataWebSvc() {
            this.Url = global::Atlantis.Framework.RegGetCAProfileData.Impl.Properties.Settings.Default.Atlantis_Framework_RegGetCAProfileData_Impl_RegCaDataWebService_RegCaDataWebSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerifyRegistrantProfileMergeCompletedEventHandler VerifyRegistrantProfileMergeCompleted;
        
        /// <remarks/>
        public event GetProfileDataFromShopperIdCompletedEventHandler GetProfileDataFromShopperIdCompleted;
        
        /// <remarks/>
        public event RegistrantCompareCompletedEventHandler RegistrantCompareCompleted;
        
        /// <remarks/>
        public event IsActiveProcessOpenCompletedEventHandler IsActiveProcessOpenCompleted;
        
        /// <remarks/>
        public event GetRantInfoCompletedEventHandler GetRantInfoCompleted;
        
        /// <remarks/>
        public event GetAgreementCompletedEventHandler GetAgreementCompleted;
        
        /// <remarks/>
        public event InternalGetAgreementCompletedEventHandler InternalGetAgreementCompleted;
        
        /// <remarks/>
        public event InternalCheckAgreementCompletedEventHandler InternalCheckAgreementCompleted;
        
        /// <remarks/>
        public event GetPrivateWhoisCompletedEventHandler GetPrivateWhoisCompleted;
        
        /// <remarks/>
        public event ValidateDomainAndContactsCACompletedEventHandler ValidateDomainAndContactsCACompleted;
        
        /// <remarks/>
        public event ValidateContactsCACompletedEventHandler ValidateContactsCACompleted;
        
        /// <remarks/>
        public event GetCAProfileIdCompletedEventHandler GetCAProfileIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/VerifyRegistrantProfileMerge", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerifyRegistrantProfileMerge(string xmlInput) {
            object[] results = this.Invoke("VerifyRegistrantProfileMerge", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantProfileMergeAsync(string xmlInput) {
            this.VerifyRegistrantProfileMergeAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantProfileMergeAsync(string xmlInput, object userState) {
            if ((this.VerifyRegistrantProfileMergeOperationCompleted == null)) {
                this.VerifyRegistrantProfileMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantProfileMergeOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantProfileMerge", new object[] {
                        xmlInput}, this.VerifyRegistrantProfileMergeOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantProfileMergeOperationCompleted(object arg) {
            if ((this.VerifyRegistrantProfileMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantProfileMergeCompleted(this, new VerifyRegistrantProfileMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/GetProfileDataFromShopperId", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProfileDataFromShopperId(string xmlInput) {
            object[] results = this.Invoke("GetProfileDataFromShopperId", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileDataFromShopperIdAsync(string xmlInput) {
            this.GetProfileDataFromShopperIdAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetProfileDataFromShopperIdAsync(string xmlInput, object userState) {
            if ((this.GetProfileDataFromShopperIdOperationCompleted == null)) {
                this.GetProfileDataFromShopperIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileDataFromShopperIdOperationCompleted);
            }
            this.InvokeAsync("GetProfileDataFromShopperId", new object[] {
                        xmlInput}, this.GetProfileDataFromShopperIdOperationCompleted, userState);
        }
        
        private void OnGetProfileDataFromShopperIdOperationCompleted(object arg) {
            if ((this.GetProfileDataFromShopperIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileDataFromShopperIdCompleted(this, new GetProfileDataFromShopperIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/RegistrantCompare", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegistrantCompare(string xmlInput) {
            object[] results = this.Invoke("RegistrantCompare", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegistrantCompareAsync(string xmlInput) {
            this.RegistrantCompareAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void RegistrantCompareAsync(string xmlInput, object userState) {
            if ((this.RegistrantCompareOperationCompleted == null)) {
                this.RegistrantCompareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistrantCompareOperationCompleted);
            }
            this.InvokeAsync("RegistrantCompare", new object[] {
                        xmlInput}, this.RegistrantCompareOperationCompleted, userState);
        }
        
        private void OnRegistrantCompareOperationCompleted(object arg) {
            if ((this.RegistrantCompareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistrantCompareCompleted(this, new RegistrantCompareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/IsActiveProcessOpen", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsActiveProcessOpen(string xmlInput) {
            object[] results = this.Invoke("IsActiveProcessOpen", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsActiveProcessOpenAsync(string xmlInput) {
            this.IsActiveProcessOpenAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void IsActiveProcessOpenAsync(string xmlInput, object userState) {
            if ((this.IsActiveProcessOpenOperationCompleted == null)) {
                this.IsActiveProcessOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsActiveProcessOpenOperationCompleted);
            }
            this.InvokeAsync("IsActiveProcessOpen", new object[] {
                        xmlInput}, this.IsActiveProcessOpenOperationCompleted, userState);
        }
        
        private void OnIsActiveProcessOpenOperationCompleted(object arg) {
            if ((this.IsActiveProcessOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsActiveProcessOpenCompleted(this, new IsActiveProcessOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/GetRantInfo", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRantInfo(string xmlInput) {
            object[] results = this.Invoke("GetRantInfo", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRantInfoAsync(string xmlInput) {
            this.GetRantInfoAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetRantInfoAsync(string xmlInput, object userState) {
            if ((this.GetRantInfoOperationCompleted == null)) {
                this.GetRantInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRantInfoOperationCompleted);
            }
            this.InvokeAsync("GetRantInfo", new object[] {
                        xmlInput}, this.GetRantInfoOperationCompleted, userState);
        }
        
        private void OnGetRantInfoOperationCompleted(object arg) {
            if ((this.GetRantInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRantInfoCompleted(this, new GetRantInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/GetAgreement", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAgreement() {
            object[] results = this.Invoke("GetAgreement", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgreementAsync() {
            this.GetAgreementAsync(null);
        }
        
        /// <remarks/>
        public void GetAgreementAsync(object userState) {
            if ((this.GetAgreementOperationCompleted == null)) {
                this.GetAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgreementOperationCompleted);
            }
            this.InvokeAsync("GetAgreement", new object[0], this.GetAgreementOperationCompleted, userState);
        }
        
        private void OnGetAgreementOperationCompleted(object arg) {
            if ((this.GetAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgreementCompleted(this, new GetAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/InternalGetAgreement", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InternalGetAgreement(string xmlInput) {
            object[] results = this.Invoke("InternalGetAgreement", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InternalGetAgreementAsync(string xmlInput) {
            this.InternalGetAgreementAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void InternalGetAgreementAsync(string xmlInput, object userState) {
            if ((this.InternalGetAgreementOperationCompleted == null)) {
                this.InternalGetAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInternalGetAgreementOperationCompleted);
            }
            this.InvokeAsync("InternalGetAgreement", new object[] {
                        xmlInput}, this.InternalGetAgreementOperationCompleted, userState);
        }
        
        private void OnInternalGetAgreementOperationCompleted(object arg) {
            if ((this.InternalGetAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InternalGetAgreementCompleted(this, new InternalGetAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/InternalCheckAgreement", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InternalCheckAgreement(string xmlInput) {
            object[] results = this.Invoke("InternalCheckAgreement", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InternalCheckAgreementAsync(string xmlInput) {
            this.InternalCheckAgreementAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void InternalCheckAgreementAsync(string xmlInput, object userState) {
            if ((this.InternalCheckAgreementOperationCompleted == null)) {
                this.InternalCheckAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInternalCheckAgreementOperationCompleted);
            }
            this.InvokeAsync("InternalCheckAgreement", new object[] {
                        xmlInput}, this.InternalCheckAgreementOperationCompleted, userState);
        }
        
        private void OnInternalCheckAgreementOperationCompleted(object arg) {
            if ((this.InternalCheckAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InternalCheckAgreementCompleted(this, new InternalCheckAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/GetPrivateWhois", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrivateWhois(string xmlInput) {
            object[] results = this.Invoke("GetPrivateWhois", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrivateWhoisAsync(string xmlInput) {
            this.GetPrivateWhoisAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetPrivateWhoisAsync(string xmlInput, object userState) {
            if ((this.GetPrivateWhoisOperationCompleted == null)) {
                this.GetPrivateWhoisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrivateWhoisOperationCompleted);
            }
            this.InvokeAsync("GetPrivateWhois", new object[] {
                        xmlInput}, this.GetPrivateWhoisOperationCompleted, userState);
        }
        
        private void OnGetPrivateWhoisOperationCompleted(object arg) {
            if ((this.GetPrivateWhoisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrivateWhoisCompleted(this, new GetPrivateWhoisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/ValidateDomainAndContactsCA", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateDomainAndContactsCA(string xmlInput) {
            object[] results = this.Invoke("ValidateDomainAndContactsCA", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateDomainAndContactsCAAsync(string xmlInput) {
            this.ValidateDomainAndContactsCAAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void ValidateDomainAndContactsCAAsync(string xmlInput, object userState) {
            if ((this.ValidateDomainAndContactsCAOperationCompleted == null)) {
                this.ValidateDomainAndContactsCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDomainAndContactsCAOperationCompleted);
            }
            this.InvokeAsync("ValidateDomainAndContactsCA", new object[] {
                        xmlInput}, this.ValidateDomainAndContactsCAOperationCompleted, userState);
        }
        
        private void OnValidateDomainAndContactsCAOperationCompleted(object arg) {
            if ((this.ValidateDomainAndContactsCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDomainAndContactsCACompleted(this, new ValidateDomainAndContactsCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/ValidateContactsCA", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateContactsCA(string xmlInput) {
            object[] results = this.Invoke("ValidateContactsCA", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateContactsCAAsync(string xmlInput) {
            this.ValidateContactsCAAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void ValidateContactsCAAsync(string xmlInput, object userState) {
            if ((this.ValidateContactsCAOperationCompleted == null)) {
                this.ValidateContactsCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateContactsCAOperationCompleted);
            }
            this.InvokeAsync("ValidateContactsCA", new object[] {
                        xmlInput}, this.ValidateContactsCAOperationCompleted, userState);
        }
        
        private void OnValidateContactsCAOperationCompleted(object arg) {
            if ((this.ValidateContactsCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateContactsCACompleted(this, new ValidateContactsCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://check.secureserver.net/RegCaDataWebSvc/GetCAProfileId", RequestNamespace="http://check.secureserver.net/RegCaDataWebSvc", ResponseNamespace="http://check.secureserver.net/RegCaDataWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCAProfileId(string xmlInput) {
            object[] results = this.Invoke("GetCAProfileId", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCAProfileIdAsync(string xmlInput) {
            this.GetCAProfileIdAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetCAProfileIdAsync(string xmlInput, object userState) {
            if ((this.GetCAProfileIdOperationCompleted == null)) {
                this.GetCAProfileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCAProfileIdOperationCompleted);
            }
            this.InvokeAsync("GetCAProfileId", new object[] {
                        xmlInput}, this.GetCAProfileIdOperationCompleted, userState);
        }
        
        private void OnGetCAProfileIdOperationCompleted(object arg) {
            if ((this.GetCAProfileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCAProfileIdCompleted(this, new GetCAProfileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantProfileMergeCompletedEventHandler(object sender, VerifyRegistrantProfileMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantProfileMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantProfileMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProfileDataFromShopperIdCompletedEventHandler(object sender, GetProfileDataFromShopperIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileDataFromShopperIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileDataFromShopperIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegistrantCompareCompletedEventHandler(object sender, RegistrantCompareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistrantCompareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistrantCompareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsActiveProcessOpenCompletedEventHandler(object sender, IsActiveProcessOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsActiveProcessOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsActiveProcessOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRantInfoCompletedEventHandler(object sender, GetRantInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRantInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRantInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAgreementCompletedEventHandler(object sender, GetAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InternalGetAgreementCompletedEventHandler(object sender, InternalGetAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InternalGetAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InternalGetAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InternalCheckAgreementCompletedEventHandler(object sender, InternalCheckAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InternalCheckAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InternalCheckAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrivateWhoisCompletedEventHandler(object sender, GetPrivateWhoisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrivateWhoisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrivateWhoisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateDomainAndContactsCACompletedEventHandler(object sender, ValidateDomainAndContactsCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateDomainAndContactsCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateDomainAndContactsCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateContactsCACompletedEventHandler(object sender, ValidateContactsCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateContactsCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateContactsCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCAProfileIdCompletedEventHandler(object sender, GetCAProfileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCAProfileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCAProfileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591