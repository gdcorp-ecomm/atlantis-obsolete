//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DCCSetLocking.Impl.DsWebVerify {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RegDCCVerifyWebSvcServiceSoap", Namespace="urn:RegDCCVerifyWebSvcService")]
    public partial class RegDCCVerifyWebSvcService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyNameServerUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyContactUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyLocalizedContactUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyHostUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainSetLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainEmailForwardingUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainNexusUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainCEDUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainSetAutoRenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainRedemptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainCertificationAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainPrivacyAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainPrivacyRenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainPrivacyUpdatePrivateContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainPrivacyUpdateEmailForwardingOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainPrivacySendAuthorizationLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAccountPrivacyUpdateContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAccountPrivacyUpdateEmailPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainPrivacyCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProximaAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProximaRenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainExpirationProtectionAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainExpirationProtectionRenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainForwardingUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainForwardingDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifySubDomainUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifySubDomainDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyCashParkingUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAuthCodeSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRegistrantChangeInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRegistrantChangeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRegistrantChangeSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRegistrantChangeValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRegistrantChangeAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRegistrantChangeInstantOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToAuthInfoChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToRestartOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToAckOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToNackOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToRetryOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferToCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferFromAckOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransferFromNackOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainFolderAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainFolderUnassignOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainFolderUnassignAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProtectionUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainDownloadListOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyMonitorBackorderSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyMonitorBackorderCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyMonitorUpgradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyMonitorEmailUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyMonitorResendEmailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyBackorderContactUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyBackorderAgreementsUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyBackorderPrivacyUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyPremiumDomainSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyPremiumDomainSetAutoRelistOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyPremiumDomainUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyPremiumDomainRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTDNAMAuctionSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTDNAMAuctionCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileAssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileUnassignOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileUnassignAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileAttributeChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyProfileSetAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifySendCIRAAccountInfoEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainProfileMergeCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainConsolidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAppraisalUpgradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifySmartDomainsAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifySmartDomainsRenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainChangeOfRegistrantCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainMobilizerUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyDomainMobilizerRemoveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RegDCCVerifyWebSvcService() {
            this.Url = global::Atlantis.Framework.DCCSetLocking.Impl.Properties.Settings.Default.Atlantis_Framework_DCCSetLocking_Impl_DsWebVerify_RegDCCVerifyWebSvcService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event getServiceStatusCompletedEventHandler getServiceStatusCompleted;
        
        /// <remarks/>
        public event VerifyNameServerUpdateCompletedEventHandler VerifyNameServerUpdateCompleted;
        
        /// <remarks/>
        public event VerifyContactUpdateCompletedEventHandler VerifyContactUpdateCompleted;
        
        /// <remarks/>
        public event VerifyLocalizedContactUpdateCompletedEventHandler VerifyLocalizedContactUpdateCompleted;
        
        /// <remarks/>
        public event VerifyHostUpdateCompletedEventHandler VerifyHostUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainSetLockCompletedEventHandler VerifyDomainSetLockCompleted;
        
        /// <remarks/>
        public event VerifyDomainEmailForwardingUpdateCompletedEventHandler VerifyDomainEmailForwardingUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainNexusUpdateCompletedEventHandler VerifyDomainNexusUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainCEDUpdateCompletedEventHandler VerifyDomainCEDUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainCancellationCompletedEventHandler VerifyDomainCancellationCompleted;
        
        /// <remarks/>
        public event VerifyDomainSetAutoRenewCompletedEventHandler VerifyDomainSetAutoRenewCompleted;
        
        /// <remarks/>
        public event VerifyDomainRenewalCompletedEventHandler VerifyDomainRenewalCompleted;
        
        /// <remarks/>
        public event VerifyDomainRedemptionCompletedEventHandler VerifyDomainRedemptionCompleted;
        
        /// <remarks/>
        public event VerifyDomainCertificationAddCompletedEventHandler VerifyDomainCertificationAddCompleted;
        
        /// <remarks/>
        public event VerifyDomainPrivacyAddCompletedEventHandler VerifyDomainPrivacyAddCompleted;
        
        /// <remarks/>
        public event VerifyDomainPrivacyRenewCompletedEventHandler VerifyDomainPrivacyRenewCompleted;
        
        /// <remarks/>
        public event VerifyDomainPrivacyUpdatePrivateContactsCompletedEventHandler VerifyDomainPrivacyUpdatePrivateContactsCompleted;
        
        /// <remarks/>
        public event VerifyDomainPrivacyUpdateEmailForwardingCompletedEventHandler VerifyDomainPrivacyUpdateEmailForwardingCompleted;
        
        /// <remarks/>
        public event VerifyDomainPrivacySendAuthorizationLetterCompletedEventHandler VerifyDomainPrivacySendAuthorizationLetterCompleted;
        
        /// <remarks/>
        public event VerifyAccountPrivacyUpdateContactCompletedEventHandler VerifyAccountPrivacyUpdateContactCompleted;
        
        /// <remarks/>
        public event VerifyAccountPrivacyUpdateEmailPreferencesCompletedEventHandler VerifyAccountPrivacyUpdateEmailPreferencesCompleted;
        
        /// <remarks/>
        public event VerifyDomainPrivacyCancelCompletedEventHandler VerifyDomainPrivacyCancelCompleted;
        
        /// <remarks/>
        public event VerifyDomainProximaAddCompletedEventHandler VerifyDomainProximaAddCompleted;
        
        /// <remarks/>
        public event VerifyDomainProximaRenewCompletedEventHandler VerifyDomainProximaRenewCompleted;
        
        /// <remarks/>
        public event VerifyDomainExpirationProtectionAddCompletedEventHandler VerifyDomainExpirationProtectionAddCompleted;
        
        /// <remarks/>
        public event VerifyDomainExpirationProtectionRenewCompletedEventHandler VerifyDomainExpirationProtectionRenewCompleted;
        
        /// <remarks/>
        public event VerifyDomainForwardingUpdateCompletedEventHandler VerifyDomainForwardingUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainForwardingDeleteCompletedEventHandler VerifyDomainForwardingDeleteCompleted;
        
        /// <remarks/>
        public event VerifySubDomainUpdateCompletedEventHandler VerifySubDomainUpdateCompleted;
        
        /// <remarks/>
        public event VerifySubDomainDeleteCompletedEventHandler VerifySubDomainDeleteCompleted;
        
        /// <remarks/>
        public event VerifyCashParkingUpdateCompletedEventHandler VerifyCashParkingUpdateCompleted;
        
        /// <remarks/>
        public event VerifyAuthCodeSendEmailCompletedEventHandler VerifyAuthCodeSendEmailCompleted;
        
        /// <remarks/>
        public event VerifyRegistrantChangeInsertCompletedEventHandler VerifyRegistrantChangeInsertCompleted;
        
        /// <remarks/>
        public event VerifyRegistrantChangeDeleteCompletedEventHandler VerifyRegistrantChangeDeleteCompleted;
        
        /// <remarks/>
        public event VerifyRegistrantChangeSendEmailCompletedEventHandler VerifyRegistrantChangeSendEmailCompleted;
        
        /// <remarks/>
        public event VerifyRegistrantChangeValidateCompletedEventHandler VerifyRegistrantChangeValidateCompleted;
        
        /// <remarks/>
        public event VerifyRegistrantChangeAcceptCompletedEventHandler VerifyRegistrantChangeAcceptCompleted;
        
        /// <remarks/>
        public event VerifyRegistrantChangeInstantCompletedEventHandler VerifyRegistrantChangeInstantCompleted;
        
        /// <remarks/>
        public event VerifyTransferToSendEmailCompletedEventHandler VerifyTransferToSendEmailCompleted;
        
        /// <remarks/>
        public event VerifyTransferToAuthInfoChangeCompletedEventHandler VerifyTransferToAuthInfoChangeCompleted;
        
        /// <remarks/>
        public event VerifyTransferToRestartCompletedEventHandler VerifyTransferToRestartCompleted;
        
        /// <remarks/>
        public event VerifyTransferToAckCompletedEventHandler VerifyTransferToAckCompleted;
        
        /// <remarks/>
        public event VerifyTransferToNackCompletedEventHandler VerifyTransferToNackCompleted;
        
        /// <remarks/>
        public event VerifyTransferToRetryCompletedEventHandler VerifyTransferToRetryCompleted;
        
        /// <remarks/>
        public event VerifyTransferToCancelCompletedEventHandler VerifyTransferToCancelCompleted;
        
        /// <remarks/>
        public event VerifyTransferFromAckCompletedEventHandler VerifyTransferFromAckCompleted;
        
        /// <remarks/>
        public event VerifyTransferFromNackCompletedEventHandler VerifyTransferFromNackCompleted;
        
        /// <remarks/>
        public event VerifyDomainFolderAssignCompletedEventHandler VerifyDomainFolderAssignCompleted;
        
        /// <remarks/>
        public event VerifyDomainFolderUnassignCompletedEventHandler VerifyDomainFolderUnassignCompleted;
        
        /// <remarks/>
        public event VerifyDomainFolderUnassignAllCompletedEventHandler VerifyDomainFolderUnassignAllCompleted;
        
        /// <remarks/>
        public event VerifyDomainProtectionUpdateCompletedEventHandler VerifyDomainProtectionUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainDownloadListCompletedEventHandler VerifyDomainDownloadListCompleted;
        
        /// <remarks/>
        public event VerifyMonitorBackorderSetupCompletedEventHandler VerifyMonitorBackorderSetupCompleted;
        
        /// <remarks/>
        public event VerifyMonitorBackorderCancelCompletedEventHandler VerifyMonitorBackorderCancelCompleted;
        
        /// <remarks/>
        public event VerifyMonitorUpgradeCompletedEventHandler VerifyMonitorUpgradeCompleted;
        
        /// <remarks/>
        public event VerifyMonitorEmailUpdateCompletedEventHandler VerifyMonitorEmailUpdateCompleted;
        
        /// <remarks/>
        public event VerifyMonitorResendEmailsCompletedEventHandler VerifyMonitorResendEmailsCompleted;
        
        /// <remarks/>
        public event VerifyBackorderContactUpdateCompletedEventHandler VerifyBackorderContactUpdateCompleted;
        
        /// <remarks/>
        public event VerifyBackorderAgreementsUpdateCompletedEventHandler VerifyBackorderAgreementsUpdateCompleted;
        
        /// <remarks/>
        public event VerifyBackorderPrivacyUpdateCompletedEventHandler VerifyBackorderPrivacyUpdateCompleted;
        
        /// <remarks/>
        public event VerifyPremiumDomainSetupCompletedEventHandler VerifyPremiumDomainSetupCompleted;
        
        /// <remarks/>
        public event VerifyPremiumDomainSetAutoRelistCompletedEventHandler VerifyPremiumDomainSetAutoRelistCompleted;
        
        /// <remarks/>
        public event VerifyPremiumDomainUpdateCompletedEventHandler VerifyPremiumDomainUpdateCompleted;
        
        /// <remarks/>
        public event VerifyPremiumDomainRemoveCompletedEventHandler VerifyPremiumDomainRemoveCompleted;
        
        /// <remarks/>
        public event VerifyTDNAMAuctionSetupCompletedEventHandler VerifyTDNAMAuctionSetupCompleted;
        
        /// <remarks/>
        public event VerifyTDNAMAuctionCancelCompletedEventHandler VerifyTDNAMAuctionCancelCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileCreateCompletedEventHandler VerifyDomainProfileCreateCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileAssignCompletedEventHandler VerifyDomainProfileAssignCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileUnassignCompletedEventHandler VerifyDomainProfileUnassignCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileUnassignAllCompletedEventHandler VerifyDomainProfileUnassignAllCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileAttributeChangeCompletedEventHandler VerifyDomainProfileAttributeChangeCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileDeleteCompletedEventHandler VerifyDomainProfileDeleteCompleted;
        
        /// <remarks/>
        public event VerifyProfileSetAttributeCompletedEventHandler VerifyProfileSetAttributeCompleted;
        
        /// <remarks/>
        public event VerifySendCIRAAccountInfoEmailCompletedEventHandler VerifySendCIRAAccountInfoEmailCompleted;
        
        /// <remarks/>
        public event VerifyDomainProfileMergeCACompletedEventHandler VerifyDomainProfileMergeCACompleted;
        
        /// <remarks/>
        public event VerifyDomainConsolidateCompletedEventHandler VerifyDomainConsolidateCompleted;
        
        /// <remarks/>
        public event VerifyAppraisalUpgradeCompletedEventHandler VerifyAppraisalUpgradeCompleted;
        
        /// <remarks/>
        public event VerifySmartDomainsAddCompletedEventHandler VerifySmartDomainsAddCompleted;
        
        /// <remarks/>
        public event VerifySmartDomainsRenewCompletedEventHandler VerifySmartDomainsRenewCompleted;
        
        /// <remarks/>
        public event VerifyDomainChangeOfRegistrantCACompletedEventHandler VerifyDomainChangeOfRegistrantCACompleted;
        
        /// <remarks/>
        public event VerifyDomainMobilizerUpdateCompletedEventHandler VerifyDomainMobilizerUpdateCompleted;
        
        /// <remarks/>
        public event VerifyDomainMobilizerRemoveCompletedEventHandler VerifyDomainMobilizerRemoveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#HelloWorld", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string HelloWorld(string bstrInput) {
            object[] results = this.Invoke("HelloWorld", new object[] {
                        bstrInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string bstrInput) {
            this.HelloWorldAsync(bstrInput, null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string bstrInput, object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[] {
                        bstrInput}, this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getServiceStatus", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getServiceStatus() {
            object[] results = this.Invoke("getServiceStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceStatusAsync() {
            this.getServiceStatusAsync(null);
        }
        
        /// <remarks/>
        public void getServiceStatusAsync(object userState) {
            if ((this.getServiceStatusOperationCompleted == null)) {
                this.getServiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceStatusOperationCompleted);
            }
            this.InvokeAsync("getServiceStatus", new object[0], this.getServiceStatusOperationCompleted, userState);
        }
        
        private void OngetServiceStatusOperationCompleted(object arg) {
            if ((this.getServiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceStatusCompleted(this, new getServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyNameServerUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyNameServerUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyNameServerUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyNameServerUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyNameServerUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyNameServerUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyNameServerUpdateOperationCompleted == null)) {
                this.VerifyNameServerUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyNameServerUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyNameServerUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyNameServerUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyNameServerUpdateOperationCompleted(object arg) {
            if ((this.VerifyNameServerUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyNameServerUpdateCompleted(this, new VerifyNameServerUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyContactUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyContactUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyContactUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyContactUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyContactUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyContactUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyContactUpdateOperationCompleted == null)) {
                this.VerifyContactUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyContactUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyContactUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyContactUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyContactUpdateOperationCompleted(object arg) {
            if ((this.VerifyContactUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyContactUpdateCompleted(this, new VerifyContactUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyLocalizedContactUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyLocalizedContactUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyLocalizedContactUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyLocalizedContactUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyLocalizedContactUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyLocalizedContactUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyLocalizedContactUpdateOperationCompleted == null)) {
                this.VerifyLocalizedContactUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyLocalizedContactUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyLocalizedContactUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyLocalizedContactUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyLocalizedContactUpdateOperationCompleted(object arg) {
            if ((this.VerifyLocalizedContactUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyLocalizedContactUpdateCompleted(this, new VerifyLocalizedContactUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyHostUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyHostUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyHostUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyHostUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyHostUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyHostUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyHostUpdateOperationCompleted == null)) {
                this.VerifyHostUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyHostUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyHostUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyHostUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyHostUpdateOperationCompleted(object arg) {
            if ((this.VerifyHostUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyHostUpdateCompleted(this, new VerifyHostUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainSetLock", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainSetLock(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainSetLock", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainSetLockAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainSetLockAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainSetLockAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainSetLockOperationCompleted == null)) {
                this.VerifyDomainSetLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainSetLockOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainSetLock", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainSetLockOperationCompleted, userState);
        }
        
        private void OnVerifyDomainSetLockOperationCompleted(object arg) {
            if ((this.VerifyDomainSetLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainSetLockCompleted(this, new VerifyDomainSetLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainEmailForwardingUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainEmailForwardingUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainEmailForwardingUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainEmailForwardingUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainEmailForwardingUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainEmailForwardingUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainEmailForwardingUpdateOperationCompleted == null)) {
                this.VerifyDomainEmailForwardingUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainEmailForwardingUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainEmailForwardingUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainEmailForwardingUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainEmailForwardingUpdateOperationCompleted(object arg) {
            if ((this.VerifyDomainEmailForwardingUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainEmailForwardingUpdateCompleted(this, new VerifyDomainEmailForwardingUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainNexusUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainNexusUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainNexusUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainNexusUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainNexusUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainNexusUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainNexusUpdateOperationCompleted == null)) {
                this.VerifyDomainNexusUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainNexusUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainNexusUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainNexusUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainNexusUpdateOperationCompleted(object arg) {
            if ((this.VerifyDomainNexusUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainNexusUpdateCompleted(this, new VerifyDomainNexusUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainCEDUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainCEDUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainCEDUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainCEDUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainCEDUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainCEDUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainCEDUpdateOperationCompleted == null)) {
                this.VerifyDomainCEDUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainCEDUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainCEDUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainCEDUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainCEDUpdateOperationCompleted(object arg) {
            if ((this.VerifyDomainCEDUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainCEDUpdateCompleted(this, new VerifyDomainCEDUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainCancellation", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainCancellation(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainCancellation", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainCancellationAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainCancellationAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainCancellationAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainCancellationOperationCompleted == null)) {
                this.VerifyDomainCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainCancellationOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainCancellation", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainCancellationOperationCompleted, userState);
        }
        
        private void OnVerifyDomainCancellationOperationCompleted(object arg) {
            if ((this.VerifyDomainCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainCancellationCompleted(this, new VerifyDomainCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainSetAutoRenew", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainSetAutoRenew(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainSetAutoRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainSetAutoRenewAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainSetAutoRenewAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainSetAutoRenewAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainSetAutoRenewOperationCompleted == null)) {
                this.VerifyDomainSetAutoRenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainSetAutoRenewOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainSetAutoRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainSetAutoRenewOperationCompleted, userState);
        }
        
        private void OnVerifyDomainSetAutoRenewOperationCompleted(object arg) {
            if ((this.VerifyDomainSetAutoRenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainSetAutoRenewCompleted(this, new VerifyDomainSetAutoRenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainRenewal", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainRenewal(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainRenewal", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainRenewalAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainRenewalAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainRenewalAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainRenewalOperationCompleted == null)) {
                this.VerifyDomainRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainRenewalOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainRenewal", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainRenewalOperationCompleted, userState);
        }
        
        private void OnVerifyDomainRenewalOperationCompleted(object arg) {
            if ((this.VerifyDomainRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainRenewalCompleted(this, new VerifyDomainRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainRedemption", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainRedemption(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainRedemption", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainRedemptionAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainRedemptionAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainRedemptionAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainRedemptionOperationCompleted == null)) {
                this.VerifyDomainRedemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainRedemptionOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainRedemption", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainRedemptionOperationCompleted, userState);
        }
        
        private void OnVerifyDomainRedemptionOperationCompleted(object arg) {
            if ((this.VerifyDomainRedemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainRedemptionCompleted(this, new VerifyDomainRedemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainCertificationAdd", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainCertificationAdd(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainCertificationAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainCertificationAddAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainCertificationAddAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainCertificationAddAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainCertificationAddOperationCompleted == null)) {
                this.VerifyDomainCertificationAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainCertificationAddOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainCertificationAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainCertificationAddOperationCompleted, userState);
        }
        
        private void OnVerifyDomainCertificationAddOperationCompleted(object arg) {
            if ((this.VerifyDomainCertificationAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainCertificationAddCompleted(this, new VerifyDomainCertificationAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainPrivacyAdd", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainPrivacyAdd(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainPrivacyAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyAddAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainPrivacyAddAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyAddAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainPrivacyAddOperationCompleted == null)) {
                this.VerifyDomainPrivacyAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainPrivacyAddOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainPrivacyAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainPrivacyAddOperationCompleted, userState);
        }
        
        private void OnVerifyDomainPrivacyAddOperationCompleted(object arg) {
            if ((this.VerifyDomainPrivacyAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainPrivacyAddCompleted(this, new VerifyDomainPrivacyAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainPrivacyRenew", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainPrivacyRenew(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainPrivacyRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyRenewAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainPrivacyRenewAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyRenewAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainPrivacyRenewOperationCompleted == null)) {
                this.VerifyDomainPrivacyRenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainPrivacyRenewOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainPrivacyRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainPrivacyRenewOperationCompleted, userState);
        }
        
        private void OnVerifyDomainPrivacyRenewOperationCompleted(object arg) {
            if ((this.VerifyDomainPrivacyRenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainPrivacyRenewCompleted(this, new VerifyDomainPrivacyRenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainPrivacyUpdatePrivateContacts", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainPrivacyUpdatePrivateContacts(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainPrivacyUpdatePrivateContacts", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyUpdatePrivateContactsAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainPrivacyUpdatePrivateContactsAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyUpdatePrivateContactsAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainPrivacyUpdatePrivateContactsOperationCompleted == null)) {
                this.VerifyDomainPrivacyUpdatePrivateContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainPrivacyUpdatePrivateContactsOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainPrivacyUpdatePrivateContacts", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainPrivacyUpdatePrivateContactsOperationCompleted, userState);
        }
        
        private void OnVerifyDomainPrivacyUpdatePrivateContactsOperationCompleted(object arg) {
            if ((this.VerifyDomainPrivacyUpdatePrivateContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainPrivacyUpdatePrivateContactsCompleted(this, new VerifyDomainPrivacyUpdatePrivateContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainPrivacyUpdateEmailForwarding", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainPrivacyUpdateEmailForwarding(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainPrivacyUpdateEmailForwarding", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyUpdateEmailForwardingAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainPrivacyUpdateEmailForwardingAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyUpdateEmailForwardingAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainPrivacyUpdateEmailForwardingOperationCompleted == null)) {
                this.VerifyDomainPrivacyUpdateEmailForwardingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainPrivacyUpdateEmailForwardingOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainPrivacyUpdateEmailForwarding", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainPrivacyUpdateEmailForwardingOperationCompleted, userState);
        }
        
        private void OnVerifyDomainPrivacyUpdateEmailForwardingOperationCompleted(object arg) {
            if ((this.VerifyDomainPrivacyUpdateEmailForwardingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainPrivacyUpdateEmailForwardingCompleted(this, new VerifyDomainPrivacyUpdateEmailForwardingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainPrivacySendAuthorizationLetter", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainPrivacySendAuthorizationLetter(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainPrivacySendAuthorizationLetter", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacySendAuthorizationLetterAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainPrivacySendAuthorizationLetterAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacySendAuthorizationLetterAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainPrivacySendAuthorizationLetterOperationCompleted == null)) {
                this.VerifyDomainPrivacySendAuthorizationLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainPrivacySendAuthorizationLetterOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainPrivacySendAuthorizationLetter", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainPrivacySendAuthorizationLetterOperationCompleted, userState);
        }
        
        private void OnVerifyDomainPrivacySendAuthorizationLetterOperationCompleted(object arg) {
            if ((this.VerifyDomainPrivacySendAuthorizationLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainPrivacySendAuthorizationLetterCompleted(this, new VerifyDomainPrivacySendAuthorizationLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyAccountPrivacyUpdateContact", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyAccountPrivacyUpdateContact(string bstrActionXML, string bstrDBPAccountsXML) {
            object[] results = this.Invoke("VerifyAccountPrivacyUpdateContact", new object[] {
                        bstrActionXML,
                        bstrDBPAccountsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAccountPrivacyUpdateContactAsync(string bstrActionXML, string bstrDBPAccountsXML) {
            this.VerifyAccountPrivacyUpdateContactAsync(bstrActionXML, bstrDBPAccountsXML, null);
        }
        
        /// <remarks/>
        public void VerifyAccountPrivacyUpdateContactAsync(string bstrActionXML, string bstrDBPAccountsXML, object userState) {
            if ((this.VerifyAccountPrivacyUpdateContactOperationCompleted == null)) {
                this.VerifyAccountPrivacyUpdateContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAccountPrivacyUpdateContactOperationCompleted);
            }
            this.InvokeAsync("VerifyAccountPrivacyUpdateContact", new object[] {
                        bstrActionXML,
                        bstrDBPAccountsXML}, this.VerifyAccountPrivacyUpdateContactOperationCompleted, userState);
        }
        
        private void OnVerifyAccountPrivacyUpdateContactOperationCompleted(object arg) {
            if ((this.VerifyAccountPrivacyUpdateContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAccountPrivacyUpdateContactCompleted(this, new VerifyAccountPrivacyUpdateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyAccountPrivacyUpdateEmailPreferences", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyAccountPrivacyUpdateEmailPreferences(string bstrActionXML, string bstrDBPAccountsXML) {
            object[] results = this.Invoke("VerifyAccountPrivacyUpdateEmailPreferences", new object[] {
                        bstrActionXML,
                        bstrDBPAccountsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAccountPrivacyUpdateEmailPreferencesAsync(string bstrActionXML, string bstrDBPAccountsXML) {
            this.VerifyAccountPrivacyUpdateEmailPreferencesAsync(bstrActionXML, bstrDBPAccountsXML, null);
        }
        
        /// <remarks/>
        public void VerifyAccountPrivacyUpdateEmailPreferencesAsync(string bstrActionXML, string bstrDBPAccountsXML, object userState) {
            if ((this.VerifyAccountPrivacyUpdateEmailPreferencesOperationCompleted == null)) {
                this.VerifyAccountPrivacyUpdateEmailPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAccountPrivacyUpdateEmailPreferencesOperationCompleted);
            }
            this.InvokeAsync("VerifyAccountPrivacyUpdateEmailPreferences", new object[] {
                        bstrActionXML,
                        bstrDBPAccountsXML}, this.VerifyAccountPrivacyUpdateEmailPreferencesOperationCompleted, userState);
        }
        
        private void OnVerifyAccountPrivacyUpdateEmailPreferencesOperationCompleted(object arg) {
            if ((this.VerifyAccountPrivacyUpdateEmailPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAccountPrivacyUpdateEmailPreferencesCompleted(this, new VerifyAccountPrivacyUpdateEmailPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainPrivacyCancel", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainPrivacyCancel(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainPrivacyCancel", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyCancelAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainPrivacyCancelAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainPrivacyCancelAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainPrivacyCancelOperationCompleted == null)) {
                this.VerifyDomainPrivacyCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainPrivacyCancelOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainPrivacyCancel", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainPrivacyCancelOperationCompleted, userState);
        }
        
        private void OnVerifyDomainPrivacyCancelOperationCompleted(object arg) {
            if ((this.VerifyDomainPrivacyCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainPrivacyCancelCompleted(this, new VerifyDomainPrivacyCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProximaAdd", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProximaAdd(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProximaAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProximaAddAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProximaAddAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProximaAddAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProximaAddOperationCompleted == null)) {
                this.VerifyDomainProximaAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProximaAddOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProximaAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProximaAddOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProximaAddOperationCompleted(object arg) {
            if ((this.VerifyDomainProximaAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProximaAddCompleted(this, new VerifyDomainProximaAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProximaRenew", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProximaRenew(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProximaRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProximaRenewAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProximaRenewAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProximaRenewAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProximaRenewOperationCompleted == null)) {
                this.VerifyDomainProximaRenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProximaRenewOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProximaRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProximaRenewOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProximaRenewOperationCompleted(object arg) {
            if ((this.VerifyDomainProximaRenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProximaRenewCompleted(this, new VerifyDomainProximaRenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainExpirationProtectionAdd", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainExpirationProtectionAdd(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainExpirationProtectionAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainExpirationProtectionAddAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainExpirationProtectionAddAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainExpirationProtectionAddAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainExpirationProtectionAddOperationCompleted == null)) {
                this.VerifyDomainExpirationProtectionAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainExpirationProtectionAddOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainExpirationProtectionAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainExpirationProtectionAddOperationCompleted, userState);
        }
        
        private void OnVerifyDomainExpirationProtectionAddOperationCompleted(object arg) {
            if ((this.VerifyDomainExpirationProtectionAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainExpirationProtectionAddCompleted(this, new VerifyDomainExpirationProtectionAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainExpirationProtectionRenew", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainExpirationProtectionRenew(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainExpirationProtectionRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainExpirationProtectionRenewAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainExpirationProtectionRenewAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainExpirationProtectionRenewAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainExpirationProtectionRenewOperationCompleted == null)) {
                this.VerifyDomainExpirationProtectionRenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainExpirationProtectionRenewOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainExpirationProtectionRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainExpirationProtectionRenewOperationCompleted, userState);
        }
        
        private void OnVerifyDomainExpirationProtectionRenewOperationCompleted(object arg) {
            if ((this.VerifyDomainExpirationProtectionRenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainExpirationProtectionRenewCompleted(this, new VerifyDomainExpirationProtectionRenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainForwardingUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainForwardingUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainForwardingUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainForwardingUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainForwardingUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainForwardingUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainForwardingUpdateOperationCompleted == null)) {
                this.VerifyDomainForwardingUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainForwardingUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainForwardingUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainForwardingUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainForwardingUpdateOperationCompleted(object arg) {
            if ((this.VerifyDomainForwardingUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainForwardingUpdateCompleted(this, new VerifyDomainForwardingUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainForwardingDelete", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainForwardingDelete(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainForwardingDelete", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainForwardingDeleteAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainForwardingDeleteAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainForwardingDeleteAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainForwardingDeleteOperationCompleted == null)) {
                this.VerifyDomainForwardingDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainForwardingDeleteOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainForwardingDelete", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainForwardingDeleteOperationCompleted, userState);
        }
        
        private void OnVerifyDomainForwardingDeleteOperationCompleted(object arg) {
            if ((this.VerifyDomainForwardingDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainForwardingDeleteCompleted(this, new VerifyDomainForwardingDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifySubDomainUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifySubDomainUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifySubDomainUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifySubDomainUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifySubDomainUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifySubDomainUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifySubDomainUpdateOperationCompleted == null)) {
                this.VerifySubDomainUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifySubDomainUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifySubDomainUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifySubDomainUpdateOperationCompleted, userState);
        }
        
        private void OnVerifySubDomainUpdateOperationCompleted(object arg) {
            if ((this.VerifySubDomainUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifySubDomainUpdateCompleted(this, new VerifySubDomainUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifySubDomainDelete", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifySubDomainDelete(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifySubDomainDelete", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifySubDomainDeleteAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifySubDomainDeleteAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifySubDomainDeleteAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifySubDomainDeleteOperationCompleted == null)) {
                this.VerifySubDomainDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifySubDomainDeleteOperationCompleted);
            }
            this.InvokeAsync("VerifySubDomainDelete", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifySubDomainDeleteOperationCompleted, userState);
        }
        
        private void OnVerifySubDomainDeleteOperationCompleted(object arg) {
            if ((this.VerifySubDomainDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifySubDomainDeleteCompleted(this, new VerifySubDomainDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyCashParkingUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyCashParkingUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyCashParkingUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyCashParkingUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyCashParkingUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyCashParkingUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyCashParkingUpdateOperationCompleted == null)) {
                this.VerifyCashParkingUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyCashParkingUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyCashParkingUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyCashParkingUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyCashParkingUpdateOperationCompleted(object arg) {
            if ((this.VerifyCashParkingUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCashParkingUpdateCompleted(this, new VerifyCashParkingUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyAuthCodeSendEmail", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyAuthCodeSendEmail(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyAuthCodeSendEmail", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAuthCodeSendEmailAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyAuthCodeSendEmailAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyAuthCodeSendEmailAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyAuthCodeSendEmailOperationCompleted == null)) {
                this.VerifyAuthCodeSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAuthCodeSendEmailOperationCompleted);
            }
            this.InvokeAsync("VerifyAuthCodeSendEmail", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyAuthCodeSendEmailOperationCompleted, userState);
        }
        
        private void OnVerifyAuthCodeSendEmailOperationCompleted(object arg) {
            if ((this.VerifyAuthCodeSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAuthCodeSendEmailCompleted(this, new VerifyAuthCodeSendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyRegistrantChangeInsert", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyRegistrantChangeInsert(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyRegistrantChangeInsert", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeInsertAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyRegistrantChangeInsertAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeInsertAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyRegistrantChangeInsertOperationCompleted == null)) {
                this.VerifyRegistrantChangeInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantChangeInsertOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantChangeInsert", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyRegistrantChangeInsertOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantChangeInsertOperationCompleted(object arg) {
            if ((this.VerifyRegistrantChangeInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantChangeInsertCompleted(this, new VerifyRegistrantChangeInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyRegistrantChangeDelete", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyRegistrantChangeDelete(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyRegistrantChangeDelete", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeDeleteAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyRegistrantChangeDeleteAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeDeleteAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyRegistrantChangeDeleteOperationCompleted == null)) {
                this.VerifyRegistrantChangeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantChangeDeleteOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantChangeDelete", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyRegistrantChangeDeleteOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantChangeDeleteOperationCompleted(object arg) {
            if ((this.VerifyRegistrantChangeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantChangeDeleteCompleted(this, new VerifyRegistrantChangeDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyRegistrantChangeSendEmail", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyRegistrantChangeSendEmail(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyRegistrantChangeSendEmail", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeSendEmailAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyRegistrantChangeSendEmailAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeSendEmailAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyRegistrantChangeSendEmailOperationCompleted == null)) {
                this.VerifyRegistrantChangeSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantChangeSendEmailOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantChangeSendEmail", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyRegistrantChangeSendEmailOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantChangeSendEmailOperationCompleted(object arg) {
            if ((this.VerifyRegistrantChangeSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantChangeSendEmailCompleted(this, new VerifyRegistrantChangeSendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyRegistrantChangeValidate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyRegistrantChangeValidate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyRegistrantChangeValidate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeValidateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyRegistrantChangeValidateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeValidateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyRegistrantChangeValidateOperationCompleted == null)) {
                this.VerifyRegistrantChangeValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantChangeValidateOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantChangeValidate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyRegistrantChangeValidateOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantChangeValidateOperationCompleted(object arg) {
            if ((this.VerifyRegistrantChangeValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantChangeValidateCompleted(this, new VerifyRegistrantChangeValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyRegistrantChangeAccept", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyRegistrantChangeAccept(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyRegistrantChangeAccept", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeAcceptAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyRegistrantChangeAcceptAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeAcceptAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyRegistrantChangeAcceptOperationCompleted == null)) {
                this.VerifyRegistrantChangeAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantChangeAcceptOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantChangeAccept", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyRegistrantChangeAcceptOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantChangeAcceptOperationCompleted(object arg) {
            if ((this.VerifyRegistrantChangeAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantChangeAcceptCompleted(this, new VerifyRegistrantChangeAcceptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyRegistrantChangeInstant", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyRegistrantChangeInstant(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyRegistrantChangeInstant", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeInstantAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyRegistrantChangeInstantAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyRegistrantChangeInstantAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyRegistrantChangeInstantOperationCompleted == null)) {
                this.VerifyRegistrantChangeInstantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRegistrantChangeInstantOperationCompleted);
            }
            this.InvokeAsync("VerifyRegistrantChangeInstant", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyRegistrantChangeInstantOperationCompleted, userState);
        }
        
        private void OnVerifyRegistrantChangeInstantOperationCompleted(object arg) {
            if ((this.VerifyRegistrantChangeInstantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRegistrantChangeInstantCompleted(this, new VerifyRegistrantChangeInstantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToSendEmail", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToSendEmail(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToSendEmail", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToSendEmailAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToSendEmailAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToSendEmailAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToSendEmailOperationCompleted == null)) {
                this.VerifyTransferToSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToSendEmailOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToSendEmail", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToSendEmailOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToSendEmailOperationCompleted(object arg) {
            if ((this.VerifyTransferToSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToSendEmailCompleted(this, new VerifyTransferToSendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToAuthInfoChange", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToAuthInfoChange(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToAuthInfoChange", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToAuthInfoChangeAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToAuthInfoChangeAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToAuthInfoChangeAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToAuthInfoChangeOperationCompleted == null)) {
                this.VerifyTransferToAuthInfoChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToAuthInfoChangeOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToAuthInfoChange", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToAuthInfoChangeOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToAuthInfoChangeOperationCompleted(object arg) {
            if ((this.VerifyTransferToAuthInfoChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToAuthInfoChangeCompleted(this, new VerifyTransferToAuthInfoChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToRestart", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToRestart(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToRestart", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToRestartAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToRestartAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToRestartAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToRestartOperationCompleted == null)) {
                this.VerifyTransferToRestartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToRestartOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToRestart", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToRestartOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToRestartOperationCompleted(object arg) {
            if ((this.VerifyTransferToRestartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToRestartCompleted(this, new VerifyTransferToRestartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToAck", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToAck(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToAck", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToAckAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToAckAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToAckAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToAckOperationCompleted == null)) {
                this.VerifyTransferToAckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToAckOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToAck", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToAckOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToAckOperationCompleted(object arg) {
            if ((this.VerifyTransferToAckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToAckCompleted(this, new VerifyTransferToAckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToNack", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToNack(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToNack", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToNackAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToNackAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToNackAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToNackOperationCompleted == null)) {
                this.VerifyTransferToNackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToNackOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToNack", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToNackOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToNackOperationCompleted(object arg) {
            if ((this.VerifyTransferToNackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToNackCompleted(this, new VerifyTransferToNackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToRetry", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToRetry(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToRetry", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToRetryAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToRetryAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToRetryAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToRetryOperationCompleted == null)) {
                this.VerifyTransferToRetryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToRetryOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToRetry", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToRetryOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToRetryOperationCompleted(object arg) {
            if ((this.VerifyTransferToRetryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToRetryCompleted(this, new VerifyTransferToRetryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferToCancel", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferToCancel(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferToCancel", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferToCancelAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferToCancelAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferToCancelAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferToCancelOperationCompleted == null)) {
                this.VerifyTransferToCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferToCancelOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferToCancel", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferToCancelOperationCompleted, userState);
        }
        
        private void OnVerifyTransferToCancelOperationCompleted(object arg) {
            if ((this.VerifyTransferToCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferToCancelCompleted(this, new VerifyTransferToCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferFromAck", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferFromAck(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferFromAck", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferFromAckAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferFromAckAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferFromAckAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferFromAckOperationCompleted == null)) {
                this.VerifyTransferFromAckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferFromAckOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferFromAck", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferFromAckOperationCompleted, userState);
        }
        
        private void OnVerifyTransferFromAckOperationCompleted(object arg) {
            if ((this.VerifyTransferFromAckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferFromAckCompleted(this, new VerifyTransferFromAckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTransferFromNack", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTransferFromNack(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTransferFromNack", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransferFromNackAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTransferFromNackAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTransferFromNackAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTransferFromNackOperationCompleted == null)) {
                this.VerifyTransferFromNackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransferFromNackOperationCompleted);
            }
            this.InvokeAsync("VerifyTransferFromNack", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTransferFromNackOperationCompleted, userState);
        }
        
        private void OnVerifyTransferFromNackOperationCompleted(object arg) {
            if ((this.VerifyTransferFromNackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransferFromNackCompleted(this, new VerifyTransferFromNackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainFolderAssign", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainFolderAssign(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainFolderAssign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainFolderAssignAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainFolderAssignAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainFolderAssignAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainFolderAssignOperationCompleted == null)) {
                this.VerifyDomainFolderAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainFolderAssignOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainFolderAssign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainFolderAssignOperationCompleted, userState);
        }
        
        private void OnVerifyDomainFolderAssignOperationCompleted(object arg) {
            if ((this.VerifyDomainFolderAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainFolderAssignCompleted(this, new VerifyDomainFolderAssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainFolderUnassign", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainFolderUnassign(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainFolderUnassign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainFolderUnassignAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainFolderUnassignAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainFolderUnassignAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainFolderUnassignOperationCompleted == null)) {
                this.VerifyDomainFolderUnassignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainFolderUnassignOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainFolderUnassign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainFolderUnassignOperationCompleted, userState);
        }
        
        private void OnVerifyDomainFolderUnassignOperationCompleted(object arg) {
            if ((this.VerifyDomainFolderUnassignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainFolderUnassignCompleted(this, new VerifyDomainFolderUnassignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainFolderUnassignAll", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainFolderUnassignAll(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainFolderUnassignAll", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainFolderUnassignAllAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainFolderUnassignAllAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainFolderUnassignAllAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainFolderUnassignAllOperationCompleted == null)) {
                this.VerifyDomainFolderUnassignAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainFolderUnassignAllOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainFolderUnassignAll", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainFolderUnassignAllOperationCompleted, userState);
        }
        
        private void OnVerifyDomainFolderUnassignAllOperationCompleted(object arg) {
            if ((this.VerifyDomainFolderUnassignAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainFolderUnassignAllCompleted(this, new VerifyDomainFolderUnassignAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProtectionUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProtectionUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProtectionUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProtectionUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProtectionUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProtectionUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProtectionUpdateOperationCompleted == null)) {
                this.VerifyDomainProtectionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProtectionUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProtectionUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProtectionUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProtectionUpdateOperationCompleted(object arg) {
            if ((this.VerifyDomainProtectionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProtectionUpdateCompleted(this, new VerifyDomainProtectionUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainDownloadList", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainDownloadList(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainDownloadList", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainDownloadListAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainDownloadListAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainDownloadListAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainDownloadListOperationCompleted == null)) {
                this.VerifyDomainDownloadListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainDownloadListOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainDownloadList", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainDownloadListOperationCompleted, userState);
        }
        
        private void OnVerifyDomainDownloadListOperationCompleted(object arg) {
            if ((this.VerifyDomainDownloadListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainDownloadListCompleted(this, new VerifyDomainDownloadListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyMonitorBackorderSetup", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyMonitorBackorderSetup(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyMonitorBackorderSetup", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyMonitorBackorderSetupAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyMonitorBackorderSetupAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyMonitorBackorderSetupAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyMonitorBackorderSetupOperationCompleted == null)) {
                this.VerifyMonitorBackorderSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyMonitorBackorderSetupOperationCompleted);
            }
            this.InvokeAsync("VerifyMonitorBackorderSetup", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyMonitorBackorderSetupOperationCompleted, userState);
        }
        
        private void OnVerifyMonitorBackorderSetupOperationCompleted(object arg) {
            if ((this.VerifyMonitorBackorderSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyMonitorBackorderSetupCompleted(this, new VerifyMonitorBackorderSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyMonitorBackorderCancel", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyMonitorBackorderCancel(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyMonitorBackorderCancel", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyMonitorBackorderCancelAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyMonitorBackorderCancelAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyMonitorBackorderCancelAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyMonitorBackorderCancelOperationCompleted == null)) {
                this.VerifyMonitorBackorderCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyMonitorBackorderCancelOperationCompleted);
            }
            this.InvokeAsync("VerifyMonitorBackorderCancel", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyMonitorBackorderCancelOperationCompleted, userState);
        }
        
        private void OnVerifyMonitorBackorderCancelOperationCompleted(object arg) {
            if ((this.VerifyMonitorBackorderCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyMonitorBackorderCancelCompleted(this, new VerifyMonitorBackorderCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyMonitorUpgrade", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyMonitorUpgrade(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyMonitorUpgrade", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyMonitorUpgradeAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyMonitorUpgradeAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyMonitorUpgradeAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyMonitorUpgradeOperationCompleted == null)) {
                this.VerifyMonitorUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyMonitorUpgradeOperationCompleted);
            }
            this.InvokeAsync("VerifyMonitorUpgrade", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyMonitorUpgradeOperationCompleted, userState);
        }
        
        private void OnVerifyMonitorUpgradeOperationCompleted(object arg) {
            if ((this.VerifyMonitorUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyMonitorUpgradeCompleted(this, new VerifyMonitorUpgradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyMonitorEmailUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyMonitorEmailUpdate(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyMonitorEmailUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyMonitorEmailUpdateAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyMonitorEmailUpdateAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyMonitorEmailUpdateAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyMonitorEmailUpdateOperationCompleted == null)) {
                this.VerifyMonitorEmailUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyMonitorEmailUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyMonitorEmailUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyMonitorEmailUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyMonitorEmailUpdateOperationCompleted(object arg) {
            if ((this.VerifyMonitorEmailUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyMonitorEmailUpdateCompleted(this, new VerifyMonitorEmailUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyMonitorResendEmails", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyMonitorResendEmails(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyMonitorResendEmails", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyMonitorResendEmailsAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyMonitorResendEmailsAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyMonitorResendEmailsAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyMonitorResendEmailsOperationCompleted == null)) {
                this.VerifyMonitorResendEmailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyMonitorResendEmailsOperationCompleted);
            }
            this.InvokeAsync("VerifyMonitorResendEmails", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyMonitorResendEmailsOperationCompleted, userState);
        }
        
        private void OnVerifyMonitorResendEmailsOperationCompleted(object arg) {
            if ((this.VerifyMonitorResendEmailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyMonitorResendEmailsCompleted(this, new VerifyMonitorResendEmailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyBackorderContactUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyBackorderContactUpdate(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyBackorderContactUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyBackorderContactUpdateAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyBackorderContactUpdateAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyBackorderContactUpdateAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyBackorderContactUpdateOperationCompleted == null)) {
                this.VerifyBackorderContactUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyBackorderContactUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyBackorderContactUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyBackorderContactUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyBackorderContactUpdateOperationCompleted(object arg) {
            if ((this.VerifyBackorderContactUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyBackorderContactUpdateCompleted(this, new VerifyBackorderContactUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyBackorderAgreementsUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyBackorderAgreementsUpdate(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyBackorderAgreementsUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyBackorderAgreementsUpdateAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyBackorderAgreementsUpdateAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyBackorderAgreementsUpdateAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyBackorderAgreementsUpdateOperationCompleted == null)) {
                this.VerifyBackorderAgreementsUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyBackorderAgreementsUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyBackorderAgreementsUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyBackorderAgreementsUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyBackorderAgreementsUpdateOperationCompleted(object arg) {
            if ((this.VerifyBackorderAgreementsUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyBackorderAgreementsUpdateCompleted(this, new VerifyBackorderAgreementsUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyBackorderPrivacyUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyBackorderPrivacyUpdate(string bstrActionXML, string bstrMonitorXML) {
            object[] results = this.Invoke("VerifyBackorderPrivacyUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyBackorderPrivacyUpdateAsync(string bstrActionXML, string bstrMonitorXML) {
            this.VerifyBackorderPrivacyUpdateAsync(bstrActionXML, bstrMonitorXML, null);
        }
        
        /// <remarks/>
        public void VerifyBackorderPrivacyUpdateAsync(string bstrActionXML, string bstrMonitorXML, object userState) {
            if ((this.VerifyBackorderPrivacyUpdateOperationCompleted == null)) {
                this.VerifyBackorderPrivacyUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyBackorderPrivacyUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyBackorderPrivacyUpdate", new object[] {
                        bstrActionXML,
                        bstrMonitorXML}, this.VerifyBackorderPrivacyUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyBackorderPrivacyUpdateOperationCompleted(object arg) {
            if ((this.VerifyBackorderPrivacyUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyBackorderPrivacyUpdateCompleted(this, new VerifyBackorderPrivacyUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyPremiumDomainSetup", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyPremiumDomainSetup(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyPremiumDomainSetup", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainSetupAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyPremiumDomainSetupAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainSetupAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyPremiumDomainSetupOperationCompleted == null)) {
                this.VerifyPremiumDomainSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyPremiumDomainSetupOperationCompleted);
            }
            this.InvokeAsync("VerifyPremiumDomainSetup", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyPremiumDomainSetupOperationCompleted, userState);
        }
        
        private void OnVerifyPremiumDomainSetupOperationCompleted(object arg) {
            if ((this.VerifyPremiumDomainSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyPremiumDomainSetupCompleted(this, new VerifyPremiumDomainSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyPremiumDomainSetAutoRelist", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyPremiumDomainSetAutoRelist(string bstrActionXML, string bstrPremiumDomainsXML) {
            object[] results = this.Invoke("VerifyPremiumDomainSetAutoRelist", new object[] {
                        bstrActionXML,
                        bstrPremiumDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainSetAutoRelistAsync(string bstrActionXML, string bstrPremiumDomainsXML) {
            this.VerifyPremiumDomainSetAutoRelistAsync(bstrActionXML, bstrPremiumDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainSetAutoRelistAsync(string bstrActionXML, string bstrPremiumDomainsXML, object userState) {
            if ((this.VerifyPremiumDomainSetAutoRelistOperationCompleted == null)) {
                this.VerifyPremiumDomainSetAutoRelistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyPremiumDomainSetAutoRelistOperationCompleted);
            }
            this.InvokeAsync("VerifyPremiumDomainSetAutoRelist", new object[] {
                        bstrActionXML,
                        bstrPremiumDomainsXML}, this.VerifyPremiumDomainSetAutoRelistOperationCompleted, userState);
        }
        
        private void OnVerifyPremiumDomainSetAutoRelistOperationCompleted(object arg) {
            if ((this.VerifyPremiumDomainSetAutoRelistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyPremiumDomainSetAutoRelistCompleted(this, new VerifyPremiumDomainSetAutoRelistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyPremiumDomainUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyPremiumDomainUpdate(string bstrActionXML, string bstrPremiumDomainsXML) {
            object[] results = this.Invoke("VerifyPremiumDomainUpdate", new object[] {
                        bstrActionXML,
                        bstrPremiumDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainUpdateAsync(string bstrActionXML, string bstrPremiumDomainsXML) {
            this.VerifyPremiumDomainUpdateAsync(bstrActionXML, bstrPremiumDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainUpdateAsync(string bstrActionXML, string bstrPremiumDomainsXML, object userState) {
            if ((this.VerifyPremiumDomainUpdateOperationCompleted == null)) {
                this.VerifyPremiumDomainUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyPremiumDomainUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyPremiumDomainUpdate", new object[] {
                        bstrActionXML,
                        bstrPremiumDomainsXML}, this.VerifyPremiumDomainUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyPremiumDomainUpdateOperationCompleted(object arg) {
            if ((this.VerifyPremiumDomainUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyPremiumDomainUpdateCompleted(this, new VerifyPremiumDomainUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyPremiumDomainRemove", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyPremiumDomainRemove(string bstrActionXML, string bstrPremiumDomainsXML) {
            object[] results = this.Invoke("VerifyPremiumDomainRemove", new object[] {
                        bstrActionXML,
                        bstrPremiumDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainRemoveAsync(string bstrActionXML, string bstrPremiumDomainsXML) {
            this.VerifyPremiumDomainRemoveAsync(bstrActionXML, bstrPremiumDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyPremiumDomainRemoveAsync(string bstrActionXML, string bstrPremiumDomainsXML, object userState) {
            if ((this.VerifyPremiumDomainRemoveOperationCompleted == null)) {
                this.VerifyPremiumDomainRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyPremiumDomainRemoveOperationCompleted);
            }
            this.InvokeAsync("VerifyPremiumDomainRemove", new object[] {
                        bstrActionXML,
                        bstrPremiumDomainsXML}, this.VerifyPremiumDomainRemoveOperationCompleted, userState);
        }
        
        private void OnVerifyPremiumDomainRemoveOperationCompleted(object arg) {
            if ((this.VerifyPremiumDomainRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyPremiumDomainRemoveCompleted(this, new VerifyPremiumDomainRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTDNAMAuctionSetup", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTDNAMAuctionSetup(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTDNAMAuctionSetup", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTDNAMAuctionSetupAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTDNAMAuctionSetupAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTDNAMAuctionSetupAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTDNAMAuctionSetupOperationCompleted == null)) {
                this.VerifyTDNAMAuctionSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTDNAMAuctionSetupOperationCompleted);
            }
            this.InvokeAsync("VerifyTDNAMAuctionSetup", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTDNAMAuctionSetupOperationCompleted, userState);
        }
        
        private void OnVerifyTDNAMAuctionSetupOperationCompleted(object arg) {
            if ((this.VerifyTDNAMAuctionSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTDNAMAuctionSetupCompleted(this, new VerifyTDNAMAuctionSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyTDNAMAuctionCancel", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyTDNAMAuctionCancel(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyTDNAMAuctionCancel", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTDNAMAuctionCancelAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyTDNAMAuctionCancelAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyTDNAMAuctionCancelAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyTDNAMAuctionCancelOperationCompleted == null)) {
                this.VerifyTDNAMAuctionCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTDNAMAuctionCancelOperationCompleted);
            }
            this.InvokeAsync("VerifyTDNAMAuctionCancel", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyTDNAMAuctionCancelOperationCompleted, userState);
        }
        
        private void OnVerifyTDNAMAuctionCancelOperationCompleted(object arg) {
            if ((this.VerifyTDNAMAuctionCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTDNAMAuctionCancelCompleted(this, new VerifyTDNAMAuctionCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileCreate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileCreate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProfileCreate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileCreateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProfileCreateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileCreateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProfileCreateOperationCompleted == null)) {
                this.VerifyDomainProfileCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileCreateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileCreate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProfileCreateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileCreateOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileCreateCompleted(this, new VerifyDomainProfileCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileAssign", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileAssign(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProfileAssign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileAssignAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProfileAssignAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileAssignAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProfileAssignOperationCompleted == null)) {
                this.VerifyDomainProfileAssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileAssignOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileAssign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProfileAssignOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileAssignOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileAssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileAssignCompleted(this, new VerifyDomainProfileAssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileUnassign", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileUnassign(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProfileUnassign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileUnassignAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProfileUnassignAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileUnassignAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProfileUnassignOperationCompleted == null)) {
                this.VerifyDomainProfileUnassignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileUnassignOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileUnassign", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProfileUnassignOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileUnassignOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileUnassignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileUnassignCompleted(this, new VerifyDomainProfileUnassignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileUnassignAll", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileUnassignAll(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProfileUnassignAll", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileUnassignAllAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProfileUnassignAllAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileUnassignAllAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProfileUnassignAllOperationCompleted == null)) {
                this.VerifyDomainProfileUnassignAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileUnassignAllOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileUnassignAll", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProfileUnassignAllOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileUnassignAllOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileUnassignAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileUnassignAllCompleted(this, new VerifyDomainProfileUnassignAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileAttributeChange", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileAttributeChange(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainProfileAttributeChange", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileAttributeChangeAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainProfileAttributeChangeAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileAttributeChangeAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainProfileAttributeChangeOperationCompleted == null)) {
                this.VerifyDomainProfileAttributeChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileAttributeChangeOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileAttributeChange", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainProfileAttributeChangeOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileAttributeChangeOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileAttributeChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileAttributeChangeCompleted(this, new VerifyDomainProfileAttributeChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileDelete", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileDelete(string bstrActionXML, string bstrProfilesXML) {
            object[] results = this.Invoke("VerifyDomainProfileDelete", new object[] {
                        bstrActionXML,
                        bstrProfilesXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileDeleteAsync(string bstrActionXML, string bstrProfilesXML) {
            this.VerifyDomainProfileDeleteAsync(bstrActionXML, bstrProfilesXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileDeleteAsync(string bstrActionXML, string bstrProfilesXML, object userState) {
            if ((this.VerifyDomainProfileDeleteOperationCompleted == null)) {
                this.VerifyDomainProfileDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileDeleteOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileDelete", new object[] {
                        bstrActionXML,
                        bstrProfilesXML}, this.VerifyDomainProfileDeleteOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileDeleteOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileDeleteCompleted(this, new VerifyDomainProfileDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyProfileSetAttribute", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyProfileSetAttribute(string bstrActionXML, string bstrProfilesXML) {
            object[] results = this.Invoke("VerifyProfileSetAttribute", new object[] {
                        bstrActionXML,
                        bstrProfilesXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyProfileSetAttributeAsync(string bstrActionXML, string bstrProfilesXML) {
            this.VerifyProfileSetAttributeAsync(bstrActionXML, bstrProfilesXML, null);
        }
        
        /// <remarks/>
        public void VerifyProfileSetAttributeAsync(string bstrActionXML, string bstrProfilesXML, object userState) {
            if ((this.VerifyProfileSetAttributeOperationCompleted == null)) {
                this.VerifyProfileSetAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyProfileSetAttributeOperationCompleted);
            }
            this.InvokeAsync("VerifyProfileSetAttribute", new object[] {
                        bstrActionXML,
                        bstrProfilesXML}, this.VerifyProfileSetAttributeOperationCompleted, userState);
        }
        
        private void OnVerifyProfileSetAttributeOperationCompleted(object arg) {
            if ((this.VerifyProfileSetAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyProfileSetAttributeCompleted(this, new VerifyProfileSetAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifySendCIRAAccountInfoEmail", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifySendCIRAAccountInfoEmail(string bstrActionXML, string bstrProfilesXML) {
            object[] results = this.Invoke("VerifySendCIRAAccountInfoEmail", new object[] {
                        bstrActionXML,
                        bstrProfilesXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifySendCIRAAccountInfoEmailAsync(string bstrActionXML, string bstrProfilesXML) {
            this.VerifySendCIRAAccountInfoEmailAsync(bstrActionXML, bstrProfilesXML, null);
        }
        
        /// <remarks/>
        public void VerifySendCIRAAccountInfoEmailAsync(string bstrActionXML, string bstrProfilesXML, object userState) {
            if ((this.VerifySendCIRAAccountInfoEmailOperationCompleted == null)) {
                this.VerifySendCIRAAccountInfoEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifySendCIRAAccountInfoEmailOperationCompleted);
            }
            this.InvokeAsync("VerifySendCIRAAccountInfoEmail", new object[] {
                        bstrActionXML,
                        bstrProfilesXML}, this.VerifySendCIRAAccountInfoEmailOperationCompleted, userState);
        }
        
        private void OnVerifySendCIRAAccountInfoEmailOperationCompleted(object arg) {
            if ((this.VerifySendCIRAAccountInfoEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifySendCIRAAccountInfoEmailCompleted(this, new VerifySendCIRAAccountInfoEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainProfileMergeCA", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainProfileMergeCA(string bstrActionXML, string bstrProfilesXML) {
            object[] results = this.Invoke("VerifyDomainProfileMergeCA", new object[] {
                        bstrActionXML,
                        bstrProfilesXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainProfileMergeCAAsync(string bstrActionXML, string bstrProfilesXML) {
            this.VerifyDomainProfileMergeCAAsync(bstrActionXML, bstrProfilesXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainProfileMergeCAAsync(string bstrActionXML, string bstrProfilesXML, object userState) {
            if ((this.VerifyDomainProfileMergeCAOperationCompleted == null)) {
                this.VerifyDomainProfileMergeCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainProfileMergeCAOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainProfileMergeCA", new object[] {
                        bstrActionXML,
                        bstrProfilesXML}, this.VerifyDomainProfileMergeCAOperationCompleted, userState);
        }
        
        private void OnVerifyDomainProfileMergeCAOperationCompleted(object arg) {
            if ((this.VerifyDomainProfileMergeCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainProfileMergeCACompleted(this, new VerifyDomainProfileMergeCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainConsolidate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainConsolidate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainConsolidate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainConsolidateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainConsolidateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainConsolidateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainConsolidateOperationCompleted == null)) {
                this.VerifyDomainConsolidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainConsolidateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainConsolidate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainConsolidateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainConsolidateOperationCompleted(object arg) {
            if ((this.VerifyDomainConsolidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainConsolidateCompleted(this, new VerifyDomainConsolidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyAppraisalUpgrade", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyAppraisalUpgrade(string bstrActionXML, string bstrAppraisalsXML) {
            object[] results = this.Invoke("VerifyAppraisalUpgrade", new object[] {
                        bstrActionXML,
                        bstrAppraisalsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAppraisalUpgradeAsync(string bstrActionXML, string bstrAppraisalsXML) {
            this.VerifyAppraisalUpgradeAsync(bstrActionXML, bstrAppraisalsXML, null);
        }
        
        /// <remarks/>
        public void VerifyAppraisalUpgradeAsync(string bstrActionXML, string bstrAppraisalsXML, object userState) {
            if ((this.VerifyAppraisalUpgradeOperationCompleted == null)) {
                this.VerifyAppraisalUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAppraisalUpgradeOperationCompleted);
            }
            this.InvokeAsync("VerifyAppraisalUpgrade", new object[] {
                        bstrActionXML,
                        bstrAppraisalsXML}, this.VerifyAppraisalUpgradeOperationCompleted, userState);
        }
        
        private void OnVerifyAppraisalUpgradeOperationCompleted(object arg) {
            if ((this.VerifyAppraisalUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAppraisalUpgradeCompleted(this, new VerifyAppraisalUpgradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifySmartDomainsAdd", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifySmartDomainsAdd(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifySmartDomainsAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifySmartDomainsAddAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifySmartDomainsAddAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifySmartDomainsAddAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifySmartDomainsAddOperationCompleted == null)) {
                this.VerifySmartDomainsAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifySmartDomainsAddOperationCompleted);
            }
            this.InvokeAsync("VerifySmartDomainsAdd", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifySmartDomainsAddOperationCompleted, userState);
        }
        
        private void OnVerifySmartDomainsAddOperationCompleted(object arg) {
            if ((this.VerifySmartDomainsAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifySmartDomainsAddCompleted(this, new VerifySmartDomainsAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifySmartDomainsRenew", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifySmartDomainsRenew(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifySmartDomainsRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifySmartDomainsRenewAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifySmartDomainsRenewAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifySmartDomainsRenewAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifySmartDomainsRenewOperationCompleted == null)) {
                this.VerifySmartDomainsRenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifySmartDomainsRenewOperationCompleted);
            }
            this.InvokeAsync("VerifySmartDomainsRenew", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifySmartDomainsRenewOperationCompleted, userState);
        }
        
        private void OnVerifySmartDomainsRenewOperationCompleted(object arg) {
            if ((this.VerifySmartDomainsRenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifySmartDomainsRenewCompleted(this, new VerifySmartDomainsRenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainChangeOfRegistrantCA", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainChangeOfRegistrantCA(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainChangeOfRegistrantCA", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainChangeOfRegistrantCAAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainChangeOfRegistrantCAAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainChangeOfRegistrantCAAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainChangeOfRegistrantCAOperationCompleted == null)) {
                this.VerifyDomainChangeOfRegistrantCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainChangeOfRegistrantCAOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainChangeOfRegistrantCA", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainChangeOfRegistrantCAOperationCompleted, userState);
        }
        
        private void OnVerifyDomainChangeOfRegistrantCAOperationCompleted(object arg) {
            if ((this.VerifyDomainChangeOfRegistrantCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainChangeOfRegistrantCACompleted(this, new VerifyDomainChangeOfRegistrantCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainMobilizerUpdate", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainMobilizerUpdate(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainMobilizerUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainMobilizerUpdateAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainMobilizerUpdateAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainMobilizerUpdateAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainMobilizerUpdateOperationCompleted == null)) {
                this.VerifyDomainMobilizerUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainMobilizerUpdateOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainMobilizerUpdate", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainMobilizerUpdateOperationCompleted, userState);
        }
        
        private void OnVerifyDomainMobilizerUpdateOperationCompleted(object arg) {
            if ((this.VerifyDomainMobilizerUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainMobilizerUpdateCompleted(this, new VerifyDomainMobilizerUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#VerifyDomainMobilizerRemove", RequestNamespace="urn:RegDCCVerifyWebSvcService", ResponseNamespace="urn:RegDCCVerifyWebSvcService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VerifyDomainMobilizerRemove(string bstrActionXML, string bstrDomainsXML) {
            object[] results = this.Invoke("VerifyDomainMobilizerRemove", new object[] {
                        bstrActionXML,
                        bstrDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyDomainMobilizerRemoveAsync(string bstrActionXML, string bstrDomainsXML) {
            this.VerifyDomainMobilizerRemoveAsync(bstrActionXML, bstrDomainsXML, null);
        }
        
        /// <remarks/>
        public void VerifyDomainMobilizerRemoveAsync(string bstrActionXML, string bstrDomainsXML, object userState) {
            if ((this.VerifyDomainMobilizerRemoveOperationCompleted == null)) {
                this.VerifyDomainMobilizerRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyDomainMobilizerRemoveOperationCompleted);
            }
            this.InvokeAsync("VerifyDomainMobilizerRemove", new object[] {
                        bstrActionXML,
                        bstrDomainsXML}, this.VerifyDomainMobilizerRemoveOperationCompleted, userState);
        }
        
        private void OnVerifyDomainMobilizerRemoveOperationCompleted(object arg) {
            if ((this.VerifyDomainMobilizerRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyDomainMobilizerRemoveCompleted(this, new VerifyDomainMobilizerRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceStatusCompletedEventHandler(object sender, getServiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyNameServerUpdateCompletedEventHandler(object sender, VerifyNameServerUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyNameServerUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyNameServerUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyContactUpdateCompletedEventHandler(object sender, VerifyContactUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyContactUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyContactUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyLocalizedContactUpdateCompletedEventHandler(object sender, VerifyLocalizedContactUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyLocalizedContactUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyLocalizedContactUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyHostUpdateCompletedEventHandler(object sender, VerifyHostUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyHostUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyHostUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainSetLockCompletedEventHandler(object sender, VerifyDomainSetLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainSetLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainSetLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainEmailForwardingUpdateCompletedEventHandler(object sender, VerifyDomainEmailForwardingUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainEmailForwardingUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainEmailForwardingUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainNexusUpdateCompletedEventHandler(object sender, VerifyDomainNexusUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainNexusUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainNexusUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainCEDUpdateCompletedEventHandler(object sender, VerifyDomainCEDUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainCEDUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainCEDUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainCancellationCompletedEventHandler(object sender, VerifyDomainCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainSetAutoRenewCompletedEventHandler(object sender, VerifyDomainSetAutoRenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainSetAutoRenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainSetAutoRenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainRenewalCompletedEventHandler(object sender, VerifyDomainRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainRedemptionCompletedEventHandler(object sender, VerifyDomainRedemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainRedemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainRedemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainCertificationAddCompletedEventHandler(object sender, VerifyDomainCertificationAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainCertificationAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainCertificationAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainPrivacyAddCompletedEventHandler(object sender, VerifyDomainPrivacyAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainPrivacyAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainPrivacyAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainPrivacyRenewCompletedEventHandler(object sender, VerifyDomainPrivacyRenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainPrivacyRenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainPrivacyRenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainPrivacyUpdatePrivateContactsCompletedEventHandler(object sender, VerifyDomainPrivacyUpdatePrivateContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainPrivacyUpdatePrivateContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainPrivacyUpdatePrivateContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainPrivacyUpdateEmailForwardingCompletedEventHandler(object sender, VerifyDomainPrivacyUpdateEmailForwardingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainPrivacyUpdateEmailForwardingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainPrivacyUpdateEmailForwardingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainPrivacySendAuthorizationLetterCompletedEventHandler(object sender, VerifyDomainPrivacySendAuthorizationLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainPrivacySendAuthorizationLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainPrivacySendAuthorizationLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAccountPrivacyUpdateContactCompletedEventHandler(object sender, VerifyAccountPrivacyUpdateContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAccountPrivacyUpdateContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAccountPrivacyUpdateContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAccountPrivacyUpdateEmailPreferencesCompletedEventHandler(object sender, VerifyAccountPrivacyUpdateEmailPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAccountPrivacyUpdateEmailPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAccountPrivacyUpdateEmailPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainPrivacyCancelCompletedEventHandler(object sender, VerifyDomainPrivacyCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainPrivacyCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainPrivacyCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProximaAddCompletedEventHandler(object sender, VerifyDomainProximaAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProximaAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProximaAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProximaRenewCompletedEventHandler(object sender, VerifyDomainProximaRenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProximaRenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProximaRenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainExpirationProtectionAddCompletedEventHandler(object sender, VerifyDomainExpirationProtectionAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainExpirationProtectionAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainExpirationProtectionAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainExpirationProtectionRenewCompletedEventHandler(object sender, VerifyDomainExpirationProtectionRenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainExpirationProtectionRenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainExpirationProtectionRenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainForwardingUpdateCompletedEventHandler(object sender, VerifyDomainForwardingUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainForwardingUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainForwardingUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainForwardingDeleteCompletedEventHandler(object sender, VerifyDomainForwardingDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainForwardingDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainForwardingDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifySubDomainUpdateCompletedEventHandler(object sender, VerifySubDomainUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifySubDomainUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifySubDomainUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifySubDomainDeleteCompletedEventHandler(object sender, VerifySubDomainDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifySubDomainDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifySubDomainDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyCashParkingUpdateCompletedEventHandler(object sender, VerifyCashParkingUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCashParkingUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCashParkingUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAuthCodeSendEmailCompletedEventHandler(object sender, VerifyAuthCodeSendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAuthCodeSendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAuthCodeSendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantChangeInsertCompletedEventHandler(object sender, VerifyRegistrantChangeInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantChangeInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantChangeInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantChangeDeleteCompletedEventHandler(object sender, VerifyRegistrantChangeDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantChangeDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantChangeDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantChangeSendEmailCompletedEventHandler(object sender, VerifyRegistrantChangeSendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantChangeSendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantChangeSendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantChangeValidateCompletedEventHandler(object sender, VerifyRegistrantChangeValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantChangeValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantChangeValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantChangeAcceptCompletedEventHandler(object sender, VerifyRegistrantChangeAcceptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantChangeAcceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantChangeAcceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyRegistrantChangeInstantCompletedEventHandler(object sender, VerifyRegistrantChangeInstantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRegistrantChangeInstantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRegistrantChangeInstantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToSendEmailCompletedEventHandler(object sender, VerifyTransferToSendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToSendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToSendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToAuthInfoChangeCompletedEventHandler(object sender, VerifyTransferToAuthInfoChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToAuthInfoChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToAuthInfoChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToRestartCompletedEventHandler(object sender, VerifyTransferToRestartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToRestartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToRestartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToAckCompletedEventHandler(object sender, VerifyTransferToAckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToAckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToAckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToNackCompletedEventHandler(object sender, VerifyTransferToNackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToNackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToNackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToRetryCompletedEventHandler(object sender, VerifyTransferToRetryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToRetryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToRetryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferToCancelCompletedEventHandler(object sender, VerifyTransferToCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferToCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferToCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferFromAckCompletedEventHandler(object sender, VerifyTransferFromAckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferFromAckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferFromAckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTransferFromNackCompletedEventHandler(object sender, VerifyTransferFromNackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransferFromNackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransferFromNackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainFolderAssignCompletedEventHandler(object sender, VerifyDomainFolderAssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainFolderAssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainFolderAssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainFolderUnassignCompletedEventHandler(object sender, VerifyDomainFolderUnassignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainFolderUnassignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainFolderUnassignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainFolderUnassignAllCompletedEventHandler(object sender, VerifyDomainFolderUnassignAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainFolderUnassignAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainFolderUnassignAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProtectionUpdateCompletedEventHandler(object sender, VerifyDomainProtectionUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProtectionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProtectionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainDownloadListCompletedEventHandler(object sender, VerifyDomainDownloadListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainDownloadListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainDownloadListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyMonitorBackorderSetupCompletedEventHandler(object sender, VerifyMonitorBackorderSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyMonitorBackorderSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyMonitorBackorderSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyMonitorBackorderCancelCompletedEventHandler(object sender, VerifyMonitorBackorderCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyMonitorBackorderCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyMonitorBackorderCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyMonitorUpgradeCompletedEventHandler(object sender, VerifyMonitorUpgradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyMonitorUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyMonitorUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyMonitorEmailUpdateCompletedEventHandler(object sender, VerifyMonitorEmailUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyMonitorEmailUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyMonitorEmailUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyMonitorResendEmailsCompletedEventHandler(object sender, VerifyMonitorResendEmailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyMonitorResendEmailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyMonitorResendEmailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyBackorderContactUpdateCompletedEventHandler(object sender, VerifyBackorderContactUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyBackorderContactUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyBackorderContactUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyBackorderAgreementsUpdateCompletedEventHandler(object sender, VerifyBackorderAgreementsUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyBackorderAgreementsUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyBackorderAgreementsUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyBackorderPrivacyUpdateCompletedEventHandler(object sender, VerifyBackorderPrivacyUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyBackorderPrivacyUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyBackorderPrivacyUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyPremiumDomainSetupCompletedEventHandler(object sender, VerifyPremiumDomainSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyPremiumDomainSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyPremiumDomainSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyPremiumDomainSetAutoRelistCompletedEventHandler(object sender, VerifyPremiumDomainSetAutoRelistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyPremiumDomainSetAutoRelistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyPremiumDomainSetAutoRelistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyPremiumDomainUpdateCompletedEventHandler(object sender, VerifyPremiumDomainUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyPremiumDomainUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyPremiumDomainUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyPremiumDomainRemoveCompletedEventHandler(object sender, VerifyPremiumDomainRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyPremiumDomainRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyPremiumDomainRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTDNAMAuctionSetupCompletedEventHandler(object sender, VerifyTDNAMAuctionSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTDNAMAuctionSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTDNAMAuctionSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyTDNAMAuctionCancelCompletedEventHandler(object sender, VerifyTDNAMAuctionCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTDNAMAuctionCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTDNAMAuctionCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileCreateCompletedEventHandler(object sender, VerifyDomainProfileCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileAssignCompletedEventHandler(object sender, VerifyDomainProfileAssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileAssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileAssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileUnassignCompletedEventHandler(object sender, VerifyDomainProfileUnassignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileUnassignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileUnassignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileUnassignAllCompletedEventHandler(object sender, VerifyDomainProfileUnassignAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileUnassignAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileUnassignAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileAttributeChangeCompletedEventHandler(object sender, VerifyDomainProfileAttributeChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileAttributeChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileAttributeChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileDeleteCompletedEventHandler(object sender, VerifyDomainProfileDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyProfileSetAttributeCompletedEventHandler(object sender, VerifyProfileSetAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyProfileSetAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyProfileSetAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifySendCIRAAccountInfoEmailCompletedEventHandler(object sender, VerifySendCIRAAccountInfoEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifySendCIRAAccountInfoEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifySendCIRAAccountInfoEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainProfileMergeCACompletedEventHandler(object sender, VerifyDomainProfileMergeCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainProfileMergeCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainProfileMergeCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainConsolidateCompletedEventHandler(object sender, VerifyDomainConsolidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainConsolidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainConsolidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAppraisalUpgradeCompletedEventHandler(object sender, VerifyAppraisalUpgradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAppraisalUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAppraisalUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifySmartDomainsAddCompletedEventHandler(object sender, VerifySmartDomainsAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifySmartDomainsAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifySmartDomainsAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifySmartDomainsRenewCompletedEventHandler(object sender, VerifySmartDomainsRenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifySmartDomainsRenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifySmartDomainsRenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainChangeOfRegistrantCACompletedEventHandler(object sender, VerifyDomainChangeOfRegistrantCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainChangeOfRegistrantCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainChangeOfRegistrantCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainMobilizerUpdateCompletedEventHandler(object sender, VerifyDomainMobilizerUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainMobilizerUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainMobilizerUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyDomainMobilizerRemoveCompletedEventHandler(object sender, VerifyDomainMobilizerRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyDomainMobilizerRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyDomainMobilizerRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591