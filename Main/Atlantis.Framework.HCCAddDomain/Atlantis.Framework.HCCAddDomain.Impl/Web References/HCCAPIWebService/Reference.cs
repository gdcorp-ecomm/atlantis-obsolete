//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.HCCAddDomain.Impl.HCCAPIWebService
{


  /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HCCAPIServiceSoap", Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class HCCAPIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenticationSoapHeader authenticationSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback EditVirtualDirectoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpgradeToIISVersion7OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebServiceVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestLoggingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFormMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordVaultEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPasswordVaultEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPasswordVaultEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePasswordVaultEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllPasswordVaultEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePasswordVaultEntriesByApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebStatisticsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableSiteStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableSiteStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetWebStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsingSiteAnalyticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteAnalyticsUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyWebStatisticsCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EMailWebStatisticsPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreeWebStatsUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreeWebStatsLogUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBandwidthStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiskSpaceStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseUsageInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeDatabasePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableBackupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAccessEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableAccessSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAccessSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccessDSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAccessDSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessDSNListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessDSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDatabaseExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallDSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallASPSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveASPSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHostingSupportForDomainChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDNSSupportForDomainChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDomainsByListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDomainsByListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDomainsByListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddApplicationSubdomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get404ErrorBehaviorOperationCompleted;
        
        private System.Threading.SendOrPostCallback Set404ErrorBehaviorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorPageBehaviorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetErrorBehaviorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorLoggingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetErrorLoggingExpirationOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsFTPUserManagementSupportedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPUserLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailablePathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFTPUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsIISAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVirtualDirectoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRecycleAppPoolAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecycleAppPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVirtualDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveVirtualDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrionPagedAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHostingListByProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedHostingListByProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrionPagedHostingListByProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHostingListByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedHostingListByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrionPagedHostingListByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHostingAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountSetupOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainSettingsOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUsernameValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPasswordValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUpWordpressHostingAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUpWebsiteTonightAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUpHostingAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableSSLCertificatesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadApplicationDetailsFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnablePreviewDNSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DNSMakeSiteLiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddOnLanguageOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDotNetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPHPVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddColdFusionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveColdFusionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeHostingAccountPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AreAccountsInSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDatabaseDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDatabaseDescriptionBOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveBackupContentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HCCAPIService() {
            this.Url = global::Atlantis.Framework.HCCAddDomain.Impl.Properties.Settings.Default.Atlantis_Framework_HCCAddDomain_Impl_HCCAPIWebService_HCCAPIService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenticationSoapHeader AuthenticationSoapHeaderValue {
            get {
                return this.authenticationSoapHeaderValueField;
            }
            set {
                this.authenticationSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EditVirtualDirectoriesCompletedEventHandler EditVirtualDirectoriesCompleted;
        
        /// <remarks/>
        public event UpgradeToIISVersion7CompletedEventHandler UpgradeToIISVersion7Completed;
        
        /// <remarks/>
        public event GetWebServiceVersionCompletedEventHandler GetWebServiceVersionCompleted;
        
        /// <remarks/>
        public event TestLoggingCompletedEventHandler TestLoggingCompleted;
        
        /// <remarks/>
        public event SetFormMailCompletedEventHandler SetFormMailCompleted;
        
        /// <remarks/>
        public event GetPasswordVaultEntriesCompletedEventHandler GetPasswordVaultEntriesCompleted;
        
        /// <remarks/>
        public event SetPasswordVaultEntryCompletedEventHandler SetPasswordVaultEntryCompleted;
        
        /// <remarks/>
        public event EditPasswordVaultEntryCompletedEventHandler EditPasswordVaultEntryCompleted;
        
        /// <remarks/>
        public event RemovePasswordVaultEntryCompletedEventHandler RemovePasswordVaultEntryCompleted;
        
        /// <remarks/>
        public event RemoveAllPasswordVaultEntriesCompletedEventHandler RemoveAllPasswordVaultEntriesCompleted;
        
        /// <remarks/>
        public event RemovePasswordVaultEntriesByApplicationCompletedEventHandler RemovePasswordVaultEntriesByApplicationCompleted;
        
        /// <remarks/>
        public event GetWebStatisticsInfoCompletedEventHandler GetWebStatisticsInfoCompleted;
        
        /// <remarks/>
        public event EnableSiteStatisticsCompletedEventHandler EnableSiteStatisticsCompleted;
        
        /// <remarks/>
        public event DisableSiteStatisticsCompletedEventHandler DisableSiteStatisticsCompleted;
        
        /// <remarks/>
        public event ResetWebStatisticsCompletedEventHandler ResetWebStatisticsCompleted;
        
        /// <remarks/>
        public event IsUsingSiteAnalyticsCompletedEventHandler IsUsingSiteAnalyticsCompleted;
        
        /// <remarks/>
        public event GetSiteAnalyticsUrlCompletedEventHandler GetSiteAnalyticsUrlCompleted;
        
        /// <remarks/>
        public event ModifyWebStatisticsCredentialsCompletedEventHandler ModifyWebStatisticsCredentialsCompleted;
        
        /// <remarks/>
        public event GetStatisticsPasswordCompletedEventHandler GetStatisticsPasswordCompleted;
        
        /// <remarks/>
        public event EMailWebStatisticsPasswordCompletedEventHandler EMailWebStatisticsPasswordCompleted;
        
        /// <remarks/>
        public event GetFreeWebStatsUrlCompletedEventHandler GetFreeWebStatsUrlCompleted;
        
        /// <remarks/>
        public event GetFreeWebStatsLogUrlCompletedEventHandler GetFreeWebStatsLogUrlCompleted;
        
        /// <remarks/>
        public event GetBandwidthStatisticsCompletedEventHandler GetBandwidthStatisticsCompleted;
        
        /// <remarks/>
        public event GetDiskSpaceStatisticsCompletedEventHandler GetDiskSpaceStatisticsCompleted;
        
        /// <remarks/>
        public event GetDatabaseUsageInformationCompletedEventHandler GetDatabaseUsageInformationCompleted;
        
        /// <remarks/>
        public event ChangeDatabasePasswordCompletedEventHandler ChangeDatabasePasswordCompleted;
        
        /// <remarks/>
        public event GetAvailableBackupsCompletedEventHandler GetAvailableBackupsCompleted;
        
        /// <remarks/>
        public event IsAccessEnabledCompletedEventHandler IsAccessEnabledCompleted;
        
        /// <remarks/>
        public event EnableAccessSupportCompletedEventHandler EnableAccessSupportCompleted;
        
        /// <remarks/>
        public event RemoveAccessSupportCompletedEventHandler RemoveAccessSupportCompleted;
        
        /// <remarks/>
        public event CreateAccessDSNCompletedEventHandler CreateAccessDSNCompleted;
        
        /// <remarks/>
        public event RemoveAccessDSNCompletedEventHandler RemoveAccessDSNCompleted;
        
        /// <remarks/>
        public event GetAccessDSNListCompletedEventHandler GetAccessDSNListCompleted;
        
        /// <remarks/>
        public event GetAccessDSNCompletedEventHandler GetAccessDSNCompleted;
        
        /// <remarks/>
        public event GetDatabaseListCompletedEventHandler GetDatabaseListCompleted;
        
        /// <remarks/>
        public event GetDatabaseByNameCompletedEventHandler GetDatabaseByNameCompleted;
        
        /// <remarks/>
        public event CreateDatabaseExtendedCompletedEventHandler CreateDatabaseExtendedCompleted;
        
        /// <remarks/>
        public event InstallDSNCompletedEventHandler InstallDSNCompleted;
        
        /// <remarks/>
        public event RemoveDSNCompletedEventHandler RemoveDSNCompleted;
        
        /// <remarks/>
        public event InstallASPSchemaCompletedEventHandler InstallASPSchemaCompleted;
        
        /// <remarks/>
        public event RemoveASPSchemaCompletedEventHandler RemoveASPSchemaCompleted;
        
        /// <remarks/>
        public event GetAccountDomainsCompletedEventHandler GetAccountDomainsCompleted;
        
        /// <remarks/>
        public event GetHostingSupportForDomainChangeCompletedEventHandler GetHostingSupportForDomainChangeCompleted;
        
        /// <remarks/>
        public event GetDNSSupportForDomainChangeCompletedEventHandler GetDNSSupportForDomainChangeCompleted;
        
        /// <remarks/>
        public event ChangeDomainNameCompletedEventHandler ChangeDomainNameCompleted;
        
        /// <remarks/>
        public event AddDomainsByListCompletedEventHandler AddDomainsByListCompleted;
        
        /// <remarks/>
        public event AddDomainCompletedEventHandler AddDomainCompleted;
        
        /// <remarks/>
        public event AddDomainsCompletedEventHandler AddDomainsCompleted;
        
        /// <remarks/>
        public event EditDomainCompletedEventHandler EditDomainCompleted;
        
        /// <remarks/>
        public event EditDomainsCompletedEventHandler EditDomainsCompleted;
        
        /// <remarks/>
        public event EditDomainsByListCompletedEventHandler EditDomainsByListCompleted;
        
        /// <remarks/>
        public event RemoveDomainsByListCompletedEventHandler RemoveDomainsByListCompleted;
        
        /// <remarks/>
        public event RemoveDomainCompletedEventHandler RemoveDomainCompleted;
        
        /// <remarks/>
        public event RemoveDomainsCompletedEventHandler RemoveDomainsCompleted;
        
        /// <remarks/>
        public event AddApplicationSubdomainsCompletedEventHandler AddApplicationSubdomainsCompleted;
        
        /// <remarks/>
        public event Get404ErrorBehaviorCompletedEventHandler Get404ErrorBehaviorCompleted;
        
        /// <remarks/>
        public event Set404ErrorBehaviorCompletedEventHandler Set404ErrorBehaviorCompleted;
        
        /// <remarks/>
        public event GetErrorPageBehaviorCompletedEventHandler GetErrorPageBehaviorCompleted;
        
        /// <remarks/>
        public event SetErrorBehaviorCompletedEventHandler SetErrorBehaviorCompleted;
        
        /// <remarks/>
        public event GetErrorLoggingInfoCompletedEventHandler GetErrorLoggingInfoCompleted;
        
        /// <remarks/>
        public event SetErrorLoggingExpirationCompletedEventHandler SetErrorLoggingExpirationCompleted;
        
        /// <remarks/>
        public event IsFTPUserManagementSupportedCompletedEventHandler IsFTPUserManagementSupportedCompleted;
        
        /// <remarks/>
        public event GetFTPUserLimitCompletedEventHandler GetFTPUserLimitCompleted;
        
        /// <remarks/>
        public event GetAccountInfoCompletedEventHandler GetAccountInfoCompleted;
        
        /// <remarks/>
        public event GetAvailablePathsCompletedEventHandler GetAvailablePathsCompleted;
        
        /// <remarks/>
        public event GetFTPUsersCompletedEventHandler GetFTPUsersCompleted;
        
        /// <remarks/>
        public event AddFTPUserCompletedEventHandler AddFTPUserCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoByAccountCompletedEventHandler UpdateUserInfoByAccountCompleted;
        
        /// <remarks/>
        public event RemoveUserCompletedEventHandler RemoveUserCompleted;
        
        /// <remarks/>
        public event RemoveUserByAccountCompletedEventHandler RemoveUserByAccountCompleted;
        
        /// <remarks/>
        public event GetStatusCodesCompletedEventHandler GetStatusCodesCompleted;
        
        /// <remarks/>
        public event IsIISAvailableCompletedEventHandler IsIISAvailableCompleted;
        
        /// <remarks/>
        public event GetVirtualDirectoriesCompletedEventHandler GetVirtualDirectoriesCompleted;
        
        /// <remarks/>
        public event IsRecycleAppPoolAvailableCompletedEventHandler IsRecycleAppPoolAvailableCompleted;
        
        /// <remarks/>
        public event RecycleAppPoolCompletedEventHandler RecycleAppPoolCompleted;
        
        /// <remarks/>
        public event CreateVirtualDirectoryCompletedEventHandler CreateVirtualDirectoryCompleted;
        
        /// <remarks/>
        public event RemoveVirtualDirectoryCompletedEventHandler RemoveVirtualDirectoryCompleted;
        
        /// <remarks/>
        public event GetProductsCompletedEventHandler GetProductsCompleted;
        
        /// <remarks/>
        public event GetAccountListCompletedEventHandler GetAccountListCompleted;
        
        /// <remarks/>
        public event GetPagedAccountListCompletedEventHandler GetPagedAccountListCompleted;
        
        /// <remarks/>
        public event GetOrionPagedAccountListCompletedEventHandler GetOrionPagedAccountListCompleted;
        
        /// <remarks/>
        public event GetHostingListByProductsCompletedEventHandler GetHostingListByProductsCompleted;
        
        /// <remarks/>
        public event GetPagedHostingListByProductsCompletedEventHandler GetPagedHostingListByProductsCompleted;
        
        /// <remarks/>
        public event GetOrionPagedHostingListByProductsCompletedEventHandler GetOrionPagedHostingListByProductsCompleted;
        
        /// <remarks/>
        public event GetHostingListByProductCompletedEventHandler GetHostingListByProductCompleted;
        
        /// <remarks/>
        public event GetPagedHostingListByProductCompletedEventHandler GetPagedHostingListByProductCompleted;
        
        /// <remarks/>
        public event GetOrionPagedHostingListByProductCompletedEventHandler GetOrionPagedHostingListByProductCompleted;
        
        /// <remarks/>
        public event GetServiceAgreementCompletedEventHandler GetServiceAgreementCompleted;
        
        /// <remarks/>
        public event GetHostingAccountDetailsCompletedEventHandler GetHostingAccountDetailsCompleted;
        
        /// <remarks/>
        public event GetAccountSetupOptionsCompletedEventHandler GetAccountSetupOptionsCompleted;
        
        /// <remarks/>
        public event GetAvailableDomainsCompletedEventHandler GetAvailableDomainsCompleted;
        
        /// <remarks/>
        public event GetDomainSettingsOptionsCompletedEventHandler GetDomainSettingsOptionsCompleted;
        
        /// <remarks/>
        public event IsUsernameValidCompletedEventHandler IsUsernameValidCompleted;
        
        /// <remarks/>
        public event IsPasswordValidCompletedEventHandler IsPasswordValidCompleted;
        
        /// <remarks/>
        public event SetUpWordpressHostingAccountCompletedEventHandler SetUpWordpressHostingAccountCompleted;
        
        /// <remarks/>
        public event SetUpWebsiteTonightAccountCompletedEventHandler SetUpWebsiteTonightAccountCompleted;
        
        /// <remarks/>
        public event SetUpHostingAccountCompletedEventHandler SetUpHostingAccountCompleted;
        
        /// <remarks/>
        public event GetAvailableSSLCertificatesInfoCompletedEventHandler GetAvailableSSLCertificatesInfoCompleted;
        
        /// <remarks/>
        public event LoadApplicationDetailsFieldsCompletedEventHandler LoadApplicationDetailsFieldsCompleted;
        
        /// <remarks/>
        public event GetAccountSummaryCompletedEventHandler GetAccountSummaryCompleted;
        
        /// <remarks/>
        public event EnablePreviewDNSCompletedEventHandler EnablePreviewDNSCompleted;
        
        /// <remarks/>
        public event DNSMakeSiteLiveCompletedEventHandler DNSMakeSiteLiveCompleted;
        
        /// <remarks/>
        public event GetAddOnLanguageOptionsCompletedEventHandler GetAddOnLanguageOptionsCompleted;
        
        /// <remarks/>
        public event SetDotNetVersionCompletedEventHandler SetDotNetVersionCompleted;
        
        /// <remarks/>
        public event SetPHPVersionCompletedEventHandler SetPHPVersionCompleted;
        
        /// <remarks/>
        public event AddColdFusionCompletedEventHandler AddColdFusionCompleted;
        
        /// <remarks/>
        public event RemoveColdFusionCompletedEventHandler RemoveColdFusionCompleted;
        
        /// <remarks/>
        public event ChangeHostingAccountPasswordCompletedEventHandler ChangeHostingAccountPasswordCompleted;
        
        /// <remarks/>
        public event AreAccountsInSyncCompletedEventHandler AreAccountsInSyncCompleted;
        
        /// <remarks/>
        public event RemoveDatabaseCompletedEventHandler RemoveDatabaseCompleted;
        
        /// <remarks/>
        public event BackupDatabaseCompletedEventHandler BackupDatabaseCompleted;
        
        /// <remarks/>
        public event UpdateDatabaseDescriptionCompletedEventHandler UpdateDatabaseDescriptionCompleted;
        
        /// <remarks/>
        public event UpdateDatabaseDescriptionBCompletedEventHandler UpdateDatabaseDescriptionBCompleted;
        
        /// <remarks/>
        public event RestoreDatabaseCompletedEventHandler RestoreDatabaseCompleted;
        
        /// <remarks/>
        public event CreateDatabaseCompletedEventHandler CreateDatabaseCompleted;
        
        /// <remarks/>
        public event GetDatabaseCompletedEventHandler GetDatabaseCompleted;
        
        /// <remarks/>
        public event RemoveBackupContentCompletedEventHandler RemoveBackupContentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EditVirtualDirectorie" +
            "s", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VirtualDirectoriesResponse EditVirtualDirectories(string accountuid, string paths, bool anonymousAccess, bool directoryBrowsing, bool applicationRoot) {
            object[] results = this.Invoke("EditVirtualDirectories", new object[] {
                        accountuid,
                        paths,
                        anonymousAccess,
                        directoryBrowsing,
                        applicationRoot});
            return ((VirtualDirectoriesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EditVirtualDirectoriesAsync(string accountuid, string paths, bool anonymousAccess, bool directoryBrowsing, bool applicationRoot) {
            this.EditVirtualDirectoriesAsync(accountuid, paths, anonymousAccess, directoryBrowsing, applicationRoot, null);
        }
        
        /// <remarks/>
        public void EditVirtualDirectoriesAsync(string accountuid, string paths, bool anonymousAccess, bool directoryBrowsing, bool applicationRoot, object userState) {
            if ((this.EditVirtualDirectoriesOperationCompleted == null)) {
                this.EditVirtualDirectoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditVirtualDirectoriesOperationCompleted);
            }
            this.InvokeAsync("EditVirtualDirectories", new object[] {
                        accountuid,
                        paths,
                        anonymousAccess,
                        directoryBrowsing,
                        applicationRoot}, this.EditVirtualDirectoriesOperationCompleted, userState);
        }
        
        private void OnEditVirtualDirectoriesOperationCompleted(object arg) {
            if ((this.EditVirtualDirectoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditVirtualDirectoriesCompleted(this, new EditVirtualDirectoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/UpgradeToIISVersion7", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IISSettingsResponse UpgradeToIISVersion7(string accountuid) {
            object[] results = this.Invoke("UpgradeToIISVersion7", new object[] {
                        accountuid});
            return ((IISSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpgradeToIISVersion7Async(string accountuid) {
            this.UpgradeToIISVersion7Async(accountuid, null);
        }
        
        /// <remarks/>
        public void UpgradeToIISVersion7Async(string accountuid, object userState) {
            if ((this.UpgradeToIISVersion7OperationCompleted == null)) {
                this.UpgradeToIISVersion7OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpgradeToIISVersion7OperationCompleted);
            }
            this.InvokeAsync("UpgradeToIISVersion7", new object[] {
                        accountuid}, this.UpgradeToIISVersion7OperationCompleted, userState);
        }
        
        private void OnUpgradeToIISVersion7OperationCompleted(object arg) {
            if ((this.UpgradeToIISVersion7Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpgradeToIISVersion7Completed(this, new UpgradeToIISVersion7CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetWebServiceVersion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebServiceVersion() {
            object[] results = this.Invoke("GetWebServiceVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebServiceVersionAsync() {
            this.GetWebServiceVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetWebServiceVersionAsync(object userState) {
            if ((this.GetWebServiceVersionOperationCompleted == null)) {
                this.GetWebServiceVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebServiceVersionOperationCompleted);
            }
            this.InvokeAsync("GetWebServiceVersion", new object[0], this.GetWebServiceVersionOperationCompleted, userState);
        }
        
        private void OnGetWebServiceVersionOperationCompleted(object arg) {
            if ((this.GetWebServiceVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebServiceVersionCompleted(this, new GetWebServiceVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/TestLogging", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestLogging() {
            this.Invoke("TestLogging", new object[0]);
        }
        
        /// <remarks/>
        public void TestLoggingAsync() {
            this.TestLoggingAsync(null);
        }
        
        /// <remarks/>
        public void TestLoggingAsync(object userState) {
            if ((this.TestLoggingOperationCompleted == null)) {
                this.TestLoggingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestLoggingOperationCompleted);
            }
            this.InvokeAsync("TestLogging", new object[0], this.TestLoggingOperationCompleted, userState);
        }
        
        private void OnTestLoggingOperationCompleted(object arg) {
            if ((this.TestLoggingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestLoggingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetFormMail", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse SetFormMail(string accountuid, string email, bool reinstallScriptsDirectory) {
            object[] results = this.Invoke("SetFormMail", new object[] {
                        accountuid,
                        email,
                        reinstallScriptsDirectory});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetFormMailAsync(string accountuid, string email, bool reinstallScriptsDirectory) {
            this.SetFormMailAsync(accountuid, email, reinstallScriptsDirectory, null);
        }
        
        /// <remarks/>
        public void SetFormMailAsync(string accountuid, string email, bool reinstallScriptsDirectory, object userState) {
            if ((this.SetFormMailOperationCompleted == null)) {
                this.SetFormMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFormMailOperationCompleted);
            }
            this.InvokeAsync("SetFormMail", new object[] {
                        accountuid,
                        email,
                        reinstallScriptsDirectory}, this.SetFormMailOperationCompleted, userState);
        }
        
        private void OnSetFormMailOperationCompleted(object arg) {
            if ((this.SetFormMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFormMailCompleted(this, new SetFormMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetPasswordVaultEntri" +
            "es", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PasswordVaultResponse GetPasswordVaultEntries(string shopperid, string hostingPassword, int page, int pageSize) {
            object[] results = this.Invoke("GetPasswordVaultEntries", new object[] {
                        shopperid,
                        hostingPassword,
                        page,
                        pageSize});
            return ((PasswordVaultResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordVaultEntriesAsync(string shopperid, string hostingPassword, int page, int pageSize) {
            this.GetPasswordVaultEntriesAsync(shopperid, hostingPassword, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetPasswordVaultEntriesAsync(string shopperid, string hostingPassword, int page, int pageSize, object userState) {
            if ((this.GetPasswordVaultEntriesOperationCompleted == null)) {
                this.GetPasswordVaultEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordVaultEntriesOperationCompleted);
            }
            this.InvokeAsync("GetPasswordVaultEntries", new object[] {
                        shopperid,
                        hostingPassword,
                        page,
                        pageSize}, this.GetPasswordVaultEntriesOperationCompleted, userState);
        }
        
        private void OnGetPasswordVaultEntriesOperationCompleted(object arg) {
            if ((this.GetPasswordVaultEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordVaultEntriesCompleted(this, new GetPasswordVaultEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetPasswordVaultEntry" +
            "", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse SetPasswordVaultEntry(string shopperid, string hostingPassword, string application, string username, string password) {
            object[] results = this.Invoke("SetPasswordVaultEntry", new object[] {
                        shopperid,
                        hostingPassword,
                        application,
                        username,
                        password});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetPasswordVaultEntryAsync(string shopperid, string hostingPassword, string application, string username, string password) {
            this.SetPasswordVaultEntryAsync(shopperid, hostingPassword, application, username, password, null);
        }
        
        /// <remarks/>
        public void SetPasswordVaultEntryAsync(string shopperid, string hostingPassword, string application, string username, string password, object userState) {
            if ((this.SetPasswordVaultEntryOperationCompleted == null)) {
                this.SetPasswordVaultEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPasswordVaultEntryOperationCompleted);
            }
            this.InvokeAsync("SetPasswordVaultEntry", new object[] {
                        shopperid,
                        hostingPassword,
                        application,
                        username,
                        password}, this.SetPasswordVaultEntryOperationCompleted, userState);
        }
        
        private void OnSetPasswordVaultEntryOperationCompleted(object arg) {
            if ((this.SetPasswordVaultEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPasswordVaultEntryCompleted(this, new SetPasswordVaultEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EditPasswordVaultEntr" +
            "y", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse EditPasswordVaultEntry(string shopperid, string hostingPassword, int entryId, string application, string username, string password) {
            object[] results = this.Invoke("EditPasswordVaultEntry", new object[] {
                        shopperid,
                        hostingPassword,
                        entryId,
                        application,
                        username,
                        password});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EditPasswordVaultEntryAsync(string shopperid, string hostingPassword, int entryId, string application, string username, string password) {
            this.EditPasswordVaultEntryAsync(shopperid, hostingPassword, entryId, application, username, password, null);
        }
        
        /// <remarks/>
        public void EditPasswordVaultEntryAsync(string shopperid, string hostingPassword, int entryId, string application, string username, string password, object userState) {
            if ((this.EditPasswordVaultEntryOperationCompleted == null)) {
                this.EditPasswordVaultEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPasswordVaultEntryOperationCompleted);
            }
            this.InvokeAsync("EditPasswordVaultEntry", new object[] {
                        shopperid,
                        hostingPassword,
                        entryId,
                        application,
                        username,
                        password}, this.EditPasswordVaultEntryOperationCompleted, userState);
        }
        
        private void OnEditPasswordVaultEntryOperationCompleted(object arg) {
            if ((this.EditPasswordVaultEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPasswordVaultEntryCompleted(this, new EditPasswordVaultEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemovePasswordVaultEn" +
            "try", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemovePasswordVaultEntry(string shopperid, string hostingPassword, int entryId) {
            object[] results = this.Invoke("RemovePasswordVaultEntry", new object[] {
                        shopperid,
                        hostingPassword,
                        entryId});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemovePasswordVaultEntryAsync(string shopperid, string hostingPassword, int entryId) {
            this.RemovePasswordVaultEntryAsync(shopperid, hostingPassword, entryId, null);
        }
        
        /// <remarks/>
        public void RemovePasswordVaultEntryAsync(string shopperid, string hostingPassword, int entryId, object userState) {
            if ((this.RemovePasswordVaultEntryOperationCompleted == null)) {
                this.RemovePasswordVaultEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePasswordVaultEntryOperationCompleted);
            }
            this.InvokeAsync("RemovePasswordVaultEntry", new object[] {
                        shopperid,
                        hostingPassword,
                        entryId}, this.RemovePasswordVaultEntryOperationCompleted, userState);
        }
        
        private void OnRemovePasswordVaultEntryOperationCompleted(object arg) {
            if ((this.RemovePasswordVaultEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePasswordVaultEntryCompleted(this, new RemovePasswordVaultEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveAllPasswordVaul" +
            "tEntries", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PasswordVaultResponse RemoveAllPasswordVaultEntries(string shopperid, string hostingPassword) {
            object[] results = this.Invoke("RemoveAllPasswordVaultEntries", new object[] {
                        shopperid,
                        hostingPassword});
            return ((PasswordVaultResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAllPasswordVaultEntriesAsync(string shopperid, string hostingPassword) {
            this.RemoveAllPasswordVaultEntriesAsync(shopperid, hostingPassword, null);
        }
        
        /// <remarks/>
        public void RemoveAllPasswordVaultEntriesAsync(string shopperid, string hostingPassword, object userState) {
            if ((this.RemoveAllPasswordVaultEntriesOperationCompleted == null)) {
                this.RemoveAllPasswordVaultEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllPasswordVaultEntriesOperationCompleted);
            }
            this.InvokeAsync("RemoveAllPasswordVaultEntries", new object[] {
                        shopperid,
                        hostingPassword}, this.RemoveAllPasswordVaultEntriesOperationCompleted, userState);
        }
        
        private void OnRemoveAllPasswordVaultEntriesOperationCompleted(object arg) {
            if ((this.RemoveAllPasswordVaultEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllPasswordVaultEntriesCompleted(this, new RemoveAllPasswordVaultEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemovePasswordVaultEn" +
            "triesByApplication", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PasswordVaultResponse RemovePasswordVaultEntriesByApplication(string shopperid, string hostingPassword, string application) {
            object[] results = this.Invoke("RemovePasswordVaultEntriesByApplication", new object[] {
                        shopperid,
                        hostingPassword,
                        application});
            return ((PasswordVaultResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemovePasswordVaultEntriesByApplicationAsync(string shopperid, string hostingPassword, string application) {
            this.RemovePasswordVaultEntriesByApplicationAsync(shopperid, hostingPassword, application, null);
        }
        
        /// <remarks/>
        public void RemovePasswordVaultEntriesByApplicationAsync(string shopperid, string hostingPassword, string application, object userState) {
            if ((this.RemovePasswordVaultEntriesByApplicationOperationCompleted == null)) {
                this.RemovePasswordVaultEntriesByApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePasswordVaultEntriesByApplicationOperationCompleted);
            }
            this.InvokeAsync("RemovePasswordVaultEntriesByApplication", new object[] {
                        shopperid,
                        hostingPassword,
                        application}, this.RemovePasswordVaultEntriesByApplicationOperationCompleted, userState);
        }
        
        private void OnRemovePasswordVaultEntriesByApplicationOperationCompleted(object arg) {
            if ((this.RemovePasswordVaultEntriesByApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePasswordVaultEntriesByApplicationCompleted(this, new RemovePasswordVaultEntriesByApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetWebStatisticsInfo", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebStatsResponse GetWebStatisticsInfo(string accountuid) {
            object[] results = this.Invoke("GetWebStatisticsInfo", new object[] {
                        accountuid});
            return ((WebStatsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebStatisticsInfoAsync(string accountuid) {
            this.GetWebStatisticsInfoAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetWebStatisticsInfoAsync(string accountuid, object userState) {
            if ((this.GetWebStatisticsInfoOperationCompleted == null)) {
                this.GetWebStatisticsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebStatisticsInfoOperationCompleted);
            }
            this.InvokeAsync("GetWebStatisticsInfo", new object[] {
                        accountuid}, this.GetWebStatisticsInfoOperationCompleted, userState);
        }
        
        private void OnGetWebStatisticsInfoOperationCompleted(object arg) {
            if ((this.GetWebStatisticsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebStatisticsInfoCompleted(this, new GetWebStatisticsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EnableSiteStatistics", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse EnableSiteStatistics(string accountuid) {
            object[] results = this.Invoke("EnableSiteStatistics", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EnableSiteStatisticsAsync(string accountuid) {
            this.EnableSiteStatisticsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void EnableSiteStatisticsAsync(string accountuid, object userState) {
            if ((this.EnableSiteStatisticsOperationCompleted == null)) {
                this.EnableSiteStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableSiteStatisticsOperationCompleted);
            }
            this.InvokeAsync("EnableSiteStatistics", new object[] {
                        accountuid}, this.EnableSiteStatisticsOperationCompleted, userState);
        }
        
        private void OnEnableSiteStatisticsOperationCompleted(object arg) {
            if ((this.EnableSiteStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableSiteStatisticsCompleted(this, new EnableSiteStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/DisableSiteStatistics" +
            "", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse DisableSiteStatistics(string accountuid) {
            object[] results = this.Invoke("DisableSiteStatistics", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DisableSiteStatisticsAsync(string accountuid) {
            this.DisableSiteStatisticsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void DisableSiteStatisticsAsync(string accountuid, object userState) {
            if ((this.DisableSiteStatisticsOperationCompleted == null)) {
                this.DisableSiteStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableSiteStatisticsOperationCompleted);
            }
            this.InvokeAsync("DisableSiteStatistics", new object[] {
                        accountuid}, this.DisableSiteStatisticsOperationCompleted, userState);
        }
        
        private void OnDisableSiteStatisticsOperationCompleted(object arg) {
            if ((this.DisableSiteStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableSiteStatisticsCompleted(this, new DisableSiteStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/ResetWebStatistics", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse ResetWebStatistics(string accountuid) {
            object[] results = this.Invoke("ResetWebStatistics", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ResetWebStatisticsAsync(string accountuid) {
            this.ResetWebStatisticsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void ResetWebStatisticsAsync(string accountuid, object userState) {
            if ((this.ResetWebStatisticsOperationCompleted == null)) {
                this.ResetWebStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetWebStatisticsOperationCompleted);
            }
            this.InvokeAsync("ResetWebStatistics", new object[] {
                        accountuid}, this.ResetWebStatisticsOperationCompleted, userState);
        }
        
        private void OnResetWebStatisticsOperationCompleted(object arg) {
            if ((this.ResetWebStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetWebStatisticsCompleted(this, new ResetWebStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsUsingSiteAnalytics", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse IsUsingSiteAnalytics(string accountuid) {
            object[] results = this.Invoke("IsUsingSiteAnalytics", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsingSiteAnalyticsAsync(string accountuid) {
            this.IsUsingSiteAnalyticsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void IsUsingSiteAnalyticsAsync(string accountuid, object userState) {
            if ((this.IsUsingSiteAnalyticsOperationCompleted == null)) {
                this.IsUsingSiteAnalyticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsingSiteAnalyticsOperationCompleted);
            }
            this.InvokeAsync("IsUsingSiteAnalytics", new object[] {
                        accountuid}, this.IsUsingSiteAnalyticsOperationCompleted, userState);
        }
        
        private void OnIsUsingSiteAnalyticsOperationCompleted(object arg) {
            if ((this.IsUsingSiteAnalyticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsingSiteAnalyticsCompleted(this, new IsUsingSiteAnalyticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetSiteAnalyticsUrl", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse GetSiteAnalyticsUrl(string accountuid) {
            object[] results = this.Invoke("GetSiteAnalyticsUrl", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAnalyticsUrlAsync(string accountuid) {
            this.GetSiteAnalyticsUrlAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetSiteAnalyticsUrlAsync(string accountuid, object userState) {
            if ((this.GetSiteAnalyticsUrlOperationCompleted == null)) {
                this.GetSiteAnalyticsUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteAnalyticsUrlOperationCompleted);
            }
            this.InvokeAsync("GetSiteAnalyticsUrl", new object[] {
                        accountuid}, this.GetSiteAnalyticsUrlOperationCompleted, userState);
        }
        
        private void OnGetSiteAnalyticsUrlOperationCompleted(object arg) {
            if ((this.GetSiteAnalyticsUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteAnalyticsUrlCompleted(this, new GetSiteAnalyticsUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/ModifyWebStatisticsCr" +
            "edentials", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse ModifyWebStatisticsCredentials(string accountuid, string username, string password) {
            object[] results = this.Invoke("ModifyWebStatisticsCredentials", new object[] {
                        accountuid,
                        username,
                        password});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyWebStatisticsCredentialsAsync(string accountuid, string username, string password) {
            this.ModifyWebStatisticsCredentialsAsync(accountuid, username, password, null);
        }
        
        /// <remarks/>
        public void ModifyWebStatisticsCredentialsAsync(string accountuid, string username, string password, object userState) {
            if ((this.ModifyWebStatisticsCredentialsOperationCompleted == null)) {
                this.ModifyWebStatisticsCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyWebStatisticsCredentialsOperationCompleted);
            }
            this.InvokeAsync("ModifyWebStatisticsCredentials", new object[] {
                        accountuid,
                        username,
                        password}, this.ModifyWebStatisticsCredentialsOperationCompleted, userState);
        }
        
        private void OnModifyWebStatisticsCredentialsOperationCompleted(object arg) {
            if ((this.ModifyWebStatisticsCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyWebStatisticsCredentialsCompleted(this, new ModifyWebStatisticsCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetStatisticsPassword" +
            "", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse GetStatisticsPassword(string accountuid) {
            object[] results = this.Invoke("GetStatisticsPassword", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsPasswordAsync(string accountuid) {
            this.GetStatisticsPasswordAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetStatisticsPasswordAsync(string accountuid, object userState) {
            if ((this.GetStatisticsPasswordOperationCompleted == null)) {
                this.GetStatisticsPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsPasswordOperationCompleted);
            }
            this.InvokeAsync("GetStatisticsPassword", new object[] {
                        accountuid}, this.GetStatisticsPasswordOperationCompleted, userState);
        }
        
        private void OnGetStatisticsPasswordOperationCompleted(object arg) {
            if ((this.GetStatisticsPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsPasswordCompleted(this, new GetStatisticsPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EMailWebStatisticsPas" +
            "sword", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse EMailWebStatisticsPassword(string accountuid) {
            object[] results = this.Invoke("EMailWebStatisticsPassword", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EMailWebStatisticsPasswordAsync(string accountuid) {
            this.EMailWebStatisticsPasswordAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void EMailWebStatisticsPasswordAsync(string accountuid, object userState) {
            if ((this.EMailWebStatisticsPasswordOperationCompleted == null)) {
                this.EMailWebStatisticsPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEMailWebStatisticsPasswordOperationCompleted);
            }
            this.InvokeAsync("EMailWebStatisticsPassword", new object[] {
                        accountuid}, this.EMailWebStatisticsPasswordOperationCompleted, userState);
        }
        
        private void OnEMailWebStatisticsPasswordOperationCompleted(object arg) {
            if ((this.EMailWebStatisticsPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EMailWebStatisticsPasswordCompleted(this, new EMailWebStatisticsPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetFreeWebStatsUrl", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse GetFreeWebStatsUrl(string accountuid) {
            object[] results = this.Invoke("GetFreeWebStatsUrl", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreeWebStatsUrlAsync(string accountuid) {
            this.GetFreeWebStatsUrlAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetFreeWebStatsUrlAsync(string accountuid, object userState) {
            if ((this.GetFreeWebStatsUrlOperationCompleted == null)) {
                this.GetFreeWebStatsUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreeWebStatsUrlOperationCompleted);
            }
            this.InvokeAsync("GetFreeWebStatsUrl", new object[] {
                        accountuid}, this.GetFreeWebStatsUrlOperationCompleted, userState);
        }
        
        private void OnGetFreeWebStatsUrlOperationCompleted(object arg) {
            if ((this.GetFreeWebStatsUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreeWebStatsUrlCompleted(this, new GetFreeWebStatsUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetFreeWebStatsLogUrl" +
            "", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse GetFreeWebStatsLogUrl(string accountuid) {
            object[] results = this.Invoke("GetFreeWebStatsLogUrl", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreeWebStatsLogUrlAsync(string accountuid) {
            this.GetFreeWebStatsLogUrlAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetFreeWebStatsLogUrlAsync(string accountuid, object userState) {
            if ((this.GetFreeWebStatsLogUrlOperationCompleted == null)) {
                this.GetFreeWebStatsLogUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreeWebStatsLogUrlOperationCompleted);
            }
            this.InvokeAsync("GetFreeWebStatsLogUrl", new object[] {
                        accountuid}, this.GetFreeWebStatsLogUrlOperationCompleted, userState);
        }
        
        private void OnGetFreeWebStatsLogUrlOperationCompleted(object arg) {
            if ((this.GetFreeWebStatsLogUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreeWebStatsLogUrlCompleted(this, new GetFreeWebStatsLogUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetBandwidthStatistic" +
            "s", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatisticsResponse GetBandwidthStatistics(string accountuid, BillingCycle cycle) {
            object[] results = this.Invoke("GetBandwidthStatistics", new object[] {
                        accountuid,
                        cycle});
            return ((StatisticsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetBandwidthStatisticsAsync(string accountuid, BillingCycle cycle) {
            this.GetBandwidthStatisticsAsync(accountuid, cycle, null);
        }
        
        /// <remarks/>
        public void GetBandwidthStatisticsAsync(string accountuid, BillingCycle cycle, object userState) {
            if ((this.GetBandwidthStatisticsOperationCompleted == null)) {
                this.GetBandwidthStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBandwidthStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetBandwidthStatistics", new object[] {
                        accountuid,
                        cycle}, this.GetBandwidthStatisticsOperationCompleted, userState);
        }
        
        private void OnGetBandwidthStatisticsOperationCompleted(object arg) {
            if ((this.GetBandwidthStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBandwidthStatisticsCompleted(this, new GetBandwidthStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDiskSpaceStatistic" +
            "s", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatisticsResponse GetDiskSpaceStatistics(string accountuid, BillingCycle cycle) {
            object[] results = this.Invoke("GetDiskSpaceStatistics", new object[] {
                        accountuid,
                        cycle});
            return ((StatisticsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiskSpaceStatisticsAsync(string accountuid, BillingCycle cycle) {
            this.GetDiskSpaceStatisticsAsync(accountuid, cycle, null);
        }
        
        /// <remarks/>
        public void GetDiskSpaceStatisticsAsync(string accountuid, BillingCycle cycle, object userState) {
            if ((this.GetDiskSpaceStatisticsOperationCompleted == null)) {
                this.GetDiskSpaceStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiskSpaceStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetDiskSpaceStatistics", new object[] {
                        accountuid,
                        cycle}, this.GetDiskSpaceStatisticsOperationCompleted, userState);
        }
        
        private void OnGetDiskSpaceStatisticsOperationCompleted(object arg) {
            if ((this.GetDiskSpaceStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiskSpaceStatisticsCompleted(this, new GetDiskSpaceStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDatabaseUsageInfor" +
            "mation", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseUsage GetDatabaseUsageInformation(string hostingAccountUID, string databaseType) {
            object[] results = this.Invoke("GetDatabaseUsageInformation", new object[] {
                        hostingAccountUID,
                        databaseType});
            return ((DatabaseUsage)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseUsageInformationAsync(string hostingAccountUID, string databaseType) {
            this.GetDatabaseUsageInformationAsync(hostingAccountUID, databaseType, null);
        }
        
        /// <remarks/>
        public void GetDatabaseUsageInformationAsync(string hostingAccountUID, string databaseType, object userState) {
            if ((this.GetDatabaseUsageInformationOperationCompleted == null)) {
                this.GetDatabaseUsageInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseUsageInformationOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseUsageInformation", new object[] {
                        hostingAccountUID,
                        databaseType}, this.GetDatabaseUsageInformationOperationCompleted, userState);
        }
        
        private void OnGetDatabaseUsageInformationOperationCompleted(object arg) {
            if ((this.GetDatabaseUsageInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseUsageInformationCompleted(this, new GetDatabaseUsageInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/ChangeDatabasePasswor" +
            "d", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse ChangeDatabasePassword(string hostingAccountUID, string databaseName, string databaseType, string databasePassword, bool readOnlyUser) {
            object[] results = this.Invoke("ChangeDatabasePassword", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType,
                        databasePassword,
                        readOnlyUser});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeDatabasePasswordAsync(string hostingAccountUID, string databaseName, string databaseType, string databasePassword, bool readOnlyUser) {
            this.ChangeDatabasePasswordAsync(hostingAccountUID, databaseName, databaseType, databasePassword, readOnlyUser, null);
        }
        
        /// <remarks/>
        public void ChangeDatabasePasswordAsync(string hostingAccountUID, string databaseName, string databaseType, string databasePassword, bool readOnlyUser, object userState) {
            if ((this.ChangeDatabasePasswordOperationCompleted == null)) {
                this.ChangeDatabasePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeDatabasePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeDatabasePassword", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType,
                        databasePassword,
                        readOnlyUser}, this.ChangeDatabasePasswordOperationCompleted, userState);
        }
        
        private void OnChangeDatabasePasswordOperationCompleted(object arg) {
            if ((this.ChangeDatabasePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeDatabasePasswordCompleted(this, new ChangeDatabasePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAvailableBackups", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BackupsResponse GetAvailableBackups(string hostingAccountUID, string databaseName, string databaseType) {
            object[] results = this.Invoke("GetAvailableBackups", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType});
            return ((BackupsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableBackupsAsync(string hostingAccountUID, string databaseName, string databaseType) {
            this.GetAvailableBackupsAsync(hostingAccountUID, databaseName, databaseType, null);
        }
        
        /// <remarks/>
        public void GetAvailableBackupsAsync(string hostingAccountUID, string databaseName, string databaseType, object userState) {
            if ((this.GetAvailableBackupsOperationCompleted == null)) {
                this.GetAvailableBackupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableBackupsOperationCompleted);
            }
            this.InvokeAsync("GetAvailableBackups", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType}, this.GetAvailableBackupsOperationCompleted, userState);
        }
        
        private void OnGetAvailableBackupsOperationCompleted(object arg) {
            if ((this.GetAvailableBackupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableBackupsCompleted(this, new GetAvailableBackupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsAccessEnabled", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessEnabledResponse IsAccessEnabled(string hostingAccountUID) {
            object[] results = this.Invoke("IsAccessEnabled", new object[] {
                        hostingAccountUID});
            return ((AccessEnabledResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsAccessEnabledAsync(string hostingAccountUID) {
            this.IsAccessEnabledAsync(hostingAccountUID, null);
        }
        
        /// <remarks/>
        public void IsAccessEnabledAsync(string hostingAccountUID, object userState) {
            if ((this.IsAccessEnabledOperationCompleted == null)) {
                this.IsAccessEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAccessEnabledOperationCompleted);
            }
            this.InvokeAsync("IsAccessEnabled", new object[] {
                        hostingAccountUID}, this.IsAccessEnabledOperationCompleted, userState);
        }
        
        private void OnIsAccessEnabledOperationCompleted(object arg) {
            if ((this.IsAccessEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAccessEnabledCompleted(this, new IsAccessEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EnableAccessSupport", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse EnableAccessSupport(string hostingAccountUID) {
            object[] results = this.Invoke("EnableAccessSupport", new object[] {
                        hostingAccountUID});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EnableAccessSupportAsync(string hostingAccountUID) {
            this.EnableAccessSupportAsync(hostingAccountUID, null);
        }
        
        /// <remarks/>
        public void EnableAccessSupportAsync(string hostingAccountUID, object userState) {
            if ((this.EnableAccessSupportOperationCompleted == null)) {
                this.EnableAccessSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableAccessSupportOperationCompleted);
            }
            this.InvokeAsync("EnableAccessSupport", new object[] {
                        hostingAccountUID}, this.EnableAccessSupportOperationCompleted, userState);
        }
        
        private void OnEnableAccessSupportOperationCompleted(object arg) {
            if ((this.EnableAccessSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableAccessSupportCompleted(this, new EnableAccessSupportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveAccessSupport", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveAccessSupport(string hostingAccountUID) {
            object[] results = this.Invoke("RemoveAccessSupport", new object[] {
                        hostingAccountUID});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAccessSupportAsync(string hostingAccountUID) {
            this.RemoveAccessSupportAsync(hostingAccountUID, null);
        }
        
        /// <remarks/>
        public void RemoveAccessSupportAsync(string hostingAccountUID, object userState) {
            if ((this.RemoveAccessSupportOperationCompleted == null)) {
                this.RemoveAccessSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAccessSupportOperationCompleted);
            }
            this.InvokeAsync("RemoveAccessSupport", new object[] {
                        hostingAccountUID}, this.RemoveAccessSupportOperationCompleted, userState);
        }
        
        private void OnRemoveAccessSupportOperationCompleted(object arg) {
            if ((this.RemoveAccessSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAccessSupportCompleted(this, new RemoveAccessSupportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/CreateAccessDSN", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse CreateAccessDSN(string hostingAccountUID, string databaseName, string userName, string password, bool coldFusion) {
            object[] results = this.Invoke("CreateAccessDSN", new object[] {
                        hostingAccountUID,
                        databaseName,
                        userName,
                        password,
                        coldFusion});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccessDSNAsync(string hostingAccountUID, string databaseName, string userName, string password, bool coldFusion) {
            this.CreateAccessDSNAsync(hostingAccountUID, databaseName, userName, password, coldFusion, null);
        }
        
        /// <remarks/>
        public void CreateAccessDSNAsync(string hostingAccountUID, string databaseName, string userName, string password, bool coldFusion, object userState) {
            if ((this.CreateAccessDSNOperationCompleted == null)) {
                this.CreateAccessDSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccessDSNOperationCompleted);
            }
            this.InvokeAsync("CreateAccessDSN", new object[] {
                        hostingAccountUID,
                        databaseName,
                        userName,
                        password,
                        coldFusion}, this.CreateAccessDSNOperationCompleted, userState);
        }
        
        private void OnCreateAccessDSNOperationCompleted(object arg) {
            if ((this.CreateAccessDSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccessDSNCompleted(this, new CreateAccessDSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveAccessDSN", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveAccessDSN(string hostingAccountUID, string filename) {
            object[] results = this.Invoke("RemoveAccessDSN", new object[] {
                        hostingAccountUID,
                        filename});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAccessDSNAsync(string hostingAccountUID, string filename) {
            this.RemoveAccessDSNAsync(hostingAccountUID, filename, null);
        }
        
        /// <remarks/>
        public void RemoveAccessDSNAsync(string hostingAccountUID, string filename, object userState) {
            if ((this.RemoveAccessDSNOperationCompleted == null)) {
                this.RemoveAccessDSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAccessDSNOperationCompleted);
            }
            this.InvokeAsync("RemoveAccessDSN", new object[] {
                        hostingAccountUID,
                        filename}, this.RemoveAccessDSNOperationCompleted, userState);
        }
        
        private void OnRemoveAccessDSNOperationCompleted(object arg) {
            if ((this.RemoveAccessDSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAccessDSNCompleted(this, new RemoveAccessDSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccessDSNList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessDSNsResponse GetAccessDSNList(string hostingAccountUID) {
            object[] results = this.Invoke("GetAccessDSNList", new object[] {
                        hostingAccountUID});
            return ((AccessDSNsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessDSNListAsync(string hostingAccountUID) {
            this.GetAccessDSNListAsync(hostingAccountUID, null);
        }
        
        /// <remarks/>
        public void GetAccessDSNListAsync(string hostingAccountUID, object userState) {
            if ((this.GetAccessDSNListOperationCompleted == null)) {
                this.GetAccessDSNListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessDSNListOperationCompleted);
            }
            this.InvokeAsync("GetAccessDSNList", new object[] {
                        hostingAccountUID}, this.GetAccessDSNListOperationCompleted, userState);
        }
        
        private void OnGetAccessDSNListOperationCompleted(object arg) {
            if ((this.GetAccessDSNListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessDSNListCompleted(this, new GetAccessDSNListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccessDSN", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessDSNResponse GetAccessDSN(string hostingAccountUID, string filename) {
            object[] results = this.Invoke("GetAccessDSN", new object[] {
                        hostingAccountUID,
                        filename});
            return ((AccessDSNResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessDSNAsync(string hostingAccountUID, string filename) {
            this.GetAccessDSNAsync(hostingAccountUID, filename, null);
        }
        
        /// <remarks/>
        public void GetAccessDSNAsync(string hostingAccountUID, string filename, object userState) {
            if ((this.GetAccessDSNOperationCompleted == null)) {
                this.GetAccessDSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessDSNOperationCompleted);
            }
            this.InvokeAsync("GetAccessDSN", new object[] {
                        hostingAccountUID,
                        filename}, this.GetAccessDSNOperationCompleted, userState);
        }
        
        private void OnGetAccessDSNOperationCompleted(object arg) {
            if ((this.GetAccessDSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessDSNCompleted(this, new GetAccessDSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDatabaseList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabasesResponse GetDatabaseList(string hostingAccountUID, string databaseType) {
            object[] results = this.Invoke("GetDatabaseList", new object[] {
                        hostingAccountUID,
                        databaseType});
            return ((DatabasesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseListAsync(string hostingAccountUID, string databaseType) {
            this.GetDatabaseListAsync(hostingAccountUID, databaseType, null);
        }
        
        /// <remarks/>
        public void GetDatabaseListAsync(string hostingAccountUID, string databaseType, object userState) {
            if ((this.GetDatabaseListOperationCompleted == null)) {
                this.GetDatabaseListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseListOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseList", new object[] {
                        hostingAccountUID,
                        databaseType}, this.GetDatabaseListOperationCompleted, userState);
        }
        
        private void OnGetDatabaseListOperationCompleted(object arg) {
            if ((this.GetDatabaseListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseListCompleted(this, new GetDatabaseListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDatabaseByName", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseResponse GetDatabaseByName(string hostingAccountUID, string databaseName, string databaseType) {
            object[] results = this.Invoke("GetDatabaseByName", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType});
            return ((DatabaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseByNameAsync(string hostingAccountUID, string databaseName, string databaseType) {
            this.GetDatabaseByNameAsync(hostingAccountUID, databaseName, databaseType, null);
        }
        
        /// <remarks/>
        public void GetDatabaseByNameAsync(string hostingAccountUID, string databaseName, string databaseType, object userState) {
            if ((this.GetDatabaseByNameOperationCompleted == null)) {
                this.GetDatabaseByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseByNameOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseByName", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType}, this.GetDatabaseByNameOperationCompleted, userState);
        }
        
        private void OnGetDatabaseByNameOperationCompleted(object arg) {
            if ((this.GetDatabaseByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseByNameCompleted(this, new GetDatabaseByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/CreateDatabaseExtende" +
            "d", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse CreateDatabaseExtended(string hostingAccountUID, CreateDatabase database, ServiceLocation callbackServiceLocation) {
            object[] results = this.Invoke("CreateDatabaseExtended", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDatabaseExtendedAsync(string hostingAccountUID, CreateDatabase database, ServiceLocation callbackServiceLocation) {
            this.CreateDatabaseExtendedAsync(hostingAccountUID, database, callbackServiceLocation, null);
        }
        
        /// <remarks/>
        public void CreateDatabaseExtendedAsync(string hostingAccountUID, CreateDatabase database, ServiceLocation callbackServiceLocation, object userState) {
            if ((this.CreateDatabaseExtendedOperationCompleted == null)) {
                this.CreateDatabaseExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDatabaseExtendedOperationCompleted);
            }
            this.InvokeAsync("CreateDatabaseExtended", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation}, this.CreateDatabaseExtendedOperationCompleted, userState);
        }
        
        private void OnCreateDatabaseExtendedOperationCompleted(object arg) {
            if ((this.CreateDatabaseExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDatabaseExtendedCompleted(this, new CreateDatabaseExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/InstallDSN", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse InstallDSN(string hostingAccountUID, string databaseName, string databaseType, bool coldFusion) {
            object[] results = this.Invoke("InstallDSN", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType,
                        coldFusion});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InstallDSNAsync(string hostingAccountUID, string databaseName, string databaseType, bool coldFusion) {
            this.InstallDSNAsync(hostingAccountUID, databaseName, databaseType, coldFusion, null);
        }
        
        /// <remarks/>
        public void InstallDSNAsync(string hostingAccountUID, string databaseName, string databaseType, bool coldFusion, object userState) {
            if ((this.InstallDSNOperationCompleted == null)) {
                this.InstallDSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallDSNOperationCompleted);
            }
            this.InvokeAsync("InstallDSN", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType,
                        coldFusion}, this.InstallDSNOperationCompleted, userState);
        }
        
        private void OnInstallDSNOperationCompleted(object arg) {
            if ((this.InstallDSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallDSNCompleted(this, new InstallDSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveDSN", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveDSN(string hostingAccountUID, string databaseName, string databaseType, bool coldFusion) {
            object[] results = this.Invoke("RemoveDSN", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType,
                        coldFusion});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDSNAsync(string hostingAccountUID, string databaseName, string databaseType, bool coldFusion) {
            this.RemoveDSNAsync(hostingAccountUID, databaseName, databaseType, coldFusion, null);
        }
        
        /// <remarks/>
        public void RemoveDSNAsync(string hostingAccountUID, string databaseName, string databaseType, bool coldFusion, object userState) {
            if ((this.RemoveDSNOperationCompleted == null)) {
                this.RemoveDSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDSNOperationCompleted);
            }
            this.InvokeAsync("RemoveDSN", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType,
                        coldFusion}, this.RemoveDSNOperationCompleted, userState);
        }
        
        private void OnRemoveDSNOperationCompleted(object arg) {
            if ((this.RemoveDSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDSNCompleted(this, new RemoveDSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/InstallASPSchema", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse InstallASPSchema(string hostingAccountUID, string databaseName, string databaseType) {
            object[] results = this.Invoke("InstallASPSchema", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InstallASPSchemaAsync(string hostingAccountUID, string databaseName, string databaseType) {
            this.InstallASPSchemaAsync(hostingAccountUID, databaseName, databaseType, null);
        }
        
        /// <remarks/>
        public void InstallASPSchemaAsync(string hostingAccountUID, string databaseName, string databaseType, object userState) {
            if ((this.InstallASPSchemaOperationCompleted == null)) {
                this.InstallASPSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallASPSchemaOperationCompleted);
            }
            this.InvokeAsync("InstallASPSchema", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType}, this.InstallASPSchemaOperationCompleted, userState);
        }
        
        private void OnInstallASPSchemaOperationCompleted(object arg) {
            if ((this.InstallASPSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallASPSchemaCompleted(this, new InstallASPSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveASPSchema", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveASPSchema(string hostingAccountUID, string databaseName, string databaseType) {
            object[] results = this.Invoke("RemoveASPSchema", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveASPSchemaAsync(string hostingAccountUID, string databaseName, string databaseType) {
            this.RemoveASPSchemaAsync(hostingAccountUID, databaseName, databaseType, null);
        }
        
        /// <remarks/>
        public void RemoveASPSchemaAsync(string hostingAccountUID, string databaseName, string databaseType, object userState) {
            if ((this.RemoveASPSchemaOperationCompleted == null)) {
                this.RemoveASPSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveASPSchemaOperationCompleted);
            }
            this.InvokeAsync("RemoveASPSchema", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseType}, this.RemoveASPSchemaOperationCompleted, userState);
        }
        
        private void OnRemoveASPSchemaOperationCompleted(object arg) {
            if ((this.RemoveASPSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveASPSchemaCompleted(this, new RemoveASPSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccountDomains", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse GetAccountDomains(string accountuid) {
            object[] results = this.Invoke("GetAccountDomains", new object[] {
                        accountuid});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDomainsAsync(string accountuid) {
            this.GetAccountDomainsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetAccountDomainsAsync(string accountuid, object userState) {
            if ((this.GetAccountDomainsOperationCompleted == null)) {
                this.GetAccountDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDomainsOperationCompleted);
            }
            this.InvokeAsync("GetAccountDomains", new object[] {
                        accountuid}, this.GetAccountDomainsOperationCompleted, userState);
        }
        
        private void OnGetAccountDomainsOperationCompleted(object arg) {
            if ((this.GetAccountDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDomainsCompleted(this, new GetAccountDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetHostingSupportForD" +
            "omainChange", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse GetHostingSupportForDomainChange(string accountuid) {
            object[] results = this.Invoke("GetHostingSupportForDomainChange", new object[] {
                        accountuid});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetHostingSupportForDomainChangeAsync(string accountuid) {
            this.GetHostingSupportForDomainChangeAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetHostingSupportForDomainChangeAsync(string accountuid, object userState) {
            if ((this.GetHostingSupportForDomainChangeOperationCompleted == null)) {
                this.GetHostingSupportForDomainChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHostingSupportForDomainChangeOperationCompleted);
            }
            this.InvokeAsync("GetHostingSupportForDomainChange", new object[] {
                        accountuid}, this.GetHostingSupportForDomainChangeOperationCompleted, userState);
        }
        
        private void OnGetHostingSupportForDomainChangeOperationCompleted(object arg) {
            if ((this.GetHostingSupportForDomainChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHostingSupportForDomainChangeCompleted(this, new GetHostingSupportForDomainChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDNSSupportForDomai" +
            "nChange", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse GetDNSSupportForDomainChange(string accountuid, string domainname) {
            object[] results = this.Invoke("GetDNSSupportForDomainChange", new object[] {
                        accountuid,
                        domainname});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDNSSupportForDomainChangeAsync(string accountuid, string domainname) {
            this.GetDNSSupportForDomainChangeAsync(accountuid, domainname, null);
        }
        
        /// <remarks/>
        public void GetDNSSupportForDomainChangeAsync(string accountuid, string domainname, object userState) {
            if ((this.GetDNSSupportForDomainChangeOperationCompleted == null)) {
                this.GetDNSSupportForDomainChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDNSSupportForDomainChangeOperationCompleted);
            }
            this.InvokeAsync("GetDNSSupportForDomainChange", new object[] {
                        accountuid,
                        domainname}, this.GetDNSSupportForDomainChangeOperationCompleted, userState);
        }
        
        private void OnGetDNSSupportForDomainChangeOperationCompleted(object arg) {
            if ((this.GetDNSSupportForDomainChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDNSSupportForDomainChangeCompleted(this, new GetDNSSupportForDomainChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/ChangeDomainName", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse ChangeDomainName(string accountuid, string domainuid, string newDomainName, bool previewDNS, string newDomainPath) {
            object[] results = this.Invoke("ChangeDomainName", new object[] {
                        accountuid,
                        domainuid,
                        newDomainName,
                        previewDNS,
                        newDomainPath});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeDomainNameAsync(string accountuid, string domainuid, string newDomainName, bool previewDNS, string newDomainPath) {
            this.ChangeDomainNameAsync(accountuid, domainuid, newDomainName, previewDNS, newDomainPath, null);
        }
        
        /// <remarks/>
        public void ChangeDomainNameAsync(string accountuid, string domainuid, string newDomainName, bool previewDNS, string newDomainPath, object userState) {
            if ((this.ChangeDomainNameOperationCompleted == null)) {
                this.ChangeDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeDomainNameOperationCompleted);
            }
            this.InvokeAsync("ChangeDomainName", new object[] {
                        accountuid,
                        domainuid,
                        newDomainName,
                        previewDNS,
                        newDomainPath}, this.ChangeDomainNameOperationCompleted, userState);
        }
        
        private void OnChangeDomainNameOperationCompleted(object arg) {
            if ((this.ChangeDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeDomainNameCompleted(this, new ChangeDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AddDomainsByList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse AddDomainsByList(string accountuid, DomainType domainType, string parentDomainName, string[] domainsList, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName) {
            object[] results = this.Invoke("AddDomainsByList", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList,
                        directory,
                        enablePreviewDNS,
                        pathIsSubdirectoryName});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddDomainsByListAsync(string accountuid, DomainType domainType, string parentDomainName, string[] domainsList, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName) {
            this.AddDomainsByListAsync(accountuid, domainType, parentDomainName, domainsList, directory, enablePreviewDNS, pathIsSubdirectoryName, null);
        }
        
        /// <remarks/>
        public void AddDomainsByListAsync(string accountuid, DomainType domainType, string parentDomainName, string[] domainsList, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName, object userState) {
            if ((this.AddDomainsByListOperationCompleted == null)) {
                this.AddDomainsByListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDomainsByListOperationCompleted);
            }
            this.InvokeAsync("AddDomainsByList", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList,
                        directory,
                        enablePreviewDNS,
                        pathIsSubdirectoryName}, this.AddDomainsByListOperationCompleted, userState);
        }
        
        private void OnAddDomainsByListOperationCompleted(object arg) {
            if ((this.AddDomainsByListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDomainsByListCompleted(this, new AddDomainsByListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AddDomain", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse AddDomain(string accountuid, DomainType domainType, string parentDomainName, string domainToAdd, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName) {
            object[] results = this.Invoke("AddDomain", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainToAdd,
                        directory,
                        enablePreviewDNS,
                        pathIsSubdirectoryName});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddDomainAsync(string accountuid, DomainType domainType, string parentDomainName, string domainToAdd, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName) {
            this.AddDomainAsync(accountuid, domainType, parentDomainName, domainToAdd, directory, enablePreviewDNS, pathIsSubdirectoryName, null);
        }
        
        /// <remarks/>
        public void AddDomainAsync(string accountuid, DomainType domainType, string parentDomainName, string domainToAdd, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName, object userState) {
            if ((this.AddDomainOperationCompleted == null)) {
                this.AddDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDomainOperationCompleted);
            }
            this.InvokeAsync("AddDomain", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainToAdd,
                        directory,
                        enablePreviewDNS,
                        pathIsSubdirectoryName}, this.AddDomainOperationCompleted, userState);
        }
        
        private void OnAddDomainOperationCompleted(object arg) {
            if ((this.AddDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDomainCompleted(this, new AddDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AddDomains", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse AddDomains(string accountuid, DomainType domainType, string parentDomainName, string domainsList, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName) {
            object[] results = this.Invoke("AddDomains", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList,
                        directory,
                        enablePreviewDNS,
                        pathIsSubdirectoryName});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddDomainsAsync(string accountuid, DomainType domainType, string parentDomainName, string domainsList, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName) {
            this.AddDomainsAsync(accountuid, domainType, parentDomainName, domainsList, directory, enablePreviewDNS, pathIsSubdirectoryName, null);
        }
        
        /// <remarks/>
        public void AddDomainsAsync(string accountuid, DomainType domainType, string parentDomainName, string domainsList, string directory, bool enablePreviewDNS, bool pathIsSubdirectoryName, object userState) {
            if ((this.AddDomainsOperationCompleted == null)) {
                this.AddDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDomainsOperationCompleted);
            }
            this.InvokeAsync("AddDomains", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList,
                        directory,
                        enablePreviewDNS,
                        pathIsSubdirectoryName}, this.AddDomainsOperationCompleted, userState);
        }
        
        private void OnAddDomainsOperationCompleted(object arg) {
            if ((this.AddDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDomainsCompleted(this, new AddDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EditDomain", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse EditDomain(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string domainToEdit, string newPath) {
            object[] results = this.Invoke("EditDomain", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        newSubdomainName,
                        domainToEdit,
                        newPath});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EditDomainAsync(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string domainToEdit, string newPath) {
            this.EditDomainAsync(accountuid, domainType, parentDomainName, newSubdomainName, domainToEdit, newPath, null);
        }
        
        /// <remarks/>
        public void EditDomainAsync(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string domainToEdit, string newPath, object userState) {
            if ((this.EditDomainOperationCompleted == null)) {
                this.EditDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDomainOperationCompleted);
            }
            this.InvokeAsync("EditDomain", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        newSubdomainName,
                        domainToEdit,
                        newPath}, this.EditDomainOperationCompleted, userState);
        }
        
        private void OnEditDomainOperationCompleted(object arg) {
            if ((this.EditDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDomainCompleted(this, new EditDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EditDomains", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse EditDomains(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string domainsList, string newPath) {
            object[] results = this.Invoke("EditDomains", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        newSubdomainName,
                        domainsList,
                        newPath});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EditDomainsAsync(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string domainsList, string newPath) {
            this.EditDomainsAsync(accountuid, domainType, parentDomainName, newSubdomainName, domainsList, newPath, null);
        }
        
        /// <remarks/>
        public void EditDomainsAsync(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string domainsList, string newPath, object userState) {
            if ((this.EditDomainsOperationCompleted == null)) {
                this.EditDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDomainsOperationCompleted);
            }
            this.InvokeAsync("EditDomains", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        newSubdomainName,
                        domainsList,
                        newPath}, this.EditDomainsOperationCompleted, userState);
        }
        
        private void OnEditDomainsOperationCompleted(object arg) {
            if ((this.EditDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDomainsCompleted(this, new EditDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EditDomainsByList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse EditDomainsByList(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string[] domainsList, string newPath) {
            object[] results = this.Invoke("EditDomainsByList", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        newSubdomainName,
                        domainsList,
                        newPath});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EditDomainsByListAsync(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string[] domainsList, string newPath) {
            this.EditDomainsByListAsync(accountuid, domainType, parentDomainName, newSubdomainName, domainsList, newPath, null);
        }
        
        /// <remarks/>
        public void EditDomainsByListAsync(string accountuid, DomainType domainType, string parentDomainName, string newSubdomainName, string[] domainsList, string newPath, object userState) {
            if ((this.EditDomainsByListOperationCompleted == null)) {
                this.EditDomainsByListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDomainsByListOperationCompleted);
            }
            this.InvokeAsync("EditDomainsByList", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        newSubdomainName,
                        domainsList,
                        newPath}, this.EditDomainsByListOperationCompleted, userState);
        }
        
        private void OnEditDomainsByListOperationCompleted(object arg) {
            if ((this.EditDomainsByListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDomainsByListCompleted(this, new EditDomainsByListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveDomainsByList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse RemoveDomainsByList(string accountuid, DomainType domainType, string parentDomainName, string[] domainsList) {
            object[] results = this.Invoke("RemoveDomainsByList", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDomainsByListAsync(string accountuid, DomainType domainType, string parentDomainName, string[] domainsList) {
            this.RemoveDomainsByListAsync(accountuid, domainType, parentDomainName, domainsList, null);
        }
        
        /// <remarks/>
        public void RemoveDomainsByListAsync(string accountuid, DomainType domainType, string parentDomainName, string[] domainsList, object userState) {
            if ((this.RemoveDomainsByListOperationCompleted == null)) {
                this.RemoveDomainsByListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDomainsByListOperationCompleted);
            }
            this.InvokeAsync("RemoveDomainsByList", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList}, this.RemoveDomainsByListOperationCompleted, userState);
        }
        
        private void OnRemoveDomainsByListOperationCompleted(object arg) {
            if ((this.RemoveDomainsByListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDomainsByListCompleted(this, new RemoveDomainsByListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveDomain", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse RemoveDomain(string accountuid, DomainType domainType, string parentDomainName, string domainToDelete) {
            object[] results = this.Invoke("RemoveDomain", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainToDelete});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDomainAsync(string accountuid, DomainType domainType, string parentDomainName, string domainToDelete) {
            this.RemoveDomainAsync(accountuid, domainType, parentDomainName, domainToDelete, null);
        }
        
        /// <remarks/>
        public void RemoveDomainAsync(string accountuid, DomainType domainType, string parentDomainName, string domainToDelete, object userState) {
            if ((this.RemoveDomainOperationCompleted == null)) {
                this.RemoveDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDomainOperationCompleted);
            }
            this.InvokeAsync("RemoveDomain", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainToDelete}, this.RemoveDomainOperationCompleted, userState);
        }
        
        private void OnRemoveDomainOperationCompleted(object arg) {
            if ((this.RemoveDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDomainCompleted(this, new RemoveDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveDomains", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse RemoveDomains(string accountuid, DomainType domainType, string parentDomainName, string domainsList) {
            object[] results = this.Invoke("RemoveDomains", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDomainsAsync(string accountuid, DomainType domainType, string parentDomainName, string domainsList) {
            this.RemoveDomainsAsync(accountuid, domainType, parentDomainName, domainsList, null);
        }
        
        /// <remarks/>
        public void RemoveDomainsAsync(string accountuid, DomainType domainType, string parentDomainName, string domainsList, object userState) {
            if ((this.RemoveDomainsOperationCompleted == null)) {
                this.RemoveDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDomainsOperationCompleted);
            }
            this.InvokeAsync("RemoveDomains", new object[] {
                        accountuid,
                        domainType,
                        parentDomainName,
                        domainsList}, this.RemoveDomainsOperationCompleted, userState);
        }
        
        private void OnRemoveDomainsOperationCompleted(object arg) {
            if ((this.RemoveDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDomainsCompleted(this, new RemoveDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AddApplicationSubdoma" +
            "ins", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainManagementResponse AddApplicationSubdomains(string username, string password, string accountuid, string domain, string directory, string subdomains) {
            object[] results = this.Invoke("AddApplicationSubdomains", new object[] {
                        username,
                        password,
                        accountuid,
                        domain,
                        directory,
                        subdomains});
            return ((DomainManagementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddApplicationSubdomainsAsync(string username, string password, string accountuid, string domain, string directory, string subdomains) {
            this.AddApplicationSubdomainsAsync(username, password, accountuid, domain, directory, subdomains, null);
        }
        
        /// <remarks/>
        public void AddApplicationSubdomainsAsync(string username, string password, string accountuid, string domain, string directory, string subdomains, object userState) {
            if ((this.AddApplicationSubdomainsOperationCompleted == null)) {
                this.AddApplicationSubdomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddApplicationSubdomainsOperationCompleted);
            }
            this.InvokeAsync("AddApplicationSubdomains", new object[] {
                        username,
                        password,
                        accountuid,
                        domain,
                        directory,
                        subdomains}, this.AddApplicationSubdomainsOperationCompleted, userState);
        }
        
        private void OnAddApplicationSubdomainsOperationCompleted(object arg) {
            if ((this.AddApplicationSubdomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddApplicationSubdomainsCompleted(this, new AddApplicationSubdomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/Get404ErrorBehavior", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorPageResponse Get404ErrorBehavior(string accountuid) {
            object[] results = this.Invoke("Get404ErrorBehavior", new object[] {
                        accountuid});
            return ((ErrorPageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void Get404ErrorBehaviorAsync(string accountuid) {
            this.Get404ErrorBehaviorAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void Get404ErrorBehaviorAsync(string accountuid, object userState) {
            if ((this.Get404ErrorBehaviorOperationCompleted == null)) {
                this.Get404ErrorBehaviorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet404ErrorBehaviorOperationCompleted);
            }
            this.InvokeAsync("Get404ErrorBehavior", new object[] {
                        accountuid}, this.Get404ErrorBehaviorOperationCompleted, userState);
        }
        
        private void OnGet404ErrorBehaviorOperationCompleted(object arg) {
            if ((this.Get404ErrorBehaviorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get404ErrorBehaviorCompleted(this, new Get404ErrorBehaviorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/Set404ErrorBehavior", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse Set404ErrorBehavior(string accountuid, ErrorBehaviorPageType errorType, string path, string filename) {
            object[] results = this.Invoke("Set404ErrorBehavior", new object[] {
                        accountuid,
                        errorType,
                        path,
                        filename});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void Set404ErrorBehaviorAsync(string accountuid, ErrorBehaviorPageType errorType, string path, string filename) {
            this.Set404ErrorBehaviorAsync(accountuid, errorType, path, filename, null);
        }
        
        /// <remarks/>
        public void Set404ErrorBehaviorAsync(string accountuid, ErrorBehaviorPageType errorType, string path, string filename, object userState) {
            if ((this.Set404ErrorBehaviorOperationCompleted == null)) {
                this.Set404ErrorBehaviorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet404ErrorBehaviorOperationCompleted);
            }
            this.InvokeAsync("Set404ErrorBehavior", new object[] {
                        accountuid,
                        errorType,
                        path,
                        filename}, this.Set404ErrorBehaviorOperationCompleted, userState);
        }
        
        private void OnSet404ErrorBehaviorOperationCompleted(object arg) {
            if ((this.Set404ErrorBehaviorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set404ErrorBehaviorCompleted(this, new Set404ErrorBehaviorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetErrorPageBehavior", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorPageResponse GetErrorPageBehavior(string accountuid, int errorno) {
            object[] results = this.Invoke("GetErrorPageBehavior", new object[] {
                        accountuid,
                        errorno});
            return ((ErrorPageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorPageBehaviorAsync(string accountuid, int errorno) {
            this.GetErrorPageBehaviorAsync(accountuid, errorno, null);
        }
        
        /// <remarks/>
        public void GetErrorPageBehaviorAsync(string accountuid, int errorno, object userState) {
            if ((this.GetErrorPageBehaviorOperationCompleted == null)) {
                this.GetErrorPageBehaviorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorPageBehaviorOperationCompleted);
            }
            this.InvokeAsync("GetErrorPageBehavior", new object[] {
                        accountuid,
                        errorno}, this.GetErrorPageBehaviorOperationCompleted, userState);
        }
        
        private void OnGetErrorPageBehaviorOperationCompleted(object arg) {
            if ((this.GetErrorPageBehaviorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorPageBehaviorCompleted(this, new GetErrorPageBehaviorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetErrorBehavior", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorPageResponse SetErrorBehavior(string accountuid, int errorno, ErrorBehaviorPageType errorType, string path, string filename) {
            object[] results = this.Invoke("SetErrorBehavior", new object[] {
                        accountuid,
                        errorno,
                        errorType,
                        path,
                        filename});
            return ((ErrorPageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetErrorBehaviorAsync(string accountuid, int errorno, ErrorBehaviorPageType errorType, string path, string filename) {
            this.SetErrorBehaviorAsync(accountuid, errorno, errorType, path, filename, null);
        }
        
        /// <remarks/>
        public void SetErrorBehaviorAsync(string accountuid, int errorno, ErrorBehaviorPageType errorType, string path, string filename, object userState) {
            if ((this.SetErrorBehaviorOperationCompleted == null)) {
                this.SetErrorBehaviorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetErrorBehaviorOperationCompleted);
            }
            this.InvokeAsync("SetErrorBehavior", new object[] {
                        accountuid,
                        errorno,
                        errorType,
                        path,
                        filename}, this.SetErrorBehaviorOperationCompleted, userState);
        }
        
        private void OnSetErrorBehaviorOperationCompleted(object arg) {
            if ((this.SetErrorBehaviorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetErrorBehaviorCompleted(this, new SetErrorBehaviorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetErrorLoggingInfo", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLoggingResponse GetErrorLoggingInfo(string accountuid) {
            object[] results = this.Invoke("GetErrorLoggingInfo", new object[] {
                        accountuid});
            return ((ErrorLoggingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorLoggingInfoAsync(string accountuid) {
            this.GetErrorLoggingInfoAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetErrorLoggingInfoAsync(string accountuid, object userState) {
            if ((this.GetErrorLoggingInfoOperationCompleted == null)) {
                this.GetErrorLoggingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorLoggingInfoOperationCompleted);
            }
            this.InvokeAsync("GetErrorLoggingInfo", new object[] {
                        accountuid}, this.GetErrorLoggingInfoOperationCompleted, userState);
        }
        
        private void OnGetErrorLoggingInfoOperationCompleted(object arg) {
            if ((this.GetErrorLoggingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorLoggingInfoCompleted(this, new GetErrorLoggingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetErrorLoggingExpira" +
            "tion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLoggingResponse SetErrorLoggingExpiration(string accountuid) {
            object[] results = this.Invoke("SetErrorLoggingExpiration", new object[] {
                        accountuid});
            return ((ErrorLoggingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetErrorLoggingExpirationAsync(string accountuid) {
            this.SetErrorLoggingExpirationAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void SetErrorLoggingExpirationAsync(string accountuid, object userState) {
            if ((this.SetErrorLoggingExpirationOperationCompleted == null)) {
                this.SetErrorLoggingExpirationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetErrorLoggingExpirationOperationCompleted);
            }
            this.InvokeAsync("SetErrorLoggingExpiration", new object[] {
                        accountuid}, this.SetErrorLoggingExpirationOperationCompleted, userState);
        }
        
        private void OnSetErrorLoggingExpirationOperationCompleted(object arg) {
            if ((this.SetErrorLoggingExpirationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetErrorLoggingExpirationCompleted(this, new SetErrorLoggingExpirationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsFTPUserManagementSu" +
            "pported", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SupportedResponse IsFTPUserManagementSupported(string accountuid) {
            object[] results = this.Invoke("IsFTPUserManagementSupported", new object[] {
                        accountuid});
            return ((SupportedResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsFTPUserManagementSupportedAsync(string accountuid) {
            this.IsFTPUserManagementSupportedAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void IsFTPUserManagementSupportedAsync(string accountuid, object userState) {
            if ((this.IsFTPUserManagementSupportedOperationCompleted == null)) {
                this.IsFTPUserManagementSupportedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsFTPUserManagementSupportedOperationCompleted);
            }
            this.InvokeAsync("IsFTPUserManagementSupported", new object[] {
                        accountuid}, this.IsFTPUserManagementSupportedOperationCompleted, userState);
        }
        
        private void OnIsFTPUserManagementSupportedOperationCompleted(object arg) {
            if ((this.IsFTPUserManagementSupportedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsFTPUserManagementSupportedCompleted(this, new IsFTPUserManagementSupportedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetFTPUserLimit", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPUserLimitResponse GetFTPUserLimit() {
            object[] results = this.Invoke("GetFTPUserLimit", new object[0]);
            return ((FTPUserLimitResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPUserLimitAsync() {
            this.GetFTPUserLimitAsync(null);
        }
        
        /// <remarks/>
        public void GetFTPUserLimitAsync(object userState) {
            if ((this.GetFTPUserLimitOperationCompleted == null)) {
                this.GetFTPUserLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPUserLimitOperationCompleted);
            }
            this.InvokeAsync("GetFTPUserLimit", new object[0], this.GetFTPUserLimitOperationCompleted, userState);
        }
        
        private void OnGetFTPUserLimitOperationCompleted(object arg) {
            if ((this.GetFTPUserLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPUserLimitCompleted(this, new GetFTPUserLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccountInfo", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPAccountResponse GetAccountInfo(string accountuid) {
            object[] results = this.Invoke("GetAccountInfo", new object[] {
                        accountuid});
            return ((FTPAccountResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string accountuid) {
            this.GetAccountInfoAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string accountuid, object userState) {
            if ((this.GetAccountInfoOperationCompleted == null)) {
                this.GetAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountInfo", new object[] {
                        accountuid}, this.GetAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountInfoOperationCompleted(object arg) {
            if ((this.GetAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAvailablePaths", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPGetAvailablePathsResponse GetAvailablePaths(string accountuid) {
            object[] results = this.Invoke("GetAvailablePaths", new object[] {
                        accountuid});
            return ((FTPGetAvailablePathsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailablePathsAsync(string accountuid) {
            this.GetAvailablePathsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetAvailablePathsAsync(string accountuid, object userState) {
            if ((this.GetAvailablePathsOperationCompleted == null)) {
                this.GetAvailablePathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailablePathsOperationCompleted);
            }
            this.InvokeAsync("GetAvailablePaths", new object[] {
                        accountuid}, this.GetAvailablePathsOperationCompleted, userState);
        }
        
        private void OnGetAvailablePathsOperationCompleted(object arg) {
            if ((this.GetAvailablePathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailablePathsCompleted(this, new GetAvailablePathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetFTPUsers", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPUserResponse GetFTPUsers(string accountuid) {
            object[] results = this.Invoke("GetFTPUsers", new object[] {
                        accountuid});
            return ((FTPUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPUsersAsync(string accountuid) {
            this.GetFTPUsersAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetFTPUsersAsync(string accountuid, object userState) {
            if ((this.GetFTPUsersOperationCompleted == null)) {
                this.GetFTPUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPUsersOperationCompleted);
            }
            this.InvokeAsync("GetFTPUsers", new object[] {
                        accountuid}, this.GetFTPUsersOperationCompleted, userState);
        }
        
        private void OnGetFTPUsersOperationCompleted(object arg) {
            if ((this.GetFTPUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPUsersCompleted(this, new GetFTPUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AddFTPUser", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPResponse AddFTPUser(string accountuid, string username, string password, string path) {
            object[] results = this.Invoke("AddFTPUser", new object[] {
                        accountuid,
                        username,
                        password,
                        path});
            return ((FTPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddFTPUserAsync(string accountuid, string username, string password, string path) {
            this.AddFTPUserAsync(accountuid, username, password, path, null);
        }
        
        /// <remarks/>
        public void AddFTPUserAsync(string accountuid, string username, string password, string path, object userState) {
            if ((this.AddFTPUserOperationCompleted == null)) {
                this.AddFTPUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFTPUserOperationCompleted);
            }
            this.InvokeAsync("AddFTPUser", new object[] {
                        accountuid,
                        username,
                        password,
                        path}, this.AddFTPUserOperationCompleted, userState);
        }
        
        private void OnAddFTPUserOperationCompleted(object arg) {
            if ((this.AddFTPUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFTPUserCompleted(this, new AddFTPUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/UpdateUserInfo", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPResponse UpdateUserInfo(string accountuid, string username, string password, string path) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        accountuid,
                        username,
                        password,
                        path});
            return ((FTPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(string accountuid, string username, string password, string path) {
            this.UpdateUserInfoAsync(accountuid, username, password, path, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(string accountuid, string username, string password, string path, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        accountuid,
                        username,
                        password,
                        path}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/UpdateUserInfoByAccou" +
            "nt", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FTPResponse UpdateUserInfoByAccount(string accountuid, string ftpaccountuid, string password, string path) {
            object[] results = this.Invoke("UpdateUserInfoByAccount", new object[] {
                        accountuid,
                        ftpaccountuid,
                        password,
                        path});
            return ((FTPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoByAccountAsync(string accountuid, string ftpaccountuid, string password, string path) {
            this.UpdateUserInfoByAccountAsync(accountuid, ftpaccountuid, password, path, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoByAccountAsync(string accountuid, string ftpaccountuid, string password, string path, object userState) {
            if ((this.UpdateUserInfoByAccountOperationCompleted == null)) {
                this.UpdateUserInfoByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoByAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfoByAccount", new object[] {
                        accountuid,
                        ftpaccountuid,
                        password,
                        path}, this.UpdateUserInfoByAccountOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoByAccountOperationCompleted(object arg) {
            if ((this.UpdateUserInfoByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoByAccountCompleted(this, new UpdateUserInfoByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveUser", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveUser(string accountuid, string username) {
            object[] results = this.Invoke("RemoveUser", new object[] {
                        accountuid,
                        username});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string accountuid, string username) {
            this.RemoveUserAsync(accountuid, username, null);
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string accountuid, string username, object userState) {
            if ((this.RemoveUserOperationCompleted == null)) {
                this.RemoveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserOperationCompleted);
            }
            this.InvokeAsync("RemoveUser", new object[] {
                        accountuid,
                        username}, this.RemoveUserOperationCompleted, userState);
        }
        
        private void OnRemoveUserOperationCompleted(object arg) {
            if ((this.RemoveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserCompleted(this, new RemoveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveUserByAccount", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveUserByAccount(string accountuid, string ftpaccountuid) {
            object[] results = this.Invoke("RemoveUserByAccount", new object[] {
                        accountuid,
                        ftpaccountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserByAccountAsync(string accountuid, string ftpaccountuid) {
            this.RemoveUserByAccountAsync(accountuid, ftpaccountuid, null);
        }
        
        /// <remarks/>
        public void RemoveUserByAccountAsync(string accountuid, string ftpaccountuid, object userState) {
            if ((this.RemoveUserByAccountOperationCompleted == null)) {
                this.RemoveUserByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserByAccountOperationCompleted);
            }
            this.InvokeAsync("RemoveUserByAccount", new object[] {
                        accountuid,
                        ftpaccountuid}, this.RemoveUserByAccountOperationCompleted, userState);
        }
        
        private void OnRemoveUserByAccountOperationCompleted(object arg) {
            if ((this.RemoveUserByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserByAccountCompleted(this, new RemoveUserByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetStatusCodes", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetStatusCodes(int statusCode) {
            object[] results = this.Invoke("GetStatusCodes", new object[] {
                        statusCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusCodesAsync(int statusCode) {
            this.GetStatusCodesAsync(statusCode, null);
        }
        
        /// <remarks/>
        public void GetStatusCodesAsync(int statusCode, object userState) {
            if ((this.GetStatusCodesOperationCompleted == null)) {
                this.GetStatusCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusCodesOperationCompleted);
            }
            this.InvokeAsync("GetStatusCodes", new object[] {
                        statusCode}, this.GetStatusCodesOperationCompleted, userState);
        }
        
        private void OnGetStatusCodesOperationCompleted(object arg) {
            if ((this.GetStatusCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCodesCompleted(this, new GetStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsIISAvailable", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IISSettingsResponse IsIISAvailable(string accountuid) {
            object[] results = this.Invoke("IsIISAvailable", new object[] {
                        accountuid});
            return ((IISSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsIISAvailableAsync(string accountuid) {
            this.IsIISAvailableAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void IsIISAvailableAsync(string accountuid, object userState) {
            if ((this.IsIISAvailableOperationCompleted == null)) {
                this.IsIISAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsIISAvailableOperationCompleted);
            }
            this.InvokeAsync("IsIISAvailable", new object[] {
                        accountuid}, this.IsIISAvailableOperationCompleted, userState);
        }
        
        private void OnIsIISAvailableOperationCompleted(object arg) {
            if ((this.IsIISAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsIISAvailableCompleted(this, new IsIISAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetVirtualDirectories" +
            "", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VirtualDirectoriesResponse GetVirtualDirectories(string accountuid) {
            object[] results = this.Invoke("GetVirtualDirectories", new object[] {
                        accountuid});
            return ((VirtualDirectoriesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetVirtualDirectoriesAsync(string accountuid) {
            this.GetVirtualDirectoriesAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetVirtualDirectoriesAsync(string accountuid, object userState) {
            if ((this.GetVirtualDirectoriesOperationCompleted == null)) {
                this.GetVirtualDirectoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVirtualDirectoriesOperationCompleted);
            }
            this.InvokeAsync("GetVirtualDirectories", new object[] {
                        accountuid}, this.GetVirtualDirectoriesOperationCompleted, userState);
        }
        
        private void OnGetVirtualDirectoriesOperationCompleted(object arg) {
            if ((this.GetVirtualDirectoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVirtualDirectoriesCompleted(this, new GetVirtualDirectoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsRecycleAppPoolAvail" +
            "able", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IISSettingsResponse IsRecycleAppPoolAvailable(string accountuid) {
            object[] results = this.Invoke("IsRecycleAppPoolAvailable", new object[] {
                        accountuid});
            return ((IISSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsRecycleAppPoolAvailableAsync(string accountuid) {
            this.IsRecycleAppPoolAvailableAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void IsRecycleAppPoolAvailableAsync(string accountuid, object userState) {
            if ((this.IsRecycleAppPoolAvailableOperationCompleted == null)) {
                this.IsRecycleAppPoolAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRecycleAppPoolAvailableOperationCompleted);
            }
            this.InvokeAsync("IsRecycleAppPoolAvailable", new object[] {
                        accountuid}, this.IsRecycleAppPoolAvailableOperationCompleted, userState);
        }
        
        private void OnIsRecycleAppPoolAvailableOperationCompleted(object arg) {
            if ((this.IsRecycleAppPoolAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRecycleAppPoolAvailableCompleted(this, new IsRecycleAppPoolAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RecycleAppPool", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IISSettingsResponse RecycleAppPool(string accountuid) {
            object[] results = this.Invoke("RecycleAppPool", new object[] {
                        accountuid});
            return ((IISSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RecycleAppPoolAsync(string accountuid) {
            this.RecycleAppPoolAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void RecycleAppPoolAsync(string accountuid, object userState) {
            if ((this.RecycleAppPoolOperationCompleted == null)) {
                this.RecycleAppPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecycleAppPoolOperationCompleted);
            }
            this.InvokeAsync("RecycleAppPool", new object[] {
                        accountuid}, this.RecycleAppPoolOperationCompleted, userState);
        }
        
        private void OnRecycleAppPoolOperationCompleted(object arg) {
            if ((this.RecycleAppPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecycleAppPoolCompleted(this, new RecycleAppPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/CreateVirtualDirector" +
            "y", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VirtualDirectoriesResponse CreateVirtualDirectory(string accountuid, string paths, string parentPath, bool anonymousAccess, bool directoryBrowsing, bool applicationRoot) {
            object[] results = this.Invoke("CreateVirtualDirectory", new object[] {
                        accountuid,
                        paths,
                        parentPath,
                        anonymousAccess,
                        directoryBrowsing,
                        applicationRoot});
            return ((VirtualDirectoriesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVirtualDirectoryAsync(string accountuid, string paths, string parentPath, bool anonymousAccess, bool directoryBrowsing, bool applicationRoot) {
            this.CreateVirtualDirectoryAsync(accountuid, paths, parentPath, anonymousAccess, directoryBrowsing, applicationRoot, null);
        }
        
        /// <remarks/>
        public void CreateVirtualDirectoryAsync(string accountuid, string paths, string parentPath, bool anonymousAccess, bool directoryBrowsing, bool applicationRoot, object userState) {
            if ((this.CreateVirtualDirectoryOperationCompleted == null)) {
                this.CreateVirtualDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVirtualDirectoryOperationCompleted);
            }
            this.InvokeAsync("CreateVirtualDirectory", new object[] {
                        accountuid,
                        paths,
                        parentPath,
                        anonymousAccess,
                        directoryBrowsing,
                        applicationRoot}, this.CreateVirtualDirectoryOperationCompleted, userState);
        }
        
        private void OnCreateVirtualDirectoryOperationCompleted(object arg) {
            if ((this.CreateVirtualDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVirtualDirectoryCompleted(this, new CreateVirtualDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveVirtualDirector" +
            "y", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VirtualDirectoriesResponse RemoveVirtualDirectory(string accountuid, string paths) {
            object[] results = this.Invoke("RemoveVirtualDirectory", new object[] {
                        accountuid,
                        paths});
            return ((VirtualDirectoriesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveVirtualDirectoryAsync(string accountuid, string paths) {
            this.RemoveVirtualDirectoryAsync(accountuid, paths, null);
        }
        
        /// <remarks/>
        public void RemoveVirtualDirectoryAsync(string accountuid, string paths, object userState) {
            if ((this.RemoveVirtualDirectoryOperationCompleted == null)) {
                this.RemoveVirtualDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveVirtualDirectoryOperationCompleted);
            }
            this.InvokeAsync("RemoveVirtualDirectory", new object[] {
                        accountuid,
                        paths}, this.RemoveVirtualDirectoryOperationCompleted, userState);
        }
        
        private void OnRemoveVirtualDirectoryOperationCompleted(object arg) {
            if ((this.RemoveVirtualDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveVirtualDirectoryCompleted(this, new RemoveVirtualDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetProducts", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductResponse GetProducts(string shopper) {
            object[] results = this.Invoke("GetProducts", new object[] {
                        shopper});
            return ((ProductResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAsync(string shopper) {
            this.GetProductsAsync(shopper, null);
        }
        
        /// <remarks/>
        public void GetProductsAsync(string shopper, object userState) {
            if ((this.GetProductsOperationCompleted == null)) {
                this.GetProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsOperationCompleted);
            }
            this.InvokeAsync("GetProducts", new object[] {
                        shopper}, this.GetProductsOperationCompleted, userState);
        }
        
        private void OnGetProductsOperationCompleted(object arg) {
            if ((this.GetProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccountList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetAccountList(string shopper) {
            object[] results = this.Invoke("GetAccountList", new object[] {
                        shopper});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountListAsync(string shopper) {
            this.GetAccountListAsync(shopper, null);
        }
        
        /// <remarks/>
        public void GetAccountListAsync(string shopper, object userState) {
            if ((this.GetAccountListOperationCompleted == null)) {
                this.GetAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountListOperationCompleted);
            }
            this.InvokeAsync("GetAccountList", new object[] {
                        shopper}, this.GetAccountListOperationCompleted, userState);
        }
        
        private void OnGetAccountListOperationCompleted(object arg) {
            if ((this.GetAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountListCompleted(this, new GetAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetPagedAccountList", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetPagedAccountList(string shopper, int page, int pageSize) {
            object[] results = this.Invoke("GetPagedAccountList", new object[] {
                        shopper,
                        page,
                        pageSize});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedAccountListAsync(string shopper, int page, int pageSize) {
            this.GetPagedAccountListAsync(shopper, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetPagedAccountListAsync(string shopper, int page, int pageSize, object userState) {
            if ((this.GetPagedAccountListOperationCompleted == null)) {
                this.GetPagedAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedAccountListOperationCompleted);
            }
            this.InvokeAsync("GetPagedAccountList", new object[] {
                        shopper,
                        page,
                        pageSize}, this.GetPagedAccountListOperationCompleted, userState);
        }
        
        private void OnGetPagedAccountListOperationCompleted(object arg) {
            if ((this.GetPagedAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedAccountListCompleted(this, new GetPagedAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetOrionPagedAccountL" +
            "ist", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetOrionPagedAccountList(string shopper, int page, int pageSize) {
            object[] results = this.Invoke("GetOrionPagedAccountList", new object[] {
                        shopper,
                        page,
                        pageSize});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrionPagedAccountListAsync(string shopper, int page, int pageSize) {
            this.GetOrionPagedAccountListAsync(shopper, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetOrionPagedAccountListAsync(string shopper, int page, int pageSize, object userState) {
            if ((this.GetOrionPagedAccountListOperationCompleted == null)) {
                this.GetOrionPagedAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrionPagedAccountListOperationCompleted);
            }
            this.InvokeAsync("GetOrionPagedAccountList", new object[] {
                        shopper,
                        page,
                        pageSize}, this.GetOrionPagedAccountListOperationCompleted, userState);
        }
        
        private void OnGetOrionPagedAccountListOperationCompleted(object arg) {
            if ((this.GetOrionPagedAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrionPagedAccountListCompleted(this, new GetOrionPagedAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetHostingListByProdu" +
            "cts", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetHostingListByProducts(string shopper, string[] products) {
            object[] results = this.Invoke("GetHostingListByProducts", new object[] {
                        shopper,
                        products});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetHostingListByProductsAsync(string shopper, string[] products) {
            this.GetHostingListByProductsAsync(shopper, products, null);
        }
        
        /// <remarks/>
        public void GetHostingListByProductsAsync(string shopper, string[] products, object userState) {
            if ((this.GetHostingListByProductsOperationCompleted == null)) {
                this.GetHostingListByProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHostingListByProductsOperationCompleted);
            }
            this.InvokeAsync("GetHostingListByProducts", new object[] {
                        shopper,
                        products}, this.GetHostingListByProductsOperationCompleted, userState);
        }
        
        private void OnGetHostingListByProductsOperationCompleted(object arg) {
            if ((this.GetHostingListByProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHostingListByProductsCompleted(this, new GetHostingListByProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetPagedHostingListBy" +
            "Products", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetPagedHostingListByProducts(string shopper, string[] products, int page, int pageSize) {
            object[] results = this.Invoke("GetPagedHostingListByProducts", new object[] {
                        shopper,
                        products,
                        page,
                        pageSize});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedHostingListByProductsAsync(string shopper, string[] products, int page, int pageSize) {
            this.GetPagedHostingListByProductsAsync(shopper, products, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetPagedHostingListByProductsAsync(string shopper, string[] products, int page, int pageSize, object userState) {
            if ((this.GetPagedHostingListByProductsOperationCompleted == null)) {
                this.GetPagedHostingListByProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedHostingListByProductsOperationCompleted);
            }
            this.InvokeAsync("GetPagedHostingListByProducts", new object[] {
                        shopper,
                        products,
                        page,
                        pageSize}, this.GetPagedHostingListByProductsOperationCompleted, userState);
        }
        
        private void OnGetPagedHostingListByProductsOperationCompleted(object arg) {
            if ((this.GetPagedHostingListByProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedHostingListByProductsCompleted(this, new GetPagedHostingListByProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetOrionPagedHostingL" +
            "istByProducts", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetOrionPagedHostingListByProducts(string shopper, string[] products, int page, int pageSize) {
            object[] results = this.Invoke("GetOrionPagedHostingListByProducts", new object[] {
                        shopper,
                        products,
                        page,
                        pageSize});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrionPagedHostingListByProductsAsync(string shopper, string[] products, int page, int pageSize) {
            this.GetOrionPagedHostingListByProductsAsync(shopper, products, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetOrionPagedHostingListByProductsAsync(string shopper, string[] products, int page, int pageSize, object userState) {
            if ((this.GetOrionPagedHostingListByProductsOperationCompleted == null)) {
                this.GetOrionPagedHostingListByProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrionPagedHostingListByProductsOperationCompleted);
            }
            this.InvokeAsync("GetOrionPagedHostingListByProducts", new object[] {
                        shopper,
                        products,
                        page,
                        pageSize}, this.GetOrionPagedHostingListByProductsOperationCompleted, userState);
        }
        
        private void OnGetOrionPagedHostingListByProductsOperationCompleted(object arg) {
            if ((this.GetOrionPagedHostingListByProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrionPagedHostingListByProductsCompleted(this, new GetOrionPagedHostingListByProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetHostingListByProdu" +
            "ct", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetHostingListByProduct(string shopper, string product) {
            object[] results = this.Invoke("GetHostingListByProduct", new object[] {
                        shopper,
                        product});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetHostingListByProductAsync(string shopper, string product) {
            this.GetHostingListByProductAsync(shopper, product, null);
        }
        
        /// <remarks/>
        public void GetHostingListByProductAsync(string shopper, string product, object userState) {
            if ((this.GetHostingListByProductOperationCompleted == null)) {
                this.GetHostingListByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHostingListByProductOperationCompleted);
            }
            this.InvokeAsync("GetHostingListByProduct", new object[] {
                        shopper,
                        product}, this.GetHostingListByProductOperationCompleted, userState);
        }
        
        private void OnGetHostingListByProductOperationCompleted(object arg) {
            if ((this.GetHostingListByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHostingListByProductCompleted(this, new GetHostingListByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetPagedHostingListBy" +
            "Product", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetPagedHostingListByProduct(string shopper, string product, int page, int pageSize) {
            object[] results = this.Invoke("GetPagedHostingListByProduct", new object[] {
                        shopper,
                        product,
                        page,
                        pageSize});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedHostingListByProductAsync(string shopper, string product, int page, int pageSize) {
            this.GetPagedHostingListByProductAsync(shopper, product, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetPagedHostingListByProductAsync(string shopper, string product, int page, int pageSize, object userState) {
            if ((this.GetPagedHostingListByProductOperationCompleted == null)) {
                this.GetPagedHostingListByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedHostingListByProductOperationCompleted);
            }
            this.InvokeAsync("GetPagedHostingListByProduct", new object[] {
                        shopper,
                        product,
                        page,
                        pageSize}, this.GetPagedHostingListByProductOperationCompleted, userState);
        }
        
        private void OnGetPagedHostingListByProductOperationCompleted(object arg) {
            if ((this.GetPagedHostingListByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedHostingListByProductCompleted(this, new GetPagedHostingListByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetOrionPagedHostingL" +
            "istByProduct", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountListResponse GetOrionPagedHostingListByProduct(string shopper, string product, int page, int pageSize) {
            object[] results = this.Invoke("GetOrionPagedHostingListByProduct", new object[] {
                        shopper,
                        product,
                        page,
                        pageSize});
            return ((AccountListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrionPagedHostingListByProductAsync(string shopper, string product, int page, int pageSize) {
            this.GetOrionPagedHostingListByProductAsync(shopper, product, page, pageSize, null);
        }
        
        /// <remarks/>
        public void GetOrionPagedHostingListByProductAsync(string shopper, string product, int page, int pageSize, object userState) {
            if ((this.GetOrionPagedHostingListByProductOperationCompleted == null)) {
                this.GetOrionPagedHostingListByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrionPagedHostingListByProductOperationCompleted);
            }
            this.InvokeAsync("GetOrionPagedHostingListByProduct", new object[] {
                        shopper,
                        product,
                        page,
                        pageSize}, this.GetOrionPagedHostingListByProductOperationCompleted, userState);
        }
        
        private void OnGetOrionPagedHostingListByProductOperationCompleted(object arg) {
            if ((this.GetOrionPagedHostingListByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrionPagedHostingListByProductCompleted(this, new GetOrionPagedHostingListByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetServiceAgreement", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountSetupLicenseResponse GetServiceAgreement(string accountuid) {
            object[] results = this.Invoke("GetServiceAgreement", new object[] {
                        accountuid});
            return ((AccountSetupLicenseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceAgreementAsync(string accountuid) {
            this.GetServiceAgreementAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetServiceAgreementAsync(string accountuid, object userState) {
            if ((this.GetServiceAgreementOperationCompleted == null)) {
                this.GetServiceAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceAgreementOperationCompleted);
            }
            this.InvokeAsync("GetServiceAgreement", new object[] {
                        accountuid}, this.GetServiceAgreementOperationCompleted, userState);
        }
        
        private void OnGetServiceAgreementOperationCompleted(object arg) {
            if ((this.GetServiceAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceAgreementCompleted(this, new GetServiceAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetHostingAccountDeta" +
            "ils", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingAccountDetailsResponse GetHostingAccountDetails(string accountuid) {
            object[] results = this.Invoke("GetHostingAccountDetails", new object[] {
                        accountuid});
            return ((HostingAccountDetailsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetHostingAccountDetailsAsync(string accountuid) {
            this.GetHostingAccountDetailsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetHostingAccountDetailsAsync(string accountuid, object userState) {
            if ((this.GetHostingAccountDetailsOperationCompleted == null)) {
                this.GetHostingAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHostingAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("GetHostingAccountDetails", new object[] {
                        accountuid}, this.GetHostingAccountDetailsOperationCompleted, userState);
        }
        
        private void OnGetHostingAccountDetailsOperationCompleted(object arg) {
            if ((this.GetHostingAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHostingAccountDetailsCompleted(this, new GetHostingAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccountSetupOption" +
            "s", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountSetupOptionsResponse GetAccountSetupOptions(string accountuid) {
            object[] results = this.Invoke("GetAccountSetupOptions", new object[] {
                        accountuid});
            return ((AccountSetupOptionsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountSetupOptionsAsync(string accountuid) {
            this.GetAccountSetupOptionsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetAccountSetupOptionsAsync(string accountuid, object userState) {
            if ((this.GetAccountSetupOptionsOperationCompleted == null)) {
                this.GetAccountSetupOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountSetupOptionsOperationCompleted);
            }
            this.InvokeAsync("GetAccountSetupOptions", new object[] {
                        accountuid}, this.GetAccountSetupOptionsOperationCompleted, userState);
        }
        
        private void OnGetAccountSetupOptionsOperationCompleted(object arg) {
            if ((this.GetAccountSetupOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountSetupOptionsCompleted(this, new GetAccountSetupOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAvailableDomains", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AvailableDomainsResponse GetAvailableDomains(string accountuid, int pageSize, int page) {
            object[] results = this.Invoke("GetAvailableDomains", new object[] {
                        accountuid,
                        pageSize,
                        page});
            return ((AvailableDomainsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableDomainsAsync(string accountuid, int pageSize, int page) {
            this.GetAvailableDomainsAsync(accountuid, pageSize, page, null);
        }
        
        /// <remarks/>
        public void GetAvailableDomainsAsync(string accountuid, int pageSize, int page, object userState) {
            if ((this.GetAvailableDomainsOperationCompleted == null)) {
                this.GetAvailableDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableDomainsOperationCompleted);
            }
            this.InvokeAsync("GetAvailableDomains", new object[] {
                        accountuid,
                        pageSize,
                        page}, this.GetAvailableDomainsOperationCompleted, userState);
        }
        
        private void OnGetAvailableDomainsOperationCompleted(object arg) {
            if ((this.GetAvailableDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableDomainsCompleted(this, new GetAvailableDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDomainSettingsOpti" +
            "ons", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainSettingsResponse GetDomainSettingsOptions(string accountuid, string domain) {
            object[] results = this.Invoke("GetDomainSettingsOptions", new object[] {
                        accountuid,
                        domain});
            return ((DomainSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainSettingsOptionsAsync(string accountuid, string domain) {
            this.GetDomainSettingsOptionsAsync(accountuid, domain, null);
        }
        
        /// <remarks/>
        public void GetDomainSettingsOptionsAsync(string accountuid, string domain, object userState) {
            if ((this.GetDomainSettingsOptionsOperationCompleted == null)) {
                this.GetDomainSettingsOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainSettingsOptionsOperationCompleted);
            }
            this.InvokeAsync("GetDomainSettingsOptions", new object[] {
                        accountuid,
                        domain}, this.GetDomainSettingsOptionsOperationCompleted, userState);
        }
        
        private void OnGetDomainSettingsOptionsOperationCompleted(object arg) {
            if ((this.GetDomainSettingsOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainSettingsOptionsCompleted(this, new GetDomainSettingsOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsUsernameValid", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingAccountSetupResponse IsUsernameValid(string username) {
            object[] results = this.Invoke("IsUsernameValid", new object[] {
                        username});
            return ((HostingAccountSetupResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsUsernameValidAsync(string username) {
            this.IsUsernameValidAsync(username, null);
        }
        
        /// <remarks/>
        public void IsUsernameValidAsync(string username, object userState) {
            if ((this.IsUsernameValidOperationCompleted == null)) {
                this.IsUsernameValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUsernameValidOperationCompleted);
            }
            this.InvokeAsync("IsUsernameValid", new object[] {
                        username}, this.IsUsernameValidOperationCompleted, userState);
        }
        
        private void OnIsUsernameValidOperationCompleted(object arg) {
            if ((this.IsUsernameValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUsernameValidCompleted(this, new IsUsernameValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/IsPasswordValid", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingAccountSetupResponse IsPasswordValid(string password) {
            object[] results = this.Invoke("IsPasswordValid", new object[] {
                        password});
            return ((HostingAccountSetupResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsPasswordValidAsync(string password) {
            this.IsPasswordValidAsync(password, null);
        }
        
        /// <remarks/>
        public void IsPasswordValidAsync(string password, object userState) {
            if ((this.IsPasswordValidOperationCompleted == null)) {
                this.IsPasswordValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPasswordValidOperationCompleted);
            }
            this.InvokeAsync("IsPasswordValid", new object[] {
                        password}, this.IsPasswordValidOperationCompleted, userState);
        }
        
        private void OnIsPasswordValidOperationCompleted(object arg) {
            if ((this.IsPasswordValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPasswordValidCompleted(this, new IsPasswordValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetUpWordpressHosting" +
            "Account", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingAccountSetupResponse SetUpWordpressHostingAccount(string accountuid, string userName, string password, string domainName, string appSubDomainName, string sslCertificateuid, bool enableGoogleWMT, bool enablePreviewDNS, string email, string blogTitle) {
            object[] results = this.Invoke("SetUpWordpressHostingAccount", new object[] {
                        accountuid,
                        userName,
                        password,
                        domainName,
                        appSubDomainName,
                        sslCertificateuid,
                        enableGoogleWMT,
                        enablePreviewDNS,
                        email,
                        blogTitle});
            return ((HostingAccountSetupResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetUpWordpressHostingAccountAsync(string accountuid, string userName, string password, string domainName, string appSubDomainName, string sslCertificateuid, bool enableGoogleWMT, bool enablePreviewDNS, string email, string blogTitle) {
            this.SetUpWordpressHostingAccountAsync(accountuid, userName, password, domainName, appSubDomainName, sslCertificateuid, enableGoogleWMT, enablePreviewDNS, email, blogTitle, null);
        }
        
        /// <remarks/>
        public void SetUpWordpressHostingAccountAsync(string accountuid, string userName, string password, string domainName, string appSubDomainName, string sslCertificateuid, bool enableGoogleWMT, bool enablePreviewDNS, string email, string blogTitle, object userState) {
            if ((this.SetUpWordpressHostingAccountOperationCompleted == null)) {
                this.SetUpWordpressHostingAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUpWordpressHostingAccountOperationCompleted);
            }
            this.InvokeAsync("SetUpWordpressHostingAccount", new object[] {
                        accountuid,
                        userName,
                        password,
                        domainName,
                        appSubDomainName,
                        sslCertificateuid,
                        enableGoogleWMT,
                        enablePreviewDNS,
                        email,
                        blogTitle}, this.SetUpWordpressHostingAccountOperationCompleted, userState);
        }
        
        private void OnSetUpWordpressHostingAccountOperationCompleted(object arg) {
            if ((this.SetUpWordpressHostingAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUpWordpressHostingAccountCompleted(this, new SetUpWordpressHostingAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetUpWebsiteTonightAc" +
            "count", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingAccountSetupResponse SetUpWebsiteTonightAccount(string accountuid, string userName, string password, string domainName, string sslCertificateuid, bool enableGoogleWMT) {
            object[] results = this.Invoke("SetUpWebsiteTonightAccount", new object[] {
                        accountuid,
                        userName,
                        password,
                        domainName,
                        sslCertificateuid,
                        enableGoogleWMT});
            return ((HostingAccountSetupResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetUpWebsiteTonightAccountAsync(string accountuid, string userName, string password, string domainName, string sslCertificateuid, bool enableGoogleWMT) {
            this.SetUpWebsiteTonightAccountAsync(accountuid, userName, password, domainName, sslCertificateuid, enableGoogleWMT, null);
        }
        
        /// <remarks/>
        public void SetUpWebsiteTonightAccountAsync(string accountuid, string userName, string password, string domainName, string sslCertificateuid, bool enableGoogleWMT, object userState) {
            if ((this.SetUpWebsiteTonightAccountOperationCompleted == null)) {
                this.SetUpWebsiteTonightAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUpWebsiteTonightAccountOperationCompleted);
            }
            this.InvokeAsync("SetUpWebsiteTonightAccount", new object[] {
                        accountuid,
                        userName,
                        password,
                        domainName,
                        sslCertificateuid,
                        enableGoogleWMT}, this.SetUpWebsiteTonightAccountOperationCompleted, userState);
        }
        
        private void OnSetUpWebsiteTonightAccountOperationCompleted(object arg) {
            if ((this.SetUpWebsiteTonightAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUpWebsiteTonightAccountCompleted(this, new SetUpWebsiteTonightAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetUpHostingAccount", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingAccountSetupResponse SetUpHostingAccount(string accountuid, string userName, string password, string domainName, IISVersion iisVersion, ASPDotNetVersion dotNetVersion, PHPVersion phpVersion, PipeLineMode pipeLineMode, string sslCertificateuid, bool enableGoogleWMT, bool enablePreviewDNS) {
            object[] results = this.Invoke("SetUpHostingAccount", new object[] {
                        accountuid,
                        userName,
                        password,
                        domainName,
                        iisVersion,
                        dotNetVersion,
                        phpVersion,
                        pipeLineMode,
                        sslCertificateuid,
                        enableGoogleWMT,
                        enablePreviewDNS});
            return ((HostingAccountSetupResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetUpHostingAccountAsync(string accountuid, string userName, string password, string domainName, IISVersion iisVersion, ASPDotNetVersion dotNetVersion, PHPVersion phpVersion, PipeLineMode pipeLineMode, string sslCertificateuid, bool enableGoogleWMT, bool enablePreviewDNS) {
            this.SetUpHostingAccountAsync(accountuid, userName, password, domainName, iisVersion, dotNetVersion, phpVersion, pipeLineMode, sslCertificateuid, enableGoogleWMT, enablePreviewDNS, null);
        }
        
        /// <remarks/>
        public void SetUpHostingAccountAsync(string accountuid, string userName, string password, string domainName, IISVersion iisVersion, ASPDotNetVersion dotNetVersion, PHPVersion phpVersion, PipeLineMode pipeLineMode, string sslCertificateuid, bool enableGoogleWMT, bool enablePreviewDNS, object userState) {
            if ((this.SetUpHostingAccountOperationCompleted == null)) {
                this.SetUpHostingAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUpHostingAccountOperationCompleted);
            }
            this.InvokeAsync("SetUpHostingAccount", new object[] {
                        accountuid,
                        userName,
                        password,
                        domainName,
                        iisVersion,
                        dotNetVersion,
                        phpVersion,
                        pipeLineMode,
                        sslCertificateuid,
                        enableGoogleWMT,
                        enablePreviewDNS}, this.SetUpHostingAccountOperationCompleted, userState);
        }
        
        private void OnSetUpHostingAccountOperationCompleted(object arg) {
            if ((this.SetUpHostingAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUpHostingAccountCompleted(this, new SetUpHostingAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAvailableSSLCertif" +
            "icatesInfo", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSLCertificatesResponse GetAvailableSSLCertificatesInfo(string accountuid) {
            object[] results = this.Invoke("GetAvailableSSLCertificatesInfo", new object[] {
                        accountuid});
            return ((SSLCertificatesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableSSLCertificatesInfoAsync(string accountuid) {
            this.GetAvailableSSLCertificatesInfoAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetAvailableSSLCertificatesInfoAsync(string accountuid, object userState) {
            if ((this.GetAvailableSSLCertificatesInfoOperationCompleted == null)) {
                this.GetAvailableSSLCertificatesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableSSLCertificatesInfoOperationCompleted);
            }
            this.InvokeAsync("GetAvailableSSLCertificatesInfo", new object[] {
                        accountuid}, this.GetAvailableSSLCertificatesInfoOperationCompleted, userState);
        }
        
        private void OnGetAvailableSSLCertificatesInfoOperationCompleted(object arg) {
            if ((this.GetAvailableSSLCertificatesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableSSLCertificatesInfoCompleted(this, new GetAvailableSSLCertificatesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/LoadApplicationDetail" +
            "sFields", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuickInstallResponse LoadApplicationDetailsFields(string accountuid) {
            object[] results = this.Invoke("LoadApplicationDetailsFields", new object[] {
                        accountuid});
            return ((QuickInstallResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LoadApplicationDetailsFieldsAsync(string accountuid) {
            this.LoadApplicationDetailsFieldsAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void LoadApplicationDetailsFieldsAsync(string accountuid, object userState) {
            if ((this.LoadApplicationDetailsFieldsOperationCompleted == null)) {
                this.LoadApplicationDetailsFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadApplicationDetailsFieldsOperationCompleted);
            }
            this.InvokeAsync("LoadApplicationDetailsFields", new object[] {
                        accountuid}, this.LoadApplicationDetailsFieldsOperationCompleted, userState);
        }
        
        private void OnLoadApplicationDetailsFieldsOperationCompleted(object arg) {
            if ((this.LoadApplicationDetailsFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadApplicationDetailsFieldsCompleted(this, new LoadApplicationDetailsFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAccountSummary", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountSummaryResponse GetAccountSummary(string accountuid) {
            object[] results = this.Invoke("GetAccountSummary", new object[] {
                        accountuid});
            return ((AccountSummaryResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountSummaryAsync(string accountuid) {
            this.GetAccountSummaryAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void GetAccountSummaryAsync(string accountuid, object userState) {
            if ((this.GetAccountSummaryOperationCompleted == null)) {
                this.GetAccountSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountSummaryOperationCompleted);
            }
            this.InvokeAsync("GetAccountSummary", new object[] {
                        accountuid}, this.GetAccountSummaryOperationCompleted, userState);
        }
        
        private void OnGetAccountSummaryOperationCompleted(object arg) {
            if ((this.GetAccountSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountSummaryCompleted(this, new GetAccountSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/EnablePreviewDNS", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse EnablePreviewDNS(string accountuid) {
            object[] results = this.Invoke("EnablePreviewDNS", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EnablePreviewDNSAsync(string accountuid) {
            this.EnablePreviewDNSAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void EnablePreviewDNSAsync(string accountuid, object userState) {
            if ((this.EnablePreviewDNSOperationCompleted == null)) {
                this.EnablePreviewDNSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnablePreviewDNSOperationCompleted);
            }
            this.InvokeAsync("EnablePreviewDNS", new object[] {
                        accountuid}, this.EnablePreviewDNSOperationCompleted, userState);
        }
        
        private void OnEnablePreviewDNSOperationCompleted(object arg) {
            if ((this.EnablePreviewDNSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnablePreviewDNSCompleted(this, new EnablePreviewDNSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/DNSMakeSiteLive", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse DNSMakeSiteLive(string accountuid) {
            object[] results = this.Invoke("DNSMakeSiteLive", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DNSMakeSiteLiveAsync(string accountuid) {
            this.DNSMakeSiteLiveAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void DNSMakeSiteLiveAsync(string accountuid, object userState) {
            if ((this.DNSMakeSiteLiveOperationCompleted == null)) {
                this.DNSMakeSiteLiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDNSMakeSiteLiveOperationCompleted);
            }
            this.InvokeAsync("DNSMakeSiteLive", new object[] {
                        accountuid}, this.DNSMakeSiteLiveOperationCompleted, userState);
        }
        
        private void OnDNSMakeSiteLiveOperationCompleted(object arg) {
            if ((this.DNSMakeSiteLiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DNSMakeSiteLiveCompleted(this, new DNSMakeSiteLiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetAddOnLanguageOptio" +
            "ns", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddOnLanguagesResponse GetAddOnLanguageOptions(string accountuid, string paths) {
            object[] results = this.Invoke("GetAddOnLanguageOptions", new object[] {
                        accountuid,
                        paths});
            return ((AddOnLanguagesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddOnLanguageOptionsAsync(string accountuid, string paths) {
            this.GetAddOnLanguageOptionsAsync(accountuid, paths, null);
        }
        
        /// <remarks/>
        public void GetAddOnLanguageOptionsAsync(string accountuid, string paths, object userState) {
            if ((this.GetAddOnLanguageOptionsOperationCompleted == null)) {
                this.GetAddOnLanguageOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddOnLanguageOptionsOperationCompleted);
            }
            this.InvokeAsync("GetAddOnLanguageOptions", new object[] {
                        accountuid,
                        paths}, this.GetAddOnLanguageOptionsOperationCompleted, userState);
        }
        
        private void OnGetAddOnLanguageOptionsOperationCompleted(object arg) {
            if ((this.GetAddOnLanguageOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddOnLanguageOptionsCompleted(this, new GetAddOnLanguageOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetDotNetVersion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse SetDotNetVersion(string accountuid, ASPDotNetVersion version) {
            object[] results = this.Invoke("SetDotNetVersion", new object[] {
                        accountuid,
                        version});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetDotNetVersionAsync(string accountuid, ASPDotNetVersion version) {
            this.SetDotNetVersionAsync(accountuid, version, null);
        }
        
        /// <remarks/>
        public void SetDotNetVersionAsync(string accountuid, ASPDotNetVersion version, object userState) {
            if ((this.SetDotNetVersionOperationCompleted == null)) {
                this.SetDotNetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDotNetVersionOperationCompleted);
            }
            this.InvokeAsync("SetDotNetVersion", new object[] {
                        accountuid,
                        version}, this.SetDotNetVersionOperationCompleted, userState);
        }
        
        private void OnSetDotNetVersionOperationCompleted(object arg) {
            if ((this.SetDotNetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDotNetVersionCompleted(this, new SetDotNetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/SetPHPVersion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse SetPHPVersion(string accountuid, PHPVersion version) {
            object[] results = this.Invoke("SetPHPVersion", new object[] {
                        accountuid,
                        version});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetPHPVersionAsync(string accountuid, PHPVersion version) {
            this.SetPHPVersionAsync(accountuid, version, null);
        }
        
        /// <remarks/>
        public void SetPHPVersionAsync(string accountuid, PHPVersion version, object userState) {
            if ((this.SetPHPVersionOperationCompleted == null)) {
                this.SetPHPVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPHPVersionOperationCompleted);
            }
            this.InvokeAsync("SetPHPVersion", new object[] {
                        accountuid,
                        version}, this.SetPHPVersionOperationCompleted, userState);
        }
        
        private void OnSetPHPVersionOperationCompleted(object arg) {
            if ((this.SetPHPVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPHPVersionCompleted(this, new SetPHPVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AddColdFusion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse AddColdFusion(string accountuid) {
            object[] results = this.Invoke("AddColdFusion", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddColdFusionAsync(string accountuid) {
            this.AddColdFusionAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void AddColdFusionAsync(string accountuid, object userState) {
            if ((this.AddColdFusionOperationCompleted == null)) {
                this.AddColdFusionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddColdFusionOperationCompleted);
            }
            this.InvokeAsync("AddColdFusion", new object[] {
                        accountuid}, this.AddColdFusionOperationCompleted, userState);
        }
        
        private void OnAddColdFusionOperationCompleted(object arg) {
            if ((this.AddColdFusionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddColdFusionCompleted(this, new AddColdFusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveColdFusion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveColdFusion(string accountuid) {
            object[] results = this.Invoke("RemoveColdFusion", new object[] {
                        accountuid});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveColdFusionAsync(string accountuid) {
            this.RemoveColdFusionAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void RemoveColdFusionAsync(string accountuid, object userState) {
            if ((this.RemoveColdFusionOperationCompleted == null)) {
                this.RemoveColdFusionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveColdFusionOperationCompleted);
            }
            this.InvokeAsync("RemoveColdFusion", new object[] {
                        accountuid}, this.RemoveColdFusionOperationCompleted, userState);
        }
        
        private void OnRemoveColdFusionOperationCompleted(object arg) {
            if ((this.RemoveColdFusionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveColdFusionCompleted(this, new RemoveColdFusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/ChangeHostingAccountP" +
            "assword", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChangeHostingPasswordResponse ChangeHostingAccountPassword(string accountuid, string newPassword) {
            object[] results = this.Invoke("ChangeHostingAccountPassword", new object[] {
                        accountuid,
                        newPassword});
            return ((ChangeHostingPasswordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeHostingAccountPasswordAsync(string accountuid, string newPassword) {
            this.ChangeHostingAccountPasswordAsync(accountuid, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangeHostingAccountPasswordAsync(string accountuid, string newPassword, object userState) {
            if ((this.ChangeHostingAccountPasswordOperationCompleted == null)) {
                this.ChangeHostingAccountPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeHostingAccountPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeHostingAccountPassword", new object[] {
                        accountuid,
                        newPassword}, this.ChangeHostingAccountPasswordOperationCompleted, userState);
        }
        
        private void OnChangeHostingAccountPasswordOperationCompleted(object arg) {
            if ((this.ChangeHostingAccountPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeHostingAccountPasswordCompleted(this, new ChangeHostingAccountPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/AreAccountsInSync", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChangeHostingPasswordResponse AreAccountsInSync(string accountuid) {
            object[] results = this.Invoke("AreAccountsInSync", new object[] {
                        accountuid});
            return ((ChangeHostingPasswordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AreAccountsInSyncAsync(string accountuid) {
            this.AreAccountsInSyncAsync(accountuid, null);
        }
        
        /// <remarks/>
        public void AreAccountsInSyncAsync(string accountuid, object userState) {
            if ((this.AreAccountsInSyncOperationCompleted == null)) {
                this.AreAccountsInSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAreAccountsInSyncOperationCompleted);
            }
            this.InvokeAsync("AreAccountsInSync", new object[] {
                        accountuid}, this.AreAccountsInSyncOperationCompleted, userState);
        }
        
        private void OnAreAccountsInSyncOperationCompleted(object arg) {
            if ((this.AreAccountsInSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AreAccountsInSyncCompleted(this, new AreAccountsInSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveDatabase", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveDatabase(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation) {
            object[] results = this.Invoke("RemoveDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation) {
            this.RemoveDatabaseAsync(hostingAccountUID, database, callbackServiceLocation, null);
        }
        
        /// <remarks/>
        public void RemoveDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, object userState) {
            if ((this.RemoveDatabaseOperationCompleted == null)) {
                this.RemoveDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDatabaseOperationCompleted);
            }
            this.InvokeAsync("RemoveDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation}, this.RemoveDatabaseOperationCompleted, userState);
        }
        
        private void OnRemoveDatabaseOperationCompleted(object arg) {
            if ((this.RemoveDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDatabaseCompleted(this, new RemoveDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/BackupDatabase", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse BackupDatabase(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, string backupFileName, string backup_type) {
            object[] results = this.Invoke("BackupDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation,
                        backupFileName,
                        backup_type});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void BackupDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, string backupFileName, string backup_type) {
            this.BackupDatabaseAsync(hostingAccountUID, database, callbackServiceLocation, backupFileName, backup_type, null);
        }
        
        /// <remarks/>
        public void BackupDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, string backupFileName, string backup_type, object userState) {
            if ((this.BackupDatabaseOperationCompleted == null)) {
                this.BackupDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupDatabaseOperationCompleted);
            }
            this.InvokeAsync("BackupDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation,
                        backupFileName,
                        backup_type}, this.BackupDatabaseOperationCompleted, userState);
        }
        
        private void OnBackupDatabaseOperationCompleted(object arg) {
            if ((this.BackupDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupDatabaseCompleted(this, new BackupDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/UpdateDatabaseDescrip" +
            "tion", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse UpdateDatabaseDescription(string hostingAccountUID, string databaseName, string databaseDescription) {
            object[] results = this.Invoke("UpdateDatabaseDescription", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseDescription});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDatabaseDescriptionAsync(string hostingAccountUID, string databaseName, string databaseDescription) {
            this.UpdateDatabaseDescriptionAsync(hostingAccountUID, databaseName, databaseDescription, null);
        }
        
        /// <remarks/>
        public void UpdateDatabaseDescriptionAsync(string hostingAccountUID, string databaseName, string databaseDescription, object userState) {
            if ((this.UpdateDatabaseDescriptionOperationCompleted == null)) {
                this.UpdateDatabaseDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDatabaseDescriptionOperationCompleted);
            }
            this.InvokeAsync("UpdateDatabaseDescription", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseDescription}, this.UpdateDatabaseDescriptionOperationCompleted, userState);
        }
        
        private void OnUpdateDatabaseDescriptionOperationCompleted(object arg) {
            if ((this.UpdateDatabaseDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDatabaseDescriptionCompleted(this, new UpdateDatabaseDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/UpdateDatabaseDescrip" +
            "tionB", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse UpdateDatabaseDescriptionB(string hostingAccountUID, string databaseName, string databaseDescription, string databaseType) {
            object[] results = this.Invoke("UpdateDatabaseDescriptionB", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseDescription,
                        databaseType});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDatabaseDescriptionBAsync(string hostingAccountUID, string databaseName, string databaseDescription, string databaseType) {
            this.UpdateDatabaseDescriptionBAsync(hostingAccountUID, databaseName, databaseDescription, databaseType, null);
        }
        
        /// <remarks/>
        public void UpdateDatabaseDescriptionBAsync(string hostingAccountUID, string databaseName, string databaseDescription, string databaseType, object userState) {
            if ((this.UpdateDatabaseDescriptionBOperationCompleted == null)) {
                this.UpdateDatabaseDescriptionBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDatabaseDescriptionBOperationCompleted);
            }
            this.InvokeAsync("UpdateDatabaseDescriptionB", new object[] {
                        hostingAccountUID,
                        databaseName,
                        databaseDescription,
                        databaseType}, this.UpdateDatabaseDescriptionBOperationCompleted, userState);
        }
        
        private void OnUpdateDatabaseDescriptionBOperationCompleted(object arg) {
            if ((this.UpdateDatabaseDescriptionBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDatabaseDescriptionBCompleted(this, new UpdateDatabaseDescriptionBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RestoreDatabase", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RestoreDatabase(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, string restoreFileName, string backupType, string databaseType) {
            object[] results = this.Invoke("RestoreDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation,
                        restoreFileName,
                        backupType,
                        databaseType});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, string restoreFileName, string backupType, string databaseType) {
            this.RestoreDatabaseAsync(hostingAccountUID, database, callbackServiceLocation, restoreFileName, backupType, databaseType, null);
        }
        
        /// <remarks/>
        public void RestoreDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, string restoreFileName, string backupType, string databaseType, object userState) {
            if ((this.RestoreDatabaseOperationCompleted == null)) {
                this.RestoreDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreDatabaseOperationCompleted);
            }
            this.InvokeAsync("RestoreDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation,
                        restoreFileName,
                        backupType,
                        databaseType}, this.RestoreDatabaseOperationCompleted, userState);
        }
        
        private void OnRestoreDatabaseOperationCompleted(object arg) {
            if ((this.RestoreDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreDatabaseCompleted(this, new RestoreDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/CreateDatabase", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse CreateDatabase(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation) {
            object[] results = this.Invoke("CreateDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation) {
            this.CreateDatabaseAsync(hostingAccountUID, database, callbackServiceLocation, null);
        }
        
        /// <remarks/>
        public void CreateDatabaseAsync(string hostingAccountUID, Database database, ServiceLocation callbackServiceLocation, object userState) {
            if ((this.CreateDatabaseOperationCompleted == null)) {
                this.CreateDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDatabaseOperationCompleted);
            }
            this.InvokeAsync("CreateDatabase", new object[] {
                        hostingAccountUID,
                        database,
                        callbackServiceLocation}, this.CreateDatabaseOperationCompleted, userState);
        }
        
        private void OnCreateDatabaseOperationCompleted(object arg) {
            if ((this.CreateDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDatabaseCompleted(this, new CreateDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/GetDatabase", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Database GetDatabase(string hostingAccountUID, string databaseName) {
            object[] results = this.Invoke("GetDatabase", new object[] {
                        hostingAccountUID,
                        databaseName});
            return ((Database)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseAsync(string hostingAccountUID, string databaseName) {
            this.GetDatabaseAsync(hostingAccountUID, databaseName, null);
        }
        
        /// <remarks/>
        public void GetDatabaseAsync(string hostingAccountUID, string databaseName, object userState) {
            if ((this.GetDatabaseOperationCompleted == null)) {
                this.GetDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseOperationCompleted);
            }
            this.InvokeAsync("GetDatabase", new object[] {
                        hostingAccountUID,
                        databaseName}, this.GetDatabaseOperationCompleted, userState);
        }
        
        private void OnGetDatabaseOperationCompleted(object arg) {
            if ((this.GetDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseCompleted(this, new GetDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://hosting.starfieldtech.com/schemas/hostingapiservices/RemoveBackupContent", RequestNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", ResponseNamespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HostingResponse RemoveBackupContent(string hostingAccountUid, int applicationInstanceID, string backupFileName, string dbBackupFileName, ServiceLocation userdataCallback, System.DateTime processAt) {
            object[] results = this.Invoke("RemoveBackupContent", new object[] {
                        hostingAccountUid,
                        applicationInstanceID,
                        backupFileName,
                        dbBackupFileName,
                        userdataCallback,
                        processAt});
            return ((HostingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveBackupContentAsync(string hostingAccountUid, int applicationInstanceID, string backupFileName, string dbBackupFileName, ServiceLocation userdataCallback, System.DateTime processAt) {
            this.RemoveBackupContentAsync(hostingAccountUid, applicationInstanceID, backupFileName, dbBackupFileName, userdataCallback, processAt, null);
        }
        
        /// <remarks/>
        public void RemoveBackupContentAsync(string hostingAccountUid, int applicationInstanceID, string backupFileName, string dbBackupFileName, ServiceLocation userdataCallback, System.DateTime processAt, object userState) {
            if ((this.RemoveBackupContentOperationCompleted == null)) {
                this.RemoveBackupContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveBackupContentOperationCompleted);
            }
            this.InvokeAsync("RemoveBackupContent", new object[] {
                        hostingAccountUid,
                        applicationInstanceID,
                        backupFileName,
                        dbBackupFileName,
                        userdataCallback,
                        processAt}, this.RemoveBackupContentOperationCompleted, userState);
        }
        
        private void OnRemoveBackupContentOperationCompleted(object arg) {
            if ((this.RemoveBackupContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveBackupContentCompleted(this, new RemoveBackupContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/", IsNullable=false)]
    public partial class AuthenticationSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class Database {
        
        private string nameField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string typeField;
        
        private string versionField;
        
        private string descriptionField;
        
        private string statusField;
        
        private string uniqueDnsEntryField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueDnsEntry {
            get {
                return this.uniqueDnsEntryField;
            }
            set {
                this.uniqueDnsEntryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccountSummaryInfo {
        
        private string domainNameField;
        
        private string absoluteHostingPathField;
        
        private string serverIPAddressField;
        
        private string dedicatedIPAddressField;
        
        private string sSLStatusField;
        
        private string operatingSystemField;
        
        private string productField;
        
        private string dotNetVersionField;
        
        private string iISVersionField;
        
        private string pHPVersionField;
        
        private string mSSQLInfoField;
        
        private string mySQLInfoField;
        
        private string bandwidthField;
        
        private string diskSpaceField;
        
        private string dataCenterField;
        
        private string previewDnsUrlField;
        
        private string nameServersField;
        
        private string aRecordField;
        
        private string previewDnsStatusField;
        
        private string previewDnsTextField;
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public string AbsoluteHostingPath {
            get {
                return this.absoluteHostingPathField;
            }
            set {
                this.absoluteHostingPathField = value;
            }
        }
        
        /// <remarks/>
        public string ServerIPAddress {
            get {
                return this.serverIPAddressField;
            }
            set {
                this.serverIPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string DedicatedIPAddress {
            get {
                return this.dedicatedIPAddressField;
            }
            set {
                this.dedicatedIPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SSLStatus {
            get {
                return this.sSLStatusField;
            }
            set {
                this.sSLStatusField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
        
        /// <remarks/>
        public string Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public string DotNetVersion {
            get {
                return this.dotNetVersionField;
            }
            set {
                this.dotNetVersionField = value;
            }
        }
        
        /// <remarks/>
        public string IISVersion {
            get {
                return this.iISVersionField;
            }
            set {
                this.iISVersionField = value;
            }
        }
        
        /// <remarks/>
        public string PHPVersion {
            get {
                return this.pHPVersionField;
            }
            set {
                this.pHPVersionField = value;
            }
        }
        
        /// <remarks/>
        public string MSSQLInfo {
            get {
                return this.mSSQLInfoField;
            }
            set {
                this.mSSQLInfoField = value;
            }
        }
        
        /// <remarks/>
        public string MySQLInfo {
            get {
                return this.mySQLInfoField;
            }
            set {
                this.mySQLInfoField = value;
            }
        }
        
        /// <remarks/>
        public string Bandwidth {
            get {
                return this.bandwidthField;
            }
            set {
                this.bandwidthField = value;
            }
        }
        
        /// <remarks/>
        public string DiskSpace {
            get {
                return this.diskSpaceField;
            }
            set {
                this.diskSpaceField = value;
            }
        }
        
        /// <remarks/>
        public string DataCenter {
            get {
                return this.dataCenterField;
            }
            set {
                this.dataCenterField = value;
            }
        }
        
        /// <remarks/>
        public string PreviewDnsUrl {
            get {
                return this.previewDnsUrlField;
            }
            set {
                this.previewDnsUrlField = value;
            }
        }
        
        /// <remarks/>
        public string NameServers {
            get {
                return this.nameServersField;
            }
            set {
                this.nameServersField = value;
            }
        }
        
        /// <remarks/>
        public string ARecord {
            get {
                return this.aRecordField;
            }
            set {
                this.aRecordField = value;
            }
        }
        
        /// <remarks/>
        public string PreviewDnsStatus {
            get {
                return this.previewDnsStatusField;
            }
            set {
                this.previewDnsStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PreviewDnsText {
            get {
                return this.previewDnsTextField;
            }
            set {
                this.previewDnsTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccountSummaryResponse {
        
        private string messageField;
        
        private string statusField;
        
        private int statusCodeField;
        
        private AccountSummaryInfo accountSummaryField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public AccountSummaryInfo AccountSummary {
            get {
                return this.accountSummaryField;
            }
            set {
                this.accountSummaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPUserInfo {
        
        private string uIDField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string pathField;
        
        private string statusField;
        
        private string messageField;
        
        /// <remarks/>
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPAccountInfo {
        
        private bool isSupportedField;
        
        private int usersLimitField;
        
        private int usersAvailableField;
        
        /// <remarks/>
        public bool IsSupported {
            get {
                return this.isSupportedField;
            }
            set {
                this.isSupportedField = value;
            }
        }
        
        /// <remarks/>
        public int UsersLimit {
            get {
                return this.usersLimitField;
            }
            set {
                this.usersLimitField = value;
            }
        }
        
        /// <remarks/>
        public int UsersAvailable {
            get {
                return this.usersAvailableField;
            }
            set {
                this.usersAvailableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTPUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTPGetAvailablePathsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTPAccountResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTPUserLimitResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SupportedResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPResponse {
        
        private string statusField;
        
        private string messageField;
        
        private int statusCodeField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPUserResponse : FTPResponse {
        
        private FTPUserInfo[] fTPUsersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FTPUserInfo[] FTPUsers {
            get {
                return this.fTPUsersField;
            }
            set {
                this.fTPUsersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPGetAvailablePathsResponse : FTPResponse {
        
        private string[] pathsField;
        
        /// <remarks/>
        public string[] Paths {
            get {
                return this.pathsField;
            }
            set {
                this.pathsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPAccountResponse : FTPResponse {
        
        private FTPAccountInfo accountInfoField;
        
        /// <remarks/>
        public FTPAccountInfo AccountInfo {
            get {
                return this.accountInfoField;
            }
            set {
                this.accountInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class FTPUserLimitResponse : FTPResponse {
        
        private int fTPUserLimitField;
        
        /// <remarks/>
        public int FTPUserLimit {
            get {
                return this.fTPUserLimitField;
            }
            set {
                this.fTPUserLimitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class SupportedResponse : FTPResponse {
        
        private bool supportedField;
        
        /// <remarks/>
        public bool Supported {
            get {
                return this.supportedField;
            }
            set {
                this.supportedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class ServiceLocation {
        
        private string uRIField;
        
        /// <remarks/>
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class CreateDatabase {
        
        private string nameField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string typeField;
        
        private string versionField;
        
        private string descriptionField;
        
        private string statusField;
        
        private string uniqueDnsEntryField;
        
        private string readOnlyUsernameField;
        
        private string readOnlyPasswordField;
        
        private bool installDSNField;
        
        private bool installColdFusionDSNField;
        
        private bool allowDirectAccessField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueDnsEntry {
            get {
                return this.uniqueDnsEntryField;
            }
            set {
                this.uniqueDnsEntryField = value;
            }
        }
        
        /// <remarks/>
        public string ReadOnlyUsername {
            get {
                return this.readOnlyUsernameField;
            }
            set {
                this.readOnlyUsernameField = value;
            }
        }
        
        /// <remarks/>
        public string ReadOnlyPassword {
            get {
                return this.readOnlyPasswordField;
            }
            set {
                this.readOnlyPasswordField = value;
            }
        }
        
        /// <remarks/>
        public bool InstallDSN {
            get {
                return this.installDSNField;
            }
            set {
                this.installDSNField = value;
            }
        }
        
        /// <remarks/>
        public bool InstallColdFusionDSN {
            get {
                return this.installColdFusionDSNField;
            }
            set {
                this.installColdFusionDSNField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowDirectAccess {
            get {
                return this.allowDirectAccessField;
            }
            set {
                this.allowDirectAccessField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://metropolis.starfieldtech.com/schemas/InstallApplicationCallbackService/")]
    public partial class ControlData {
        
        private string valueField;
        
        private bool selectedField;
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://metropolis.starfieldtech.com/schemas/InstallApplicationCallbackService/")]
    public partial class QuickInstallData {
        
        private int controlIdField;
        
        private int typeIdField;
        
        private string typeNameField;
        
        private string displayNameField;
        
        private string nameField;
        
        private string regexpField;
        
        private int lengthField;
        
        private bool optionalField;
        
        private ControlData[] controlDataField;
        
        /// <remarks/>
        public int controlId {
            get {
                return this.controlIdField;
            }
            set {
                this.controlIdField = value;
            }
        }
        
        /// <remarks/>
        public int typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string typeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string regexp {
            get {
                return this.regexpField;
            }
            set {
                this.regexpField = value;
            }
        }
        
        /// <remarks/>
        public int length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public bool optional {
            get {
                return this.optionalField;
            }
            set {
                this.optionalField = value;
            }
        }
        
        /// <remarks/>
        public ControlData[] controlData {
            get {
                return this.controlDataField;
            }
            set {
                this.controlDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://metropolis.starfieldtech.com/schemas/InstallApplicationCallbackService/")]
    public partial class QuickInstallArray {
        
        private QuickInstallData[] dataField;
        
        /// <remarks/>
        public QuickInstallData[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class SSLCreditListItem {
        
        private string displayTextField;
        
        private string valueField;
        
        /// <remarks/>
        public string DisplayText {
            get {
                return this.displayTextField;
            }
            set {
                this.displayTextField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class OptionListItem {
        
        private string typeField;
        
        private int valueField;
        
        private string textField;
        
        private bool selectedField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public bool Selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class OptionGroup {
        
        private string titleField;
        
        private string textField;
        
        private int helpArticleIDField;
        
        private OptionType listTypeField;
        
        private OptionListItem[] optionsField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public int HelpArticleID {
            get {
                return this.helpArticleIDField;
            }
            set {
                this.helpArticleIDField = value;
            }
        }
        
        /// <remarks/>
        public OptionType ListType {
            get {
                return this.listTypeField;
            }
            set {
                this.listTypeField = value;
            }
        }
        
        /// <remarks/>
        public OptionListItem[] Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum OptionType {
        
        /// <remarks/>
        Checkbox,
        
        /// <remarks/>
        Radio,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccountListItem {
        
        private string accountUIDField;
        
        private string planField;
        
        private string domainField;
        
        private string operatingSystemField;
        
        private string statusField;
        
        private bool accountExecField;
        
        private int diskSpaceInMBField;
        
        private int bandwidthInMBField;
        
        /// <remarks/>
        public string AccountUID {
            get {
                return this.accountUIDField;
            }
            set {
                this.accountUIDField = value;
            }
        }
        
        /// <remarks/>
        public string Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool AccountExec {
            get {
                return this.accountExecField;
            }
            set {
                this.accountExecField = value;
            }
        }
        
        /// <remarks/>
        public int DiskSpaceInMB {
            get {
                return this.diskSpaceInMBField;
            }
            set {
                this.diskSpaceInMBField = value;
            }
        }
        
        /// <remarks/>
        public int BandwidthInMB {
            get {
                return this.bandwidthInMBField;
            }
            set {
                this.bandwidthInMBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DSNRecord {
        
        private string dSNNameField;
        
        private string dSNTypeField;
        
        private string fileNameField;
        
        private string nameField;
        
        private string passwordField;
        
        private string pathField;
        
        private string statusField;
        
        private string userNameField;
        
        /// <remarks/>
        public string DSNName {
            get {
                return this.dSNNameField;
            }
            set {
                this.dSNNameField = value;
            }
        }
        
        /// <remarks/>
        public string DSNType {
            get {
                return this.dSNTypeField;
            }
            set {
                this.dSNTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DatabaseRecord {
        
        private string nameField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string typeField;
        
        private string versionField;
        
        private string descriptionField;
        
        private string statusField;
        
        private string uniqueDnsEntryField;
        
        private string readOnlyUsernameField;
        
        private string adminUrlField;
        
        private string connectionStringField;
        
        private string aSPSchemaField;
        
        private bool directAccessField;
        
        private DSNRecord dSNRecordField;
        
        private DSNRecord coldFusionDSNRecordField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UniqueDnsEntry {
            get {
                return this.uniqueDnsEntryField;
            }
            set {
                this.uniqueDnsEntryField = value;
            }
        }
        
        /// <remarks/>
        public string ReadOnlyUsername {
            get {
                return this.readOnlyUsernameField;
            }
            set {
                this.readOnlyUsernameField = value;
            }
        }
        
        /// <remarks/>
        public string AdminUrl {
            get {
                return this.adminUrlField;
            }
            set {
                this.adminUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionString {
            get {
                return this.connectionStringField;
            }
            set {
                this.connectionStringField = value;
            }
        }
        
        /// <remarks/>
        public string ASPSchema {
            get {
                return this.aSPSchemaField;
            }
            set {
                this.aSPSchemaField = value;
            }
        }
        
        /// <remarks/>
        public bool DirectAccess {
            get {
                return this.directAccessField;
            }
            set {
                this.directAccessField = value;
            }
        }
        
        /// <remarks/>
        public DSNRecord DSNRecord {
            get {
                return this.dSNRecordField;
            }
            set {
                this.dSNRecordField = value;
            }
        }
        
        /// <remarks/>
        public DSNRecord ColdFusionDSNRecord {
            get {
                return this.coldFusionDSNRecordField;
            }
            set {
                this.coldFusionDSNRecordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccessDSN {
        
        private bool canBeModifiedField;
        
        private string dSNNameField;
        
        private string dSNTypeField;
        
        private string fileNameField;
        
        private string nameField;
        
        private string passwordField;
        
        private string pathField;
        
        private string statusField;
        
        private string userNameField;
        
        /// <remarks/>
        public bool CanBeModified {
            get {
                return this.canBeModifiedField;
            }
            set {
                this.canBeModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string DSNName {
            get {
                return this.dSNNameField;
            }
            set {
                this.dSNNameField = value;
            }
        }
        
        /// <remarks/>
        public string DSNType {
            get {
                return this.dSNTypeField;
            }
            set {
                this.dSNTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class Backup {
        
        private string backupTypeField;
        
        private string databaseTypeField;
        
        private string nameField;
        
        private string pathField;
        
        private string sizeField;
        
        /// <remarks/>
        public string BackupType {
            get {
                return this.backupTypeField;
            }
            set {
                this.backupTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseType {
            get {
                return this.databaseTypeField;
            }
            set {
                this.databaseTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class PasswordVaultEntry {
        
        private int idField;
        
        private string applicationField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class HCCVirtualDirectory {
        
        private string nameField;
        
        private string pathField;
        
        private string statusField;
        
        private bool appRootField;
        
        private bool webBrowseField;
        
        private bool webReadField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool AppRoot {
            get {
                return this.appRootField;
            }
            set {
                this.appRootField = value;
            }
        }
        
        /// <remarks/>
        public bool WebBrowse {
            get {
                return this.webBrowseField;
            }
            set {
                this.webBrowseField = value;
            }
        }
        
        /// <remarks/>
        public bool WebRead {
            get {
                return this.webReadField;
            }
            set {
                this.webReadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeHostingPasswordResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddOnLanguagesResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuickInstallResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SSLCertificatesResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HostingAccountSetupResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainSettingsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AvailableDomainsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountSetupOptionsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HostingAccountDetailsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountSetupLicenseResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountListResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorLoggingResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorPageResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainManagementResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabasesResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccessDSNResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccessDSNsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccessEnabledResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BackupsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseUsage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StatisticsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebStatsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PasswordVaultResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IISSettingsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VirtualDirectoriesResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class HostingResponse {
        
        private string statusField;
        
        private string messageField;
        
        private int statusCodeField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class ChangeHostingPasswordResponse : HostingResponse {
        
        private bool accountsInSyncField;
        
        private string[] errorsField;
        
        /// <remarks/>
        public bool AccountsInSync {
            get {
                return this.accountsInSyncField;
            }
            set {
                this.accountsInSyncField = value;
            }
        }
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AddOnLanguagesResponse : HostingResponse {
        
        private OptionGroup[] optionsField;
        
        /// <remarks/>
        public OptionGroup[] Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class QuickInstallResponse : HostingResponse {
        
        private QuickInstallArray installArrayField;
        
        /// <remarks/>
        public QuickInstallArray InstallArray {
            get {
                return this.installArrayField;
            }
            set {
                this.installArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class SSLCertificatesResponse : HostingResponse {
        
        private SSLCreditListItem[] sSLCreditListItemsField;
        
        private string instructionTextField;
        
        private string subscriberAgreementUrlField;
        
        private int helpArticleIDField;
        
        private bool enabledField;
        
        /// <remarks/>
        public SSLCreditListItem[] SSLCreditListItems {
            get {
                return this.sSLCreditListItemsField;
            }
            set {
                this.sSLCreditListItemsField = value;
            }
        }
        
        /// <remarks/>
        public string InstructionText {
            get {
                return this.instructionTextField;
            }
            set {
                this.instructionTextField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriberAgreementUrl {
            get {
                return this.subscriberAgreementUrlField;
            }
            set {
                this.subscriberAgreementUrlField = value;
            }
        }
        
        /// <remarks/>
        public int HelpArticleID {
            get {
                return this.helpArticleIDField;
            }
            set {
                this.helpArticleIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class HostingAccountSetupResponse : HostingResponse {
        
        private string[] errorsField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DomainSettingsResponse : HostingResponse {
        
        private OptionGroup optionsListField;
        
        private string[] errorsField;
        
        private string[] textField;
        
        /// <remarks/>
        public OptionGroup OptionsList {
            get {
                return this.optionsListField;
            }
            set {
                this.optionsListField = value;
            }
        }
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AvailableDomainsResponse : HostingResponse {
        
        private int totalDomainsField;
        
        private int pageSizeField;
        
        private int pageField;
        
        private string[] domainsField;
        
        /// <remarks/>
        public int TotalDomains {
            get {
                return this.totalDomainsField;
            }
            set {
                this.totalDomainsField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int Page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public string[] Domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccountSetupOptionsResponse : HostingResponse {
        
        private OptionGroup[] optionGroupsField;
        
        /// <remarks/>
        public OptionGroup[] OptionGroups {
            get {
                return this.optionGroupsField;
            }
            set {
                this.optionGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class HostingAccountDetailsResponse : HostingResponse {
        
        private string operatingSystemField;
        
        private string bandwidthAllotmentField;
        
        private string diskspaceAllotmentField;
        
        private int mySQLDatabasesAvailableField;
        
        private int mSSQLDatabasesAvailableField;
        
        private string domainField;
        
        private bool freeHostingField;
        
        private string productNameField;
        
        /// <remarks/>
        public string OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
        
        /// <remarks/>
        public string BandwidthAllotment {
            get {
                return this.bandwidthAllotmentField;
            }
            set {
                this.bandwidthAllotmentField = value;
            }
        }
        
        /// <remarks/>
        public string DiskspaceAllotment {
            get {
                return this.diskspaceAllotmentField;
            }
            set {
                this.diskspaceAllotmentField = value;
            }
        }
        
        /// <remarks/>
        public int MySQLDatabasesAvailable {
            get {
                return this.mySQLDatabasesAvailableField;
            }
            set {
                this.mySQLDatabasesAvailableField = value;
            }
        }
        
        /// <remarks/>
        public int MSSQLDatabasesAvailable {
            get {
                return this.mSSQLDatabasesAvailableField;
            }
            set {
                this.mSSQLDatabasesAvailableField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public bool FreeHosting {
            get {
                return this.freeHostingField;
            }
            set {
                this.freeHostingField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccountSetupLicenseResponse : HostingResponse {
        
        private string serviceAgreementTextField;
        
        /// <remarks/>
        public string ServiceAgreementText {
            get {
                return this.serviceAgreementTextField;
            }
            set {
                this.serviceAgreementTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccountListResponse : HostingResponse {
        
        private AccountListItem[] accountListField;
        
        /// <remarks/>
        public AccountListItem[] AccountList {
            get {
                return this.accountListField;
            }
            set {
                this.accountListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class ProductResponse : HostingResponse {
        
        private string[] productsField;
        
        /// <remarks/>
        public string[] Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class ErrorLoggingResponse : HostingResponse {
        
        private bool supportedField;
        
        private string loggingUrlField;
        
        private string expirationDateField;
        
        private bool logFilesExistField;
        
        /// <remarks/>
        public bool Supported {
            get {
                return this.supportedField;
            }
            set {
                this.supportedField = value;
            }
        }
        
        /// <remarks/>
        public string LoggingUrl {
            get {
                return this.loggingUrlField;
            }
            set {
                this.loggingUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public bool LogFilesExist {
            get {
                return this.logFilesExistField;
            }
            set {
                this.logFilesExistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class ErrorPageResponse : HostingResponse {
        
        private string pageTypeField;
        
        private string pathField;
        
        private string fileNameField;
        
        private int errorNumberField;
        
        /// <remarks/>
        public string PageType {
            get {
                return this.pageTypeField;
            }
            set {
                this.pageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DomainManagementResponse : HostingResponse {
        
        private string accountDomainsField;
        
        private string[] warningsField;
        
        private bool domainNameChangeAllowedField;
        
        private string[] modifiedDomainsField;
        
        /// <remarks/>
        public string AccountDomains {
            get {
                return this.accountDomainsField;
            }
            set {
                this.accountDomainsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
        
        /// <remarks/>
        public bool DomainNameChangeAllowed {
            get {
                return this.domainNameChangeAllowedField;
            }
            set {
                this.domainNameChangeAllowedField = value;
            }
        }
        
        /// <remarks/>
        public string[] ModifiedDomains {
            get {
                return this.modifiedDomainsField;
            }
            set {
                this.modifiedDomainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DatabaseResponse : HostingResponse {
        
        private DatabaseRecord databaseField;
        
        /// <remarks/>
        public DatabaseRecord Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DatabasesResponse : HostingResponse {
        
        private DatabaseRecord[] databasesField;
        
        /// <remarks/>
        public DatabaseRecord[] Databases {
            get {
                return this.databasesField;
            }
            set {
                this.databasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccessDSNResponse : HostingResponse {
        
        private AccessDSN accessDsnField;
        
        /// <remarks/>
        public AccessDSN AccessDsn {
            get {
                return this.accessDsnField;
            }
            set {
                this.accessDsnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccessDSNsResponse : HostingResponse {
        
        private AccessDSN[] accessDsnsField;
        
        /// <remarks/>
        public AccessDSN[] AccessDsns {
            get {
                return this.accessDsnsField;
            }
            set {
                this.accessDsnsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class AccessEnabledResponse : HostingResponse {
        
        private bool enabledField;
        
        private bool canBeModifiedField;
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public bool CanBeModified {
            get {
                return this.canBeModifiedField;
            }
            set {
                this.canBeModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class BackupsResponse : HostingResponse {
        
        private Backup[] backupsField;
        
        /// <remarks/>
        public Backup[] Backups {
            get {
                return this.backupsField;
            }
            set {
                this.backupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class DatabaseUsage : HostingResponse {
        
        private int availableField;
        
        private int usedField;
        
        private int totalField;
        
        /// <remarks/>
        public int Available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        public int Used {
            get {
                return this.usedField;
            }
            set {
                this.usedField = value;
            }
        }
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class StatisticsResponse : HostingResponse {
        
        private string graphDataXmlField;
        
        /// <remarks/>
        public string GraphDataXml {
            get {
                return this.graphDataXmlField;
            }
            set {
                this.graphDataXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class WebStatsResponse : HostingResponse {
        
        private StatsType statsTypeField;
        
        private bool enabledField;
        
        private string usernameField;
        
        private string urlField;
        
        /// <remarks/>
        public StatsType StatsType {
            get {
                return this.statsTypeField;
            }
            set {
                this.statsTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum StatsType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        FreeWebStats,
        
        /// <remarks/>
        SiteAnalytics,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class PasswordVaultResponse : HostingResponse {
        
        private PasswordVaultEntry[] passwordVaultEntriesField;
        
        private int affectedRowsField;
        
        /// <remarks/>
        public PasswordVaultEntry[] PasswordVaultEntries {
            get {
                return this.passwordVaultEntriesField;
            }
            set {
                this.passwordVaultEntriesField = value;
            }
        }
        
        /// <remarks/>
        public int AffectedRows {
            get {
                return this.affectedRowsField;
            }
            set {
                this.affectedRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class IISSettingsResponse : HostingResponse {
        
        private string[] upgradePathsField;
        
        /// <remarks/>
        public string[] UpgradePaths {
            get {
                return this.upgradePathsField;
            }
            set {
                this.upgradePathsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public partial class VirtualDirectoriesResponse : HostingResponse {
        
        private HCCVirtualDirectory[] directoriesField;
        
        private string[] invalidPathsField;
        
        private string[] errorsField;
        
        /// <remarks/>
        public HCCVirtualDirectory[] Directories {
            get {
                return this.directoriesField;
            }
            set {
                this.directoriesField = value;
            }
        }
        
        /// <remarks/>
        public string[] InvalidPaths {
            get {
                return this.invalidPathsField;
            }
            set {
                this.invalidPathsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum BillingCycle {
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Previous,
        
        /// <remarks/>
        Both,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum DomainType {
        
        /// <remarks/>
        Domain,
        
        /// <remarks/>
        Subdomain,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum ErrorBehaviorPageType {
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        Custom,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum IISVersion {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        IIS6,
        
        /// <remarks/>
        IIS7,
        
        /// <remarks/>
        IIS75,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum ASPDotNetVersion {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        DotNet11,
        
        /// <remarks/>
        DotNet35,
        
        /// <remarks/>
        DotNet40,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum PHPVersion {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        PHP4,
        
        /// <remarks/>
        PHP5,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://hosting.starfieldtech.com/schemas/hostingapiservices/")]
    public enum PipeLineMode {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Classic,
        
        /// <remarks/>
        Integrated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditVirtualDirectoriesCompletedEventHandler(object sender, EditVirtualDirectoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditVirtualDirectoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditVirtualDirectoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VirtualDirectoriesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VirtualDirectoriesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpgradeToIISVersion7CompletedEventHandler(object sender, UpgradeToIISVersion7CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpgradeToIISVersion7CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpgradeToIISVersion7CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IISSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IISSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWebServiceVersionCompletedEventHandler(object sender, GetWebServiceVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebServiceVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebServiceVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestLoggingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetFormMailCompletedEventHandler(object sender, SetFormMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFormMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFormMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPasswordVaultEntriesCompletedEventHandler(object sender, GetPasswordVaultEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordVaultEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordVaultEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PasswordVaultResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PasswordVaultResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetPasswordVaultEntryCompletedEventHandler(object sender, SetPasswordVaultEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPasswordVaultEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPasswordVaultEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditPasswordVaultEntryCompletedEventHandler(object sender, EditPasswordVaultEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPasswordVaultEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPasswordVaultEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemovePasswordVaultEntryCompletedEventHandler(object sender, RemovePasswordVaultEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovePasswordVaultEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovePasswordVaultEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveAllPasswordVaultEntriesCompletedEventHandler(object sender, RemoveAllPasswordVaultEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAllPasswordVaultEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAllPasswordVaultEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PasswordVaultResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PasswordVaultResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemovePasswordVaultEntriesByApplicationCompletedEventHandler(object sender, RemovePasswordVaultEntriesByApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovePasswordVaultEntriesByApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovePasswordVaultEntriesByApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PasswordVaultResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PasswordVaultResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWebStatisticsInfoCompletedEventHandler(object sender, GetWebStatisticsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebStatisticsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebStatisticsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebStatsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebStatsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnableSiteStatisticsCompletedEventHandler(object sender, EnableSiteStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableSiteStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableSiteStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DisableSiteStatisticsCompletedEventHandler(object sender, DisableSiteStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableSiteStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableSiteStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResetWebStatisticsCompletedEventHandler(object sender, ResetWebStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetWebStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetWebStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsUsingSiteAnalyticsCompletedEventHandler(object sender, IsUsingSiteAnalyticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsingSiteAnalyticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsingSiteAnalyticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteAnalyticsUrlCompletedEventHandler(object sender, GetSiteAnalyticsUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteAnalyticsUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteAnalyticsUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyWebStatisticsCredentialsCompletedEventHandler(object sender, ModifyWebStatisticsCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyWebStatisticsCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyWebStatisticsCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStatisticsPasswordCompletedEventHandler(object sender, GetStatisticsPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticsPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisticsPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EMailWebStatisticsPasswordCompletedEventHandler(object sender, EMailWebStatisticsPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EMailWebStatisticsPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EMailWebStatisticsPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFreeWebStatsUrlCompletedEventHandler(object sender, GetFreeWebStatsUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreeWebStatsUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreeWebStatsUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFreeWebStatsLogUrlCompletedEventHandler(object sender, GetFreeWebStatsLogUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreeWebStatsLogUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreeWebStatsLogUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBandwidthStatisticsCompletedEventHandler(object sender, GetBandwidthStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBandwidthStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBandwidthStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatisticsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatisticsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDiskSpaceStatisticsCompletedEventHandler(object sender, GetDiskSpaceStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiskSpaceStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiskSpaceStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatisticsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatisticsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDatabaseUsageInformationCompletedEventHandler(object sender, GetDatabaseUsageInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseUsageInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseUsageInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseUsage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseUsage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeDatabasePasswordCompletedEventHandler(object sender, ChangeDatabasePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeDatabasePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeDatabasePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailableBackupsCompletedEventHandler(object sender, GetAvailableBackupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableBackupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableBackupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BackupsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BackupsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsAccessEnabledCompletedEventHandler(object sender, IsAccessEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAccessEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAccessEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessEnabledResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessEnabledResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnableAccessSupportCompletedEventHandler(object sender, EnableAccessSupportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableAccessSupportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableAccessSupportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveAccessSupportCompletedEventHandler(object sender, RemoveAccessSupportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAccessSupportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAccessSupportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateAccessDSNCompletedEventHandler(object sender, CreateAccessDSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccessDSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccessDSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveAccessDSNCompletedEventHandler(object sender, RemoveAccessDSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAccessDSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAccessDSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccessDSNListCompletedEventHandler(object sender, GetAccessDSNListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessDSNListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessDSNListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessDSNsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessDSNsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccessDSNCompletedEventHandler(object sender, GetAccessDSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessDSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessDSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessDSNResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessDSNResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDatabaseListCompletedEventHandler(object sender, GetDatabaseListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabasesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabasesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDatabaseByNameCompletedEventHandler(object sender, GetDatabaseByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDatabaseExtendedCompletedEventHandler(object sender, CreateDatabaseExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDatabaseExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDatabaseExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InstallDSNCompletedEventHandler(object sender, InstallDSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallDSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallDSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDSNCompletedEventHandler(object sender, RemoveDSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InstallASPSchemaCompletedEventHandler(object sender, InstallASPSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallASPSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallASPSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveASPSchemaCompletedEventHandler(object sender, RemoveASPSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveASPSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveASPSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountDomainsCompletedEventHandler(object sender, GetAccountDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHostingSupportForDomainChangeCompletedEventHandler(object sender, GetHostingSupportForDomainChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHostingSupportForDomainChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHostingSupportForDomainChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDNSSupportForDomainChangeCompletedEventHandler(object sender, GetDNSSupportForDomainChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDNSSupportForDomainChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDNSSupportForDomainChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeDomainNameCompletedEventHandler(object sender, ChangeDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddDomainsByListCompletedEventHandler(object sender, AddDomainsByListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDomainsByListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDomainsByListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddDomainCompletedEventHandler(object sender, AddDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddDomainsCompletedEventHandler(object sender, AddDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditDomainCompletedEventHandler(object sender, EditDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditDomainsCompletedEventHandler(object sender, EditDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditDomainsByListCompletedEventHandler(object sender, EditDomainsByListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDomainsByListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDomainsByListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDomainsByListCompletedEventHandler(object sender, RemoveDomainsByListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDomainsByListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDomainsByListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDomainCompletedEventHandler(object sender, RemoveDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDomainsCompletedEventHandler(object sender, RemoveDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddApplicationSubdomainsCompletedEventHandler(object sender, AddApplicationSubdomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddApplicationSubdomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddApplicationSubdomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainManagementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainManagementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get404ErrorBehaviorCompletedEventHandler(object sender, Get404ErrorBehaviorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get404ErrorBehaviorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get404ErrorBehaviorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorPageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorPageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Set404ErrorBehaviorCompletedEventHandler(object sender, Set404ErrorBehaviorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set404ErrorBehaviorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Set404ErrorBehaviorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetErrorPageBehaviorCompletedEventHandler(object sender, GetErrorPageBehaviorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorPageBehaviorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorPageBehaviorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorPageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorPageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetErrorBehaviorCompletedEventHandler(object sender, SetErrorBehaviorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetErrorBehaviorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetErrorBehaviorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorPageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorPageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetErrorLoggingInfoCompletedEventHandler(object sender, GetErrorLoggingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorLoggingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorLoggingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLoggingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLoggingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetErrorLoggingExpirationCompletedEventHandler(object sender, SetErrorLoggingExpirationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetErrorLoggingExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetErrorLoggingExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLoggingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLoggingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsFTPUserManagementSupportedCompletedEventHandler(object sender, IsFTPUserManagementSupportedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsFTPUserManagementSupportedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsFTPUserManagementSupportedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SupportedResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SupportedResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFTPUserLimitCompletedEventHandler(object sender, GetFTPUserLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPUserLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPUserLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPUserLimitResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPUserLimitResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountInfoCompletedEventHandler(object sender, GetAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPAccountResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPAccountResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailablePathsCompletedEventHandler(object sender, GetAvailablePathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailablePathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailablePathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPGetAvailablePathsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPGetAvailablePathsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFTPUsersCompletedEventHandler(object sender, GetFTPUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddFTPUserCompletedEventHandler(object sender, AddFTPUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFTPUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFTPUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserInfoByAccountCompletedEventHandler(object sender, UpdateUserInfoByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FTPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FTPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveUserCompletedEventHandler(object sender, RemoveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveUserByAccountCompletedEventHandler(object sender, RemoveUserByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStatusCodesCompletedEventHandler(object sender, GetStatusCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsIISAvailableCompletedEventHandler(object sender, IsIISAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsIISAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsIISAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IISSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IISSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVirtualDirectoriesCompletedEventHandler(object sender, GetVirtualDirectoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVirtualDirectoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVirtualDirectoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VirtualDirectoriesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VirtualDirectoriesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsRecycleAppPoolAvailableCompletedEventHandler(object sender, IsRecycleAppPoolAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRecycleAppPoolAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRecycleAppPoolAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IISSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IISSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RecycleAppPoolCompletedEventHandler(object sender, RecycleAppPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecycleAppPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecycleAppPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IISSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IISSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateVirtualDirectoryCompletedEventHandler(object sender, CreateVirtualDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVirtualDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVirtualDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VirtualDirectoriesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VirtualDirectoriesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveVirtualDirectoryCompletedEventHandler(object sender, RemoveVirtualDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveVirtualDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveVirtualDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VirtualDirectoriesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VirtualDirectoriesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProductsCompletedEventHandler(object sender, GetProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountListCompletedEventHandler(object sender, GetAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedAccountListCompletedEventHandler(object sender, GetPagedAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrionPagedAccountListCompletedEventHandler(object sender, GetOrionPagedAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrionPagedAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrionPagedAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHostingListByProductsCompletedEventHandler(object sender, GetHostingListByProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHostingListByProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHostingListByProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedHostingListByProductsCompletedEventHandler(object sender, GetPagedHostingListByProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedHostingListByProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedHostingListByProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrionPagedHostingListByProductsCompletedEventHandler(object sender, GetOrionPagedHostingListByProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrionPagedHostingListByProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrionPagedHostingListByProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHostingListByProductCompletedEventHandler(object sender, GetHostingListByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHostingListByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHostingListByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedHostingListByProductCompletedEventHandler(object sender, GetPagedHostingListByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedHostingListByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedHostingListByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrionPagedHostingListByProductCompletedEventHandler(object sender, GetOrionPagedHostingListByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrionPagedHostingListByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrionPagedHostingListByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceAgreementCompletedEventHandler(object sender, GetServiceAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountSetupLicenseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountSetupLicenseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHostingAccountDetailsCompletedEventHandler(object sender, GetHostingAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHostingAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHostingAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingAccountDetailsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingAccountDetailsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountSetupOptionsCompletedEventHandler(object sender, GetAccountSetupOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountSetupOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountSetupOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountSetupOptionsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountSetupOptionsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailableDomainsCompletedEventHandler(object sender, GetAvailableDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AvailableDomainsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AvailableDomainsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainSettingsOptionsCompletedEventHandler(object sender, GetDomainSettingsOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainSettingsOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainSettingsOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsUsernameValidCompletedEventHandler(object sender, IsUsernameValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUsernameValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUsernameValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingAccountSetupResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingAccountSetupResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsPasswordValidCompletedEventHandler(object sender, IsPasswordValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPasswordValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPasswordValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingAccountSetupResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingAccountSetupResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetUpWordpressHostingAccountCompletedEventHandler(object sender, SetUpWordpressHostingAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUpWordpressHostingAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUpWordpressHostingAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingAccountSetupResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingAccountSetupResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetUpWebsiteTonightAccountCompletedEventHandler(object sender, SetUpWebsiteTonightAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUpWebsiteTonightAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUpWebsiteTonightAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingAccountSetupResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingAccountSetupResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetUpHostingAccountCompletedEventHandler(object sender, SetUpHostingAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUpHostingAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUpHostingAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingAccountSetupResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingAccountSetupResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailableSSLCertificatesInfoCompletedEventHandler(object sender, GetAvailableSSLCertificatesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableSSLCertificatesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableSSLCertificatesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSLCertificatesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSLCertificatesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadApplicationDetailsFieldsCompletedEventHandler(object sender, LoadApplicationDetailsFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadApplicationDetailsFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadApplicationDetailsFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuickInstallResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuickInstallResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountSummaryCompletedEventHandler(object sender, GetAccountSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountSummaryResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountSummaryResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnablePreviewDNSCompletedEventHandler(object sender, EnablePreviewDNSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnablePreviewDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnablePreviewDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DNSMakeSiteLiveCompletedEventHandler(object sender, DNSMakeSiteLiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DNSMakeSiteLiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DNSMakeSiteLiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAddOnLanguageOptionsCompletedEventHandler(object sender, GetAddOnLanguageOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddOnLanguageOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddOnLanguageOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddOnLanguagesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddOnLanguagesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetDotNetVersionCompletedEventHandler(object sender, SetDotNetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDotNetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDotNetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetPHPVersionCompletedEventHandler(object sender, SetPHPVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPHPVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPHPVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddColdFusionCompletedEventHandler(object sender, AddColdFusionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddColdFusionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddColdFusionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveColdFusionCompletedEventHandler(object sender, RemoveColdFusionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveColdFusionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveColdFusionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeHostingAccountPasswordCompletedEventHandler(object sender, ChangeHostingAccountPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeHostingAccountPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeHostingAccountPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangeHostingPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangeHostingPasswordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AreAccountsInSyncCompletedEventHandler(object sender, AreAccountsInSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreAccountsInSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AreAccountsInSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangeHostingPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangeHostingPasswordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveDatabaseCompletedEventHandler(object sender, RemoveDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackupDatabaseCompletedEventHandler(object sender, BackupDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDatabaseDescriptionCompletedEventHandler(object sender, UpdateDatabaseDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDatabaseDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDatabaseDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDatabaseDescriptionBCompletedEventHandler(object sender, UpdateDatabaseDescriptionBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDatabaseDescriptionBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDatabaseDescriptionBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreDatabaseCompletedEventHandler(object sender, RestoreDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDatabaseCompletedEventHandler(object sender, CreateDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDatabaseCompletedEventHandler(object sender, GetDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Database Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Database)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveBackupContentCompletedEventHandler(object sender, RemoveBackupContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveBackupContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveBackupContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HostingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HostingResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591