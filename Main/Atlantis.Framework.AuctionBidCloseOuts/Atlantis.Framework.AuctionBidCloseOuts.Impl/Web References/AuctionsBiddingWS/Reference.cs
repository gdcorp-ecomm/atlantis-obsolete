//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.AuctionBidCloseOuts.Impl.AuctionsBiddingWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GdAuctionsBiddingWSSoap", Namespace="GdAuctionsBiddingWS")]
    public partial class GdAuctionsBiddingWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServiceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBidCloseOutsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBidWithPurchaseProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionDetailsByDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionListByAuctionTypeAdultBidsCloseDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionListByAuctionTypeAdultFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionListByAuctionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GdAuctionsBiddingWS() {
            this.Url = global::Atlantis.Framework.AuctionBidCloseOuts.Impl.Properties.Settings.Default.Atlantis_Framework_AuctionBidCloseOuts_Impl_GdAuctionsBiddingWS_GdAuctionsBiddingWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServiceStatusCompletedEventHandler GetServiceStatusCompleted;
        
        /// <remarks/>
        public event PlaceBidCloseOutsCompletedEventHandler PlaceBidCloseOutsCompleted;
        
        /// <remarks/>
        public event PlaceBidCompletedEventHandler PlaceBidCompleted;
        
        /// <remarks/>
        public event PlaceBidWithPurchaseProfileCompletedEventHandler PlaceBidWithPurchaseProfileCompleted;
        
        /// <remarks/>
        public event GetAuctionDetailsCompletedEventHandler GetAuctionDetailsCompleted;
        
        /// <remarks/>
        public event GetAuctionDetailsByDomainNameCompletedEventHandler GetAuctionDetailsByDomainNameCompleted;
        
        /// <remarks/>
        public event GetAuctionListByAuctionTypeAdultBidsCloseDaysCompletedEventHandler GetAuctionListByAuctionTypeAdultBidsCloseDaysCompleted;
        
        /// <remarks/>
        public event GetAuctionListByAuctionTypeAdultFilterCompletedEventHandler GetAuctionListByAuctionTypeAdultFilterCompleted;
        
        /// <remarks/>
        public event GetAuctionListByAuctionTypeCompletedEventHandler GetAuctionListByAuctionTypeCompleted;
        
        /// <remarks/>
        public event GetAuctionListCompletedEventHandler GetAuctionListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetServiceStatus", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceStatus() {
            object[] results = this.Invoke("GetServiceStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceStatusAsync() {
            this.GetServiceStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceStatusAsync(object userState) {
            if ((this.GetServiceStatusOperationCompleted == null)) {
                this.GetServiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceStatusOperationCompleted);
            }
            this.InvokeAsync("GetServiceStatus", new object[0], this.GetServiceStatusOperationCompleted, userState);
        }
        
        private void OnGetServiceStatusOperationCompleted(object arg) {
            if ((this.GetServiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceStatusCompleted(this, new GetServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/PlaceBidCloseOuts", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBidCloseOuts(string biddingShopperID, bool isShopperAuth, string domainName) {
            object[] results = this.Invoke("PlaceBidCloseOuts", new object[] {
                        biddingShopperID,
                        isShopperAuth,
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBidCloseOutsAsync(string biddingShopperID, bool isShopperAuth, string domainName) {
            this.PlaceBidCloseOutsAsync(biddingShopperID, isShopperAuth, domainName, null);
        }
        
        /// <remarks/>
        public void PlaceBidCloseOutsAsync(string biddingShopperID, bool isShopperAuth, string domainName, object userState) {
            if ((this.PlaceBidCloseOutsOperationCompleted == null)) {
                this.PlaceBidCloseOutsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBidCloseOutsOperationCompleted);
            }
            this.InvokeAsync("PlaceBidCloseOuts", new object[] {
                        biddingShopperID,
                        isShopperAuth,
                        domainName}, this.PlaceBidCloseOutsOperationCompleted, userState);
        }
        
        private void OnPlaceBidCloseOutsOperationCompleted(object arg) {
            if ((this.PlaceBidCloseOutsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBidCloseOutsCompleted(this, new PlaceBidCloseOutsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/PlaceBid", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBid(string sourceSystemID, string biddingShopperID, string password, string domainName, int bidAmount, string bidComments) {
            object[] results = this.Invoke("PlaceBid", new object[] {
                        sourceSystemID,
                        biddingShopperID,
                        password,
                        domainName,
                        bidAmount,
                        bidComments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBidAsync(string sourceSystemID, string biddingShopperID, string password, string domainName, int bidAmount, string bidComments) {
            this.PlaceBidAsync(sourceSystemID, biddingShopperID, password, domainName, bidAmount, bidComments, null);
        }
        
        /// <remarks/>
        public void PlaceBidAsync(string sourceSystemID, string biddingShopperID, string password, string domainName, int bidAmount, string bidComments, object userState) {
            if ((this.PlaceBidOperationCompleted == null)) {
                this.PlaceBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBidOperationCompleted);
            }
            this.InvokeAsync("PlaceBid", new object[] {
                        sourceSystemID,
                        biddingShopperID,
                        password,
                        domainName,
                        bidAmount,
                        bidComments}, this.PlaceBidOperationCompleted, userState);
        }
        
        private void OnPlaceBidOperationCompleted(object arg) {
            if ((this.PlaceBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBidCompleted(this, new PlaceBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/PlaceBidWithPurchaseProfile", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBidWithPurchaseProfile(string sourceSystemID, string biddingShopperID, string password, string domainName, int bidAmount, string bidComments, string useMyPurchaseProfile) {
            object[] results = this.Invoke("PlaceBidWithPurchaseProfile", new object[] {
                        sourceSystemID,
                        biddingShopperID,
                        password,
                        domainName,
                        bidAmount,
                        bidComments,
                        useMyPurchaseProfile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBidWithPurchaseProfileAsync(string sourceSystemID, string biddingShopperID, string password, string domainName, int bidAmount, string bidComments, string useMyPurchaseProfile) {
            this.PlaceBidWithPurchaseProfileAsync(sourceSystemID, biddingShopperID, password, domainName, bidAmount, bidComments, useMyPurchaseProfile, null);
        }
        
        /// <remarks/>
        public void PlaceBidWithPurchaseProfileAsync(string sourceSystemID, string biddingShopperID, string password, string domainName, int bidAmount, string bidComments, string useMyPurchaseProfile, object userState) {
            if ((this.PlaceBidWithPurchaseProfileOperationCompleted == null)) {
                this.PlaceBidWithPurchaseProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBidWithPurchaseProfileOperationCompleted);
            }
            this.InvokeAsync("PlaceBidWithPurchaseProfile", new object[] {
                        sourceSystemID,
                        biddingShopperID,
                        password,
                        domainName,
                        bidAmount,
                        bidComments,
                        useMyPurchaseProfile}, this.PlaceBidWithPurchaseProfileOperationCompleted, userState);
        }
        
        private void OnPlaceBidWithPurchaseProfileOperationCompleted(object arg) {
            if ((this.PlaceBidWithPurchaseProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBidWithPurchaseProfileCompleted(this, new PlaceBidWithPurchaseProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetAuctionDetails", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionDetails(string sourceSystemID, string shopperID, string password, string domainName) {
            object[] results = this.Invoke("GetAuctionDetails", new object[] {
                        sourceSystemID,
                        shopperID,
                        password,
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionDetailsAsync(string sourceSystemID, string shopperID, string password, string domainName) {
            this.GetAuctionDetailsAsync(sourceSystemID, shopperID, password, domainName, null);
        }
        
        /// <remarks/>
        public void GetAuctionDetailsAsync(string sourceSystemID, string shopperID, string password, string domainName, object userState) {
            if ((this.GetAuctionDetailsOperationCompleted == null)) {
                this.GetAuctionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAuctionDetails", new object[] {
                        sourceSystemID,
                        shopperID,
                        password,
                        domainName}, this.GetAuctionDetailsOperationCompleted, userState);
        }
        
        private void OnGetAuctionDetailsOperationCompleted(object arg) {
            if ((this.GetAuctionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionDetailsCompleted(this, new GetAuctionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetAuctionDetailsByDomainName", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionDetailsByDomainName(string domainName) {
            object[] results = this.Invoke("GetAuctionDetailsByDomainName", new object[] {
                        domainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionDetailsByDomainNameAsync(string domainName) {
            this.GetAuctionDetailsByDomainNameAsync(domainName, null);
        }
        
        /// <remarks/>
        public void GetAuctionDetailsByDomainNameAsync(string domainName, object userState) {
            if ((this.GetAuctionDetailsByDomainNameOperationCompleted == null)) {
                this.GetAuctionDetailsByDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionDetailsByDomainNameOperationCompleted);
            }
            this.InvokeAsync("GetAuctionDetailsByDomainName", new object[] {
                        domainName}, this.GetAuctionDetailsByDomainNameOperationCompleted, userState);
        }
        
        private void OnGetAuctionDetailsByDomainNameOperationCompleted(object arg) {
            if ((this.GetAuctionDetailsByDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionDetailsByDomainNameCompleted(this, new GetAuctionDetailsByDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetAuctionListByAuctionTypeAdultBidsCloseDays", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionListByAuctionTypeAdultBidsCloseDays(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, string includeAdultNames, string hasBids, int closeDaysOut) {
            object[] results = this.Invoke("GetAuctionListByAuctionTypeAdultBidsCloseDays", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword,
                        auctionType,
                        includeAdultNames,
                        hasBids,
                        closeDaysOut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionListByAuctionTypeAdultBidsCloseDaysAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, string includeAdultNames, string hasBids, int closeDaysOut) {
            this.GetAuctionListByAuctionTypeAdultBidsCloseDaysAsync(pageNumber, rowsPerPage, beginsWithKeyword, auctionType, includeAdultNames, hasBids, closeDaysOut, null);
        }
        
        /// <remarks/>
        public void GetAuctionListByAuctionTypeAdultBidsCloseDaysAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, string includeAdultNames, string hasBids, int closeDaysOut, object userState) {
            if ((this.GetAuctionListByAuctionTypeAdultBidsCloseDaysOperationCompleted == null)) {
                this.GetAuctionListByAuctionTypeAdultBidsCloseDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionListByAuctionTypeAdultBidsCloseDaysOperationCompleted);
            }
            this.InvokeAsync("GetAuctionListByAuctionTypeAdultBidsCloseDays", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword,
                        auctionType,
                        includeAdultNames,
                        hasBids,
                        closeDaysOut}, this.GetAuctionListByAuctionTypeAdultBidsCloseDaysOperationCompleted, userState);
        }
        
        private void OnGetAuctionListByAuctionTypeAdultBidsCloseDaysOperationCompleted(object arg) {
            if ((this.GetAuctionListByAuctionTypeAdultBidsCloseDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionListByAuctionTypeAdultBidsCloseDaysCompleted(this, new GetAuctionListByAuctionTypeAdultBidsCloseDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetAuctionListByAuctionTypeAdultFilter", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionListByAuctionTypeAdultFilter(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, string includeAdultNames) {
            object[] results = this.Invoke("GetAuctionListByAuctionTypeAdultFilter", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword,
                        auctionType,
                        includeAdultNames});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionListByAuctionTypeAdultFilterAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, string includeAdultNames) {
            this.GetAuctionListByAuctionTypeAdultFilterAsync(pageNumber, rowsPerPage, beginsWithKeyword, auctionType, includeAdultNames, null);
        }
        
        /// <remarks/>
        public void GetAuctionListByAuctionTypeAdultFilterAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, string includeAdultNames, object userState) {
            if ((this.GetAuctionListByAuctionTypeAdultFilterOperationCompleted == null)) {
                this.GetAuctionListByAuctionTypeAdultFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionListByAuctionTypeAdultFilterOperationCompleted);
            }
            this.InvokeAsync("GetAuctionListByAuctionTypeAdultFilter", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword,
                        auctionType,
                        includeAdultNames}, this.GetAuctionListByAuctionTypeAdultFilterOperationCompleted, userState);
        }
        
        private void OnGetAuctionListByAuctionTypeAdultFilterOperationCompleted(object arg) {
            if ((this.GetAuctionListByAuctionTypeAdultFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionListByAuctionTypeAdultFilterCompleted(this, new GetAuctionListByAuctionTypeAdultFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetAuctionListByAuctionType", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionListByAuctionType(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType) {
            object[] results = this.Invoke("GetAuctionListByAuctionType", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword,
                        auctionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionListByAuctionTypeAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType) {
            this.GetAuctionListByAuctionTypeAsync(pageNumber, rowsPerPage, beginsWithKeyword, auctionType, null);
        }
        
        /// <remarks/>
        public void GetAuctionListByAuctionTypeAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, string auctionType, object userState) {
            if ((this.GetAuctionListByAuctionTypeOperationCompleted == null)) {
                this.GetAuctionListByAuctionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionListByAuctionTypeOperationCompleted);
            }
            this.InvokeAsync("GetAuctionListByAuctionType", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword,
                        auctionType}, this.GetAuctionListByAuctionTypeOperationCompleted, userState);
        }
        
        private void OnGetAuctionListByAuctionTypeOperationCompleted(object arg) {
            if ((this.GetAuctionListByAuctionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionListByAuctionTypeCompleted(this, new GetAuctionListByAuctionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GdAuctionsBiddingWS/GetAuctionList", RequestNamespace="GdAuctionsBiddingWS", ResponseNamespace="GdAuctionsBiddingWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionList(string pageNumber, string rowsPerPage, string beginsWithKeyword) {
            object[] results = this.Invoke("GetAuctionList", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionListAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword) {
            this.GetAuctionListAsync(pageNumber, rowsPerPage, beginsWithKeyword, null);
        }
        
        /// <remarks/>
        public void GetAuctionListAsync(string pageNumber, string rowsPerPage, string beginsWithKeyword, object userState) {
            if ((this.GetAuctionListOperationCompleted == null)) {
                this.GetAuctionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionListOperationCompleted);
            }
            this.InvokeAsync("GetAuctionList", new object[] {
                        pageNumber,
                        rowsPerPage,
                        beginsWithKeyword}, this.GetAuctionListOperationCompleted, userState);
        }
        
        private void OnGetAuctionListOperationCompleted(object arg) {
            if ((this.GetAuctionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionListCompleted(this, new GetAuctionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceStatusCompletedEventHandler(object sender, GetServiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceBidCloseOutsCompletedEventHandler(object sender, PlaceBidCloseOutsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBidCloseOutsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBidCloseOutsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceBidCompletedEventHandler(object sender, PlaceBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceBidWithPurchaseProfileCompletedEventHandler(object sender, PlaceBidWithPurchaseProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBidWithPurchaseProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBidWithPurchaseProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionDetailsCompletedEventHandler(object sender, GetAuctionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionDetailsByDomainNameCompletedEventHandler(object sender, GetAuctionDetailsByDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionDetailsByDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionDetailsByDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionListByAuctionTypeAdultBidsCloseDaysCompletedEventHandler(object sender, GetAuctionListByAuctionTypeAdultBidsCloseDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionListByAuctionTypeAdultBidsCloseDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionListByAuctionTypeAdultBidsCloseDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionListByAuctionTypeAdultFilterCompletedEventHandler(object sender, GetAuctionListByAuctionTypeAdultFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionListByAuctionTypeAdultFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionListByAuctionTypeAdultFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionListByAuctionTypeCompletedEventHandler(object sender, GetAuctionListByAuctionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionListByAuctionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionListByAuctionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionListCompletedEventHandler(object sender, GetAuctionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591