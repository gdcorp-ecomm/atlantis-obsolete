//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.ShopperPriceType.Impl.WSgdBillingData {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSgdBillingDataServiceSoap", Namespace="urn:WSgdBillingDataService")]
    public partial class WSgdBillingDataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDomainFromAccountGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentFromAccountGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentGUIDForAddOnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalResourceIDByBillingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDomainBillingRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProtectionIDForDomainIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceIDForShopperIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShopperPriceTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSgdBillingDataService() {
            this.Url = global::Atlantis.Framework.ShopperPriceType.Impl.Properties.Settings.Default.Atlantis_Framework_ShopperPriceType_Impl_WSgdBillingData_WSgdBillingDataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDomainFromAccountGUIDCompletedEventHandler GetDomainFromAccountGUIDCompleted;
        
        /// <remarks/>
        public event GetParentFromAccountGUIDCompletedEventHandler GetParentFromAccountGUIDCompleted;
        
        /// <remarks/>
        public event GetParentGUIDForAddOnCompletedEventHandler GetParentGUIDForAddOnCompleted;
        
        /// <remarks/>
        public event GetExternalResourceIDByBillingIDCompletedEventHandler GetExternalResourceIDByBillingIDCompleted;
        
        /// <remarks/>
        public event CreateDomainBillingRecordCompletedEventHandler CreateDomainBillingRecordCompleted;
        
        /// <remarks/>
        public event GetProtectionIDForDomainIDCompletedEventHandler GetProtectionIDForDomainIDCompleted;
        
        /// <remarks/>
        public event GetResourceIDForShopperIDCompletedEventHandler GetResourceIDForShopperIDCompleted;
        
        /// <remarks/>
        public event GetShopperPriceTypeCompletedEventHandler GetShopperPriceTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetDomainFromAccountGUID", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDomainFromAccountGUID(string bstrExternalResourceID, out string bstrError) {
            object[] results = this.Invoke("GetDomainFromAccountGUID", new object[] {
                        bstrExternalResourceID});
            bstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDomainFromAccountGUID(string bstrExternalResourceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDomainFromAccountGUID", new object[] {
                        bstrExternalResourceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDomainFromAccountGUID(System.IAsyncResult asyncResult, out string bstrError) {
            object[] results = this.EndInvoke(asyncResult);
            bstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainFromAccountGUIDAsync(string bstrExternalResourceID) {
            this.GetDomainFromAccountGUIDAsync(bstrExternalResourceID, null);
        }
        
        /// <remarks/>
        public void GetDomainFromAccountGUIDAsync(string bstrExternalResourceID, object userState) {
            if ((this.GetDomainFromAccountGUIDOperationCompleted == null)) {
                this.GetDomainFromAccountGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainFromAccountGUIDOperationCompleted);
            }
            this.InvokeAsync("GetDomainFromAccountGUID", new object[] {
                        bstrExternalResourceID}, this.GetDomainFromAccountGUIDOperationCompleted, userState);
        }
        
        private void OnGetDomainFromAccountGUIDOperationCompleted(object arg) {
            if ((this.GetDomainFromAccountGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainFromAccountGUIDCompleted(this, new GetDomainFromAccountGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetParentFromAccountGUID", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetParentFromAccountGUID(string bstrExternalResourceID, out int lParentType, out string bstrError) {
            object[] results = this.Invoke("GetParentFromAccountGUID", new object[] {
                        bstrExternalResourceID});
            lParentType = ((int)(results[1]));
            bstrError = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParentFromAccountGUID(string bstrExternalResourceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParentFromAccountGUID", new object[] {
                        bstrExternalResourceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetParentFromAccountGUID(System.IAsyncResult asyncResult, out int lParentType, out string bstrError) {
            object[] results = this.EndInvoke(asyncResult);
            lParentType = ((int)(results[1]));
            bstrError = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentFromAccountGUIDAsync(string bstrExternalResourceID) {
            this.GetParentFromAccountGUIDAsync(bstrExternalResourceID, null);
        }
        
        /// <remarks/>
        public void GetParentFromAccountGUIDAsync(string bstrExternalResourceID, object userState) {
            if ((this.GetParentFromAccountGUIDOperationCompleted == null)) {
                this.GetParentFromAccountGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentFromAccountGUIDOperationCompleted);
            }
            this.InvokeAsync("GetParentFromAccountGUID", new object[] {
                        bstrExternalResourceID}, this.GetParentFromAccountGUIDOperationCompleted, userState);
        }
        
        private void OnGetParentFromAccountGUIDOperationCompleted(object arg) {
            if ((this.GetParentFromAccountGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentFromAccountGUIDCompleted(this, new GetParentFromAccountGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetParentGUIDForAddOn", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetParentGUIDForAddOn(int lAddOnResourceID, out string bstrError) {
            object[] results = this.Invoke("GetParentGUIDForAddOn", new object[] {
                        lAddOnResourceID});
            bstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParentGUIDForAddOn(int lAddOnResourceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParentGUIDForAddOn", new object[] {
                        lAddOnResourceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetParentGUIDForAddOn(System.IAsyncResult asyncResult, out string bstrError) {
            object[] results = this.EndInvoke(asyncResult);
            bstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentGUIDForAddOnAsync(int lAddOnResourceID) {
            this.GetParentGUIDForAddOnAsync(lAddOnResourceID, null);
        }
        
        /// <remarks/>
        public void GetParentGUIDForAddOnAsync(int lAddOnResourceID, object userState) {
            if ((this.GetParentGUIDForAddOnOperationCompleted == null)) {
                this.GetParentGUIDForAddOnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentGUIDForAddOnOperationCompleted);
            }
            this.InvokeAsync("GetParentGUIDForAddOn", new object[] {
                        lAddOnResourceID}, this.GetParentGUIDForAddOnOperationCompleted, userState);
        }
        
        private void OnGetParentGUIDForAddOnOperationCompleted(object arg) {
            if ((this.GetParentGUIDForAddOnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentGUIDForAddOnCompleted(this, new GetParentGUIDForAddOnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetExternalResourceIDByBillingID", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetExternalResourceIDByBillingID(int lResourceID, out string bstrError) {
            object[] results = this.Invoke("GetExternalResourceIDByBillingID", new object[] {
                        lResourceID});
            bstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExternalResourceIDByBillingID(int lResourceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExternalResourceIDByBillingID", new object[] {
                        lResourceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetExternalResourceIDByBillingID(System.IAsyncResult asyncResult, out string bstrError) {
            object[] results = this.EndInvoke(asyncResult);
            bstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalResourceIDByBillingIDAsync(int lResourceID) {
            this.GetExternalResourceIDByBillingIDAsync(lResourceID, null);
        }
        
        /// <remarks/>
        public void GetExternalResourceIDByBillingIDAsync(int lResourceID, object userState) {
            if ((this.GetExternalResourceIDByBillingIDOperationCompleted == null)) {
                this.GetExternalResourceIDByBillingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalResourceIDByBillingIDOperationCompleted);
            }
            this.InvokeAsync("GetExternalResourceIDByBillingID", new object[] {
                        lResourceID}, this.GetExternalResourceIDByBillingIDOperationCompleted, userState);
        }
        
        private void OnGetExternalResourceIDByBillingIDOperationCompleted(object arg) {
            if ((this.GetExternalResourceIDByBillingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalResourceIDByBillingIDCompleted(this, new GetExternalResourceIDByBillingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CreateDomainBillingRecord", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CreateDomainBillingRecord(string bstrInput) {
            object[] results = this.Invoke("CreateDomainBillingRecord", new object[] {
                        bstrInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDomainBillingRecord(string bstrInput, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDomainBillingRecord", new object[] {
                        bstrInput}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateDomainBillingRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDomainBillingRecordAsync(string bstrInput) {
            this.CreateDomainBillingRecordAsync(bstrInput, null);
        }
        
        /// <remarks/>
        public void CreateDomainBillingRecordAsync(string bstrInput, object userState) {
            if ((this.CreateDomainBillingRecordOperationCompleted == null)) {
                this.CreateDomainBillingRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDomainBillingRecordOperationCompleted);
            }
            this.InvokeAsync("CreateDomainBillingRecord", new object[] {
                        bstrInput}, this.CreateDomainBillingRecordOperationCompleted, userState);
        }
        
        private void OnCreateDomainBillingRecordOperationCompleted(object arg) {
            if ((this.CreateDomainBillingRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDomainBillingRecordCompleted(this, new CreateDomainBillingRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetProtectionIDForDomainID", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int GetProtectionIDForDomainID(int lDomainID, out string bstrError) {
            object[] results = this.Invoke("GetProtectionIDForDomainID", new object[] {
                        lDomainID});
            bstrError = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProtectionIDForDomainID(int lDomainID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProtectionIDForDomainID", new object[] {
                        lDomainID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetProtectionIDForDomainID(System.IAsyncResult asyncResult, out string bstrError) {
            object[] results = this.EndInvoke(asyncResult);
            bstrError = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetProtectionIDForDomainIDAsync(int lDomainID) {
            this.GetProtectionIDForDomainIDAsync(lDomainID, null);
        }
        
        /// <remarks/>
        public void GetProtectionIDForDomainIDAsync(int lDomainID, object userState) {
            if ((this.GetProtectionIDForDomainIDOperationCompleted == null)) {
                this.GetProtectionIDForDomainIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProtectionIDForDomainIDOperationCompleted);
            }
            this.InvokeAsync("GetProtectionIDForDomainID", new object[] {
                        lDomainID}, this.GetProtectionIDForDomainIDOperationCompleted, userState);
        }
        
        private void OnGetProtectionIDForDomainIDOperationCompleted(object arg) {
            if ((this.GetProtectionIDForDomainIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProtectionIDForDomainIDCompleted(this, new GetProtectionIDForDomainIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetResourceIDForShopperID", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetResourceIDForShopperID(string bstrShopperID, int lProductId) {
            object[] results = this.Invoke("GetResourceIDForShopperID", new object[] {
                        bstrShopperID,
                        lProductId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResourceIDForShopperID(string bstrShopperID, int lProductId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResourceIDForShopperID", new object[] {
                        bstrShopperID,
                        lProductId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetResourceIDForShopperID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceIDForShopperIDAsync(string bstrShopperID, int lProductId) {
            this.GetResourceIDForShopperIDAsync(bstrShopperID, lProductId, null);
        }
        
        /// <remarks/>
        public void GetResourceIDForShopperIDAsync(string bstrShopperID, int lProductId, object userState) {
            if ((this.GetResourceIDForShopperIDOperationCompleted == null)) {
                this.GetResourceIDForShopperIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceIDForShopperIDOperationCompleted);
            }
            this.InvokeAsync("GetResourceIDForShopperID", new object[] {
                        bstrShopperID,
                        lProductId}, this.GetResourceIDForShopperIDOperationCompleted, userState);
        }
        
        private void OnGetResourceIDForShopperIDOperationCompleted(object arg) {
            if ((this.GetResourceIDForShopperIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceIDForShopperIDCompleted(this, new GetResourceIDForShopperIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetShopperPriceType", RequestNamespace="urn:WSgdBillingDataService", ResponseNamespace="urn:WSgdBillingDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int GetShopperPriceType(string bstrShopperID, int lPrivateLabelID, out string bstrError) {
            object[] results = this.Invoke("GetShopperPriceType", new object[] {
                        bstrShopperID,
                        lPrivateLabelID});
            bstrError = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetShopperPriceType(string bstrShopperID, int lPrivateLabelID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetShopperPriceType", new object[] {
                        bstrShopperID,
                        lPrivateLabelID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetShopperPriceType(System.IAsyncResult asyncResult, out string bstrError) {
            object[] results = this.EndInvoke(asyncResult);
            bstrError = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShopperPriceTypeAsync(string bstrShopperID, int lPrivateLabelID) {
            this.GetShopperPriceTypeAsync(bstrShopperID, lPrivateLabelID, null);
        }
        
        /// <remarks/>
        public void GetShopperPriceTypeAsync(string bstrShopperID, int lPrivateLabelID, object userState) {
            if ((this.GetShopperPriceTypeOperationCompleted == null)) {
                this.GetShopperPriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShopperPriceTypeOperationCompleted);
            }
            this.InvokeAsync("GetShopperPriceType", new object[] {
                        bstrShopperID,
                        lPrivateLabelID}, this.GetShopperPriceTypeOperationCompleted, userState);
        }
        
        private void OnGetShopperPriceTypeOperationCompleted(object arg) {
            if ((this.GetShopperPriceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShopperPriceTypeCompleted(this, new GetShopperPriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainFromAccountGUIDCompletedEventHandler(object sender, GetDomainFromAccountGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainFromAccountGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainFromAccountGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetParentFromAccountGUIDCompletedEventHandler(object sender, GetParentFromAccountGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentFromAccountGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentFromAccountGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lParentType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string bstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetParentGUIDForAddOnCompletedEventHandler(object sender, GetParentGUIDForAddOnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentGUIDForAddOnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentGUIDForAddOnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExternalResourceIDByBillingIDCompletedEventHandler(object sender, GetExternalResourceIDByBillingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalResourceIDByBillingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalResourceIDByBillingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDomainBillingRecordCompletedEventHandler(object sender, CreateDomainBillingRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDomainBillingRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDomainBillingRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProtectionIDForDomainIDCompletedEventHandler(object sender, GetProtectionIDForDomainIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProtectionIDForDomainIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProtectionIDForDomainIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceIDForShopperIDCompletedEventHandler(object sender, GetResourceIDForShopperIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceIDForShopperIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceIDForShopperIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetShopperPriceTypeCompletedEventHandler(object sender, GetShopperPriceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShopperPriceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShopperPriceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591