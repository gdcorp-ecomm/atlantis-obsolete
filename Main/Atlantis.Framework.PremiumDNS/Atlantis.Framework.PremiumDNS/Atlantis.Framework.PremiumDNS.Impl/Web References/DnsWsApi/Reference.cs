//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.PremiumDNS.Impl.DnsWsApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="dnsapiSoap", Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class dnssoapapi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback returnTimeOperationCompleted;
        
        private authDataType clientAuthField;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback echoAuthOperationCompleted;
        
        private custDataType custInfoField;
        
        private System.Threading.SendOrPostCallback echoCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainARecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainARecordsForDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMXRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNSRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRVRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMXRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySOARecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSOAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBindFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback fixZoneOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDefaultZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback zoneHealthCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback refreshZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForwardingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveNewProxyConfigRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProxyConfigRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyProxyConfigRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyFiltersOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveNewProxyFilterRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProxyFilterRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyProxyFilterRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProtectedDomainInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProtectedDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRecordGapiOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRecordGapiOperationCompleted;
        
        private System.Threading.SendOrPostCallback purgeGapiOrphansOperationCompleted;
        
        private System.Threading.SendOrPostCallback importZoneFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepairQueueRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRepairQueueRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addBulkEditJobBlobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBulkEditJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBulkEditJobDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOffsiteAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDNSAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHostingAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback restoreDefaultRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOffsiteTransferKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSmartDomainTemplateChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback applySmartDomainTemplateChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDomainZoneParkedInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHCCZoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountByUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOffsiteResellerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultRedirectIpOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkForwardingOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOrionEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback processOrionEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyZoneOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySourceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback createZoneFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyZoneFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteZoneFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback addZoneToFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback addZonesToFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteZoneFromFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteZoneFromAllFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteZonesFromFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZonesInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomTemplateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCustomTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyCustomTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomTemplateByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyCustomTemplateSoaOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCustomTemplateRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyCustomTemplateRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomTemplateRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyCustomTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyCustomTemplatesToDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplyTemplateQueueStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createVanityNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVanityNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteVanityNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyVanityNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback migrateZoneToPremiumOperationCompleted;
        
        private System.Threading.SendOrPostCallback setNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback tdnsHealthCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback tdnsHealthCheckFixOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitNewDSRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDNSSECStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDNSSECStatusByShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableDNSSECOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDNSSECNotifyEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableDNSSECOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerAuditLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerAuditLogByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPremiumStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainANSByShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableXferSlaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXferStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateXferSlaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableXferSlaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableXferMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateXferMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableXferMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySoaOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOffsiteZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOffsiteZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultSoaValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecordsByUidOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueryReportMonthlySummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueryReportMonthlyDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueryReportDailyDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQueryReportHourlyDateRangeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public dnssoapapi() {
            this.Url = global::Atlantis.Framework.PremiumDNS.Impl.Properties.Settings.Default.Atlantis_Framework_PremiumDNS_Impl_DnsWsApi_dnssoapapi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public authDataType clientAuth {
            get {
                return this.clientAuthField;
            }
            set {
                this.clientAuthField = value;
            }
        }
        
        public custDataType custInfo {
            get {
                return this.custInfoField;
            }
            set {
                this.custInfoField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event returnTimeCompletedEventHandler returnTimeCompleted;
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event echoAuthCompletedEventHandler echoAuthCompleted;
        
        /// <remarks/>
        public event echoCustCompletedEventHandler echoCustCompleted;
        
        /// <remarks/>
        public event getMainARecordsCompletedEventHandler getMainARecordsCompleted;
        
        /// <remarks/>
        public event getMainARecordsForDomainsCompletedEventHandler getMainARecordsForDomainsCompleted;
        
        /// <remarks/>
        public event getMXRecordsCompletedEventHandler getMXRecordsCompleted;
        
        /// <remarks/>
        public event getNSRecordsCompletedEventHandler getNSRecordsCompleted;
        
        /// <remarks/>
        public event getSRVRecordsCompletedEventHandler getSRVRecordsCompleted;
        
        /// <remarks/>
        public event getRRecordsCompletedEventHandler getRRecordsCompleted;
        
        /// <remarks/>
        public event setMXRecordsCompletedEventHandler setMXRecordsCompleted;
        
        /// <remarks/>
        public event createRecordsCompletedEventHandler createRecordsCompleted;
        
        /// <remarks/>
        public event modifyRecordsCompletedEventHandler modifyRecordsCompleted;
        
        /// <remarks/>
        public event modifySOARecordCompletedEventHandler modifySOARecordCompleted;
        
        /// <remarks/>
        public event deleteRecordsCompletedEventHandler deleteRecordsCompleted;
        
        /// <remarks/>
        public event getSOACompletedEventHandler getSOACompleted;
        
        /// <remarks/>
        public event getNameServersCompletedEventHandler getNameServersCompleted;
        
        /// <remarks/>
        public event getDefaultNameServersCompletedEventHandler getDefaultNameServersCompleted;
        
        /// <remarks/>
        public event getAllNameServersCompletedEventHandler getAllNameServersCompleted;
        
        /// <remarks/>
        public event getBindFileCompletedEventHandler getBindFileCompleted;
        
        /// <remarks/>
        public event getZoneCompletedEventHandler getZoneCompleted;
        
        /// <remarks/>
        public event fixZoneOwnershipCompletedEventHandler fixZoneOwnershipCompleted;
        
        /// <remarks/>
        public event createDefaultZoneCompletedEventHandler createDefaultZoneCompleted;
        
        /// <remarks/>
        public event zoneHealthCheckCompletedEventHandler zoneHealthCheckCompleted;
        
        /// <remarks/>
        public event refreshZoneCompletedEventHandler refreshZoneCompleted;
        
        /// <remarks/>
        public event getForwardingDataCompletedEventHandler getForwardingDataCompleted;
        
        /// <remarks/>
        public event getProxyConfigCompletedEventHandler getProxyConfigCompleted;
        
        /// <remarks/>
        public event getProxyInstancesCompletedEventHandler getProxyInstancesCompleted;
        
        /// <remarks/>
        public event saveNewProxyConfigRecordCompletedEventHandler saveNewProxyConfigRecordCompleted;
        
        /// <remarks/>
        public event removeProxyConfigRecordCompletedEventHandler removeProxyConfigRecordCompleted;
        
        /// <remarks/>
        public event modifyProxyConfigRecordCompletedEventHandler modifyProxyConfigRecordCompleted;
        
        /// <remarks/>
        public event getProxyFiltersCompletedEventHandler getProxyFiltersCompleted;
        
        /// <remarks/>
        public event saveNewProxyFilterRecordCompletedEventHandler saveNewProxyFilterRecordCompleted;
        
        /// <remarks/>
        public event removeProxyFilterRecordCompletedEventHandler removeProxyFilterRecordCompleted;
        
        /// <remarks/>
        public event modifyProxyFilterRecordCompletedEventHandler modifyProxyFilterRecordCompleted;
        
        /// <remarks/>
        public event getProtectedDomainInfoCompletedEventHandler getProtectedDomainInfoCompleted;
        
        /// <remarks/>
        public event addProtectedDomainCompletedEventHandler addProtectedDomainCompleted;
        
        /// <remarks/>
        public event deleteRecordGapiCompletedEventHandler deleteRecordGapiCompleted;
        
        /// <remarks/>
        public event createRecordGapiCompletedEventHandler createRecordGapiCompleted;
        
        /// <remarks/>
        public event purgeGapiOrphansCompletedEventHandler purgeGapiOrphansCompleted;
        
        /// <remarks/>
        public event importZoneFileCompletedEventHandler importZoneFileCompleted;
        
        /// <remarks/>
        public event getRepairQueueRecordsCompletedEventHandler getRepairQueueRecordsCompleted;
        
        /// <remarks/>
        public event removeRepairQueueRecordsCompletedEventHandler removeRepairQueueRecordsCompleted;
        
        /// <remarks/>
        public event addBulkEditJobBlobCompletedEventHandler addBulkEditJobBlobCompleted;
        
        /// <remarks/>
        public event getBulkEditJobStatusCompletedEventHandler getBulkEditJobStatusCompleted;
        
        /// <remarks/>
        public event getBulkEditJobDetailsCompletedEventHandler getBulkEditJobDetailsCompleted;
        
        /// <remarks/>
        public event getOffsiteAccountListCompletedEventHandler getOffsiteAccountListCompleted;
        
        /// <remarks/>
        public event getDNSAccountListCompletedEventHandler getDNSAccountListCompleted;
        
        /// <remarks/>
        public event getHostingAccountListCompletedEventHandler getHostingAccountListCompleted;
        
        /// <remarks/>
        public event restoreDefaultRecordsCompletedEventHandler restoreDefaultRecordsCompleted;
        
        /// <remarks/>
        public event getDefaultRecordsCompletedEventHandler getDefaultRecordsCompleted;
        
        /// <remarks/>
        public event createOffsiteTransferKeyCompletedEventHandler createOffsiteTransferKeyCompleted;
        
        /// <remarks/>
        public event getSmartDomainTemplateChangesCompletedEventHandler getSmartDomainTemplateChangesCompleted;
        
        /// <remarks/>
        public event applySmartDomainTemplateChangesCompletedEventHandler applySmartDomainTemplateChangesCompleted;
        
        /// <remarks/>
        public event getDomainZoneParkedInfoCompletedEventHandler getDomainZoneParkedInfoCompleted;
        
        /// <remarks/>
        public event getHCCZoneInfoCompletedEventHandler getHCCZoneInfoCompleted;
        
        /// <remarks/>
        public event getAccountByUidCompletedEventHandler getAccountByUidCompleted;
        
        /// <remarks/>
        public event getOffsiteResellerIdCompletedEventHandler getOffsiteResellerIdCompleted;
        
        /// <remarks/>
        public event getDefaultRedirectIpCompletedEventHandler getDefaultRedirectIpCompleted;
        
        /// <remarks/>
        public event checkForwardingCompletedEventHandler checkForwardingCompleted;
        
        /// <remarks/>
        public event insertOrionEventCompletedEventHandler insertOrionEventCompleted;
        
        /// <remarks/>
        public event processOrionEventsCompletedEventHandler processOrionEventsCompleted;
        
        /// <remarks/>
        public event deleteZoneCompletedEventHandler deleteZoneCompleted;
        
        /// <remarks/>
        public event modifyZoneOwnershipCompletedEventHandler modifyZoneOwnershipCompleted;
        
        /// <remarks/>
        public event modifySourceTypeCompletedEventHandler modifySourceTypeCompleted;
        
        /// <remarks/>
        public event getAccountUidCompletedEventHandler getAccountUidCompleted;
        
        /// <remarks/>
        public event createZoneFolderCompletedEventHandler createZoneFolderCompleted;
        
        /// <remarks/>
        public event modifyZoneFolderCompletedEventHandler modifyZoneFolderCompleted;
        
        /// <remarks/>
        public event deleteZoneFolderCompletedEventHandler deleteZoneFolderCompleted;
        
        /// <remarks/>
        public event addZoneToFolderCompletedEventHandler addZoneToFolderCompleted;
        
        /// <remarks/>
        public event addZonesToFoldersCompletedEventHandler addZonesToFoldersCompleted;
        
        /// <remarks/>
        public event deleteZoneFromFolderCompletedEventHandler deleteZoneFromFolderCompleted;
        
        /// <remarks/>
        public event deleteZoneFromAllFoldersCompletedEventHandler deleteZoneFromAllFoldersCompleted;
        
        /// <remarks/>
        public event deleteZonesFromFoldersCompletedEventHandler deleteZonesFromFoldersCompleted;
        
        /// <remarks/>
        public event getZoneFolderCompletedEventHandler getZoneFolderCompleted;
        
        /// <remarks/>
        public event getZoneFoldersCompletedEventHandler getZoneFoldersCompleted;
        
        /// <remarks/>
        public event getZonesInFolderCompletedEventHandler getZonesInFolderCompleted;
        
        /// <remarks/>
        public event getCustomTemplateDataCompletedEventHandler getCustomTemplateDataCompleted;
        
        /// <remarks/>
        public event createCustomTemplateCompletedEventHandler createCustomTemplateCompleted;
        
        /// <remarks/>
        public event modifyCustomTemplateCompletedEventHandler modifyCustomTemplateCompleted;
        
        /// <remarks/>
        public event deleteCustomTemplateCompletedEventHandler deleteCustomTemplateCompleted;
        
        /// <remarks/>
        public event getCustomTemplatesCompletedEventHandler getCustomTemplatesCompleted;
        
        /// <remarks/>
        public event getCustomTemplateByNameCompletedEventHandler getCustomTemplateByNameCompleted;
        
        /// <remarks/>
        public event modifyCustomTemplateSoaCompletedEventHandler modifyCustomTemplateSoaCompleted;
        
        /// <remarks/>
        public event createCustomTemplateRecordsCompletedEventHandler createCustomTemplateRecordsCompleted;
        
        /// <remarks/>
        public event modifyCustomTemplateRecordsCompletedEventHandler modifyCustomTemplateRecordsCompleted;
        
        /// <remarks/>
        public event deleteCustomTemplateRecordsCompletedEventHandler deleteCustomTemplateRecordsCompleted;
        
        /// <remarks/>
        public event applyCustomTemplateCompletedEventHandler applyCustomTemplateCompleted;
        
        /// <remarks/>
        public event applyCustomTemplatesToDomainsCompletedEventHandler applyCustomTemplatesToDomainsCompleted;
        
        /// <remarks/>
        public event getApplyTemplateQueueStatusCompletedEventHandler getApplyTemplateQueueStatusCompleted;
        
        /// <remarks/>
        public event createVanityNameServersCompletedEventHandler createVanityNameServersCompleted;
        
        /// <remarks/>
        public event getVanityNameServersCompletedEventHandler getVanityNameServersCompleted;
        
        /// <remarks/>
        public event deleteVanityNameServersCompletedEventHandler deleteVanityNameServersCompleted;
        
        /// <remarks/>
        public event modifyVanityNameServersCompletedEventHandler modifyVanityNameServersCompleted;
        
        /// <remarks/>
        public event migrateZoneToPremiumCompletedEventHandler migrateZoneToPremiumCompleted;
        
        /// <remarks/>
        public event setNameServersCompletedEventHandler setNameServersCompleted;
        
        /// <remarks/>
        public event tdnsHealthCheckCompletedEventHandler tdnsHealthCheckCompleted;
        
        /// <remarks/>
        public event tdnsHealthCheckFixCompletedEventHandler tdnsHealthCheckFixCompleted;
        
        /// <remarks/>
        public event submitNewDSRecordsCompletedEventHandler submitNewDSRecordsCompleted;
        
        /// <remarks/>
        public event getDNSSECStatusCompletedEventHandler getDNSSECStatusCompleted;
        
        /// <remarks/>
        public event getDNSSECStatusByShopperCompletedEventHandler getDNSSECStatusByShopperCompleted;
        
        /// <remarks/>
        public event enableDNSSECCompletedEventHandler enableDNSSECCompleted;
        
        /// <remarks/>
        public event updateDNSSECNotifyEmailCompletedEventHandler updateDNSSECNotifyEmailCompleted;
        
        /// <remarks/>
        public event disableDNSSECCompletedEventHandler disableDNSSECCompleted;
        
        /// <remarks/>
        public event getCustomerAuditLogCompletedEventHandler getCustomerAuditLogCompleted;
        
        /// <remarks/>
        public event getCustomerAuditLogByIdCompletedEventHandler getCustomerAuditLogByIdCompleted;
        
        /// <remarks/>
        public event getPremiumStatusCompletedEventHandler getPremiumStatusCompleted;
        
        /// <remarks/>
        public event getMainANSByShopperCompletedEventHandler getMainANSByShopperCompleted;
        
        /// <remarks/>
        public event enableXferSlaveCompletedEventHandler enableXferSlaveCompleted;
        
        /// <remarks/>
        public event getXferStatusCompletedEventHandler getXferStatusCompleted;
        
        /// <remarks/>
        public event updateXferSlaveCompletedEventHandler updateXferSlaveCompleted;
        
        /// <remarks/>
        public event disableXferSlaveCompletedEventHandler disableXferSlaveCompleted;
        
        /// <remarks/>
        public event enableXferMasterCompletedEventHandler enableXferMasterCompleted;
        
        /// <remarks/>
        public event updateXferMasterCompletedEventHandler updateXferMasterCompleted;
        
        /// <remarks/>
        public event disableXferMasterCompletedEventHandler disableXferMasterCompleted;
        
        /// <remarks/>
        public event modifySoaCompletedEventHandler modifySoaCompleted;
        
        /// <remarks/>
        public event createOffsiteZoneCompletedEventHandler createOffsiteZoneCompleted;
        
        /// <remarks/>
        public event deleteOffsiteZoneCompletedEventHandler deleteOffsiteZoneCompleted;
        
        /// <remarks/>
        public event getDefaultSoaValuesCompletedEventHandler getDefaultSoaValuesCompleted;
        
        /// <remarks/>
        public event getRecordsByUidCompletedEventHandler getRecordsByUidCompleted;
        
        /// <remarks/>
        public event getQueryReportMonthlySummaryCompletedEventHandler getQueryReportMonthlySummaryCompleted;
        
        /// <remarks/>
        public event getQueryReportMonthlyDateRangeCompletedEventHandler getQueryReportMonthlyDateRangeCompleted;
        
        /// <remarks/>
        public event getQueryReportDailyDateRangeCompletedEventHandler getQueryReportDailyDateRangeCompleted;
        
        /// <remarks/>
        public event getQueryReportHourlyDateRangeCompletedEventHandler getQueryReportHourlyDateRangeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string returnTime() {
            object[] results = this.Invoke("returnTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void returnTimeAsync() {
            this.returnTimeAsync(null);
        }
        
        /// <remarks/>
        public void returnTimeAsync(object userState) {
            if ((this.returnTimeOperationCompleted == null)) {
                this.returnTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnTimeOperationCompleted);
            }
            this.InvokeAsync("returnTime", new object[0], this.returnTimeOperationCompleted, userState);
        }
        
        private void OnreturnTimeOperationCompleted(object arg) {
            if ((this.returnTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnTimeCompleted(this, new returnTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("version")]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("authOut")]
        public authDataType echoAuth() {
            object[] results = this.Invoke("echoAuth", new object[0]);
            return ((authDataType)(results[0]));
        }
        
        /// <remarks/>
        public void echoAuthAsync() {
            this.echoAuthAsync(null);
        }
        
        /// <remarks/>
        public void echoAuthAsync(object userState) {
            if ((this.echoAuthOperationCompleted == null)) {
                this.echoAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnechoAuthOperationCompleted);
            }
            this.InvokeAsync("echoAuth", new object[0], this.echoAuthOperationCompleted, userState);
        }
        
        private void OnechoAuthOperationCompleted(object arg) {
            if ((this.echoAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.echoAuthCompleted(this, new echoAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("CustInfo")]
        public custDataType echoCust() {
            object[] results = this.Invoke("echoCust", new object[0]);
            return ((custDataType)(results[0]));
        }
        
        /// <remarks/>
        public void echoCustAsync() {
            this.echoCustAsync(null);
        }
        
        /// <remarks/>
        public void echoCustAsync(object userState) {
            if ((this.echoCustOperationCompleted == null)) {
                this.echoCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnechoCustOperationCompleted);
            }
            this.InvokeAsync("echoCust", new object[0], this.echoCustOperationCompleted, userState);
        }
        
        private void OnechoCustOperationCompleted(object arg) {
            if ((this.echoCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.echoCustCompleted(this, new echoCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getMainARecords(string domain) {
            object[] results = this.Invoke("getMainARecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getMainARecordsAsync(string domain) {
            this.getMainARecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getMainARecordsAsync(string domain, object userState) {
            if ((this.getMainARecordsOperationCompleted == null)) {
                this.getMainARecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainARecordsOperationCompleted);
            }
            this.InvokeAsync("getMainARecords", new object[] {
                        domain}, this.getMainARecordsOperationCompleted, userState);
        }
        
        private void OngetMainARecordsOperationCompleted(object arg) {
            if ((this.getMainARecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainARecordsCompleted(this, new getMainARecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public domainIPAddressType[] getMainARecordsForDomains([System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] string[] request) {
            object[] results = this.Invoke("getMainARecordsForDomains", new object[] {
                        request});
            return ((domainIPAddressType[])(results[0]));
        }
        
        /// <remarks/>
        public void getMainARecordsForDomainsAsync(string[] request) {
            this.getMainARecordsForDomainsAsync(request, null);
        }
        
        /// <remarks/>
        public void getMainARecordsForDomainsAsync(string[] request, object userState) {
            if ((this.getMainARecordsForDomainsOperationCompleted == null)) {
                this.getMainARecordsForDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainARecordsForDomainsOperationCompleted);
            }
            this.InvokeAsync("getMainARecordsForDomains", new object[] {
                        request}, this.getMainARecordsForDomainsOperationCompleted, userState);
        }
        
        private void OngetMainARecordsForDomainsOperationCompleted(object arg) {
            if ((this.getMainARecordsForDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainARecordsForDomainsCompleted(this, new getMainARecordsForDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getMXRecords(string domain) {
            object[] results = this.Invoke("getMXRecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getMXRecordsAsync(string domain) {
            this.getMXRecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getMXRecordsAsync(string domain, object userState) {
            if ((this.getMXRecordsOperationCompleted == null)) {
                this.getMXRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMXRecordsOperationCompleted);
            }
            this.InvokeAsync("getMXRecords", new object[] {
                        domain}, this.getMXRecordsOperationCompleted, userState);
        }
        
        private void OngetMXRecordsOperationCompleted(object arg) {
            if ((this.getMXRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMXRecordsCompleted(this, new getMXRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getNSRecords(string domain) {
            object[] results = this.Invoke("getNSRecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getNSRecordsAsync(string domain) {
            this.getNSRecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getNSRecordsAsync(string domain, object userState) {
            if ((this.getNSRecordsOperationCompleted == null)) {
                this.getNSRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNSRecordsOperationCompleted);
            }
            this.InvokeAsync("getNSRecords", new object[] {
                        domain}, this.getNSRecordsOperationCompleted, userState);
        }
        
        private void OngetNSRecordsOperationCompleted(object arg) {
            if ((this.getNSRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNSRecordsCompleted(this, new getNSRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getSRVRecords(string domain) {
            object[] results = this.Invoke("getSRVRecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRVRecordsAsync(string domain) {
            this.getSRVRecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getSRVRecordsAsync(string domain, object userState) {
            if ((this.getSRVRecordsOperationCompleted == null)) {
                this.getSRVRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRVRecordsOperationCompleted);
            }
            this.InvokeAsync("getSRVRecords", new object[] {
                        domain}, this.getSRVRecordsOperationCompleted, userState);
        }
        
        private void OngetSRVRecordsOperationCompleted(object arg) {
            if ((this.getSRVRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRVRecordsCompleted(this, new getSRVRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getRRecords(string domain, string type) {
            object[] results = this.Invoke("getRRecords", new object[] {
                        domain,
                        type});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getRRecordsAsync(string domain, string type) {
            this.getRRecordsAsync(domain, type, null);
        }
        
        /// <remarks/>
        public void getRRecordsAsync(string domain, string type, object userState) {
            if ((this.getRRecordsOperationCompleted == null)) {
                this.getRRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRRecordsOperationCompleted);
            }
            this.InvokeAsync("getRRecords", new object[] {
                        domain,
                        type}, this.getRRecordsOperationCompleted, userState);
        }
        
        private void OngetRRecordsOperationCompleted(object arg) {
            if ((this.getRRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRRecordsCompleted(this, new getRRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType setMXRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("setMXRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void setMXRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo) {
            this.setMXRecordsAsync(domain, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void setMXRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.setMXRecordsOperationCompleted == null)) {
                this.setMXRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMXRecordsOperationCompleted);
            }
            this.InvokeAsync("setMXRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo}, this.setMXRecordsOperationCompleted, userState);
        }
        
        private void OnsetMXRecordsOperationCompleted(object arg) {
            if ((this.setMXRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMXRecordsCompleted(this, new setMXRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType createRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("createRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo) {
            this.createRecordsAsync(domain, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void createRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.createRecordsOperationCompleted == null)) {
                this.createRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRecordsOperationCompleted);
            }
            this.InvokeAsync("createRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo}, this.createRecordsOperationCompleted, userState);
        }
        
        private void OncreateRecordsOperationCompleted(object arg) {
            if ((this.createRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRecordsCompleted(this, new createRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifyRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("modifyRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifyRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo) {
            this.modifyRecordsAsync(domain, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void modifyRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.modifyRecordsOperationCompleted == null)) {
                this.modifyRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyRecordsOperationCompleted);
            }
            this.InvokeAsync("modifyRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo}, this.modifyRecordsOperationCompleted, userState);
        }
        
        private void OnmodifyRecordsOperationCompleted(object arg) {
            if ((this.modifyRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyRecordsCompleted(this, new modifyRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifySOARecord(string domain, soaType soa, int returnsuccessinfo) {
            object[] results = this.Invoke("modifySOARecord", new object[] {
                        domain,
                        soa,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifySOARecordAsync(string domain, soaType soa, int returnsuccessinfo) {
            this.modifySOARecordAsync(domain, soa, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void modifySOARecordAsync(string domain, soaType soa, int returnsuccessinfo, object userState) {
            if ((this.modifySOARecordOperationCompleted == null)) {
                this.modifySOARecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySOARecordOperationCompleted);
            }
            this.InvokeAsync("modifySOARecord", new object[] {
                        domain,
                        soa,
                        returnsuccessinfo}, this.modifySOARecordOperationCompleted, userState);
        }
        
        private void OnmodifySOARecordOperationCompleted(object arg) {
            if ((this.modifySOARecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySOARecordCompleted(this, new modifySOARecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType deleteRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("deleteRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo) {
            this.deleteRecordsAsync(domain, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void deleteRecordsAsync(string domain, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.deleteRecordsOperationCompleted == null)) {
                this.deleteRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRecordsOperationCompleted);
            }
            this.InvokeAsync("deleteRecords", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo}, this.deleteRecordsOperationCompleted, userState);
        }
        
        private void OndeleteRecordsOperationCompleted(object arg) {
            if ((this.deleteRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRecordsCompleted(this, new deleteRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public soaType getSOA(string domain) {
            object[] results = this.Invoke("getSOA", new object[] {
                        domain});
            return ((soaType)(results[0]));
        }
        
        /// <remarks/>
        public void getSOAAsync(string domain) {
            this.getSOAAsync(domain, null);
        }
        
        /// <remarks/>
        public void getSOAAsync(string domain, object userState) {
            if ((this.getSOAOperationCompleted == null)) {
                this.getSOAOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSOAOperationCompleted);
            }
            this.InvokeAsync("getSOA", new object[] {
                        domain}, this.getSOAOperationCompleted, userState);
        }
        
        private void OngetSOAOperationCompleted(object arg) {
            if ((this.getSOACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSOACompleted(this, new getSOACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public string[] getNameServers(string domain, int even) {
            object[] results = this.Invoke("getNameServers", new object[] {
                        domain,
                        even});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getNameServersAsync(string domain, int even) {
            this.getNameServersAsync(domain, even, null);
        }
        
        /// <remarks/>
        public void getNameServersAsync(string domain, int even, object userState) {
            if ((this.getNameServersOperationCompleted == null)) {
                this.getNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameServersOperationCompleted);
            }
            this.InvokeAsync("getNameServers", new object[] {
                        domain,
                        even}, this.getNameServersOperationCompleted, userState);
        }
        
        private void OngetNameServersOperationCompleted(object arg) {
            if ((this.getNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameServersCompleted(this, new getNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public string[] getDefaultNameServers() {
            object[] results = this.Invoke("getDefaultNameServers", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultNameServersAsync() {
            this.getDefaultNameServersAsync(null);
        }
        
        /// <remarks/>
        public void getDefaultNameServersAsync(object userState) {
            if ((this.getDefaultNameServersOperationCompleted == null)) {
                this.getDefaultNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultNameServersOperationCompleted);
            }
            this.InvokeAsync("getDefaultNameServers", new object[0], this.getDefaultNameServersOperationCompleted, userState);
        }
        
        private void OngetDefaultNameServersOperationCompleted(object arg) {
            if ((this.getDefaultNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultNameServersCompleted(this, new getDefaultNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public string[] getAllNameServers() {
            object[] results = this.Invoke("getAllNameServers", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllNameServersAsync() {
            this.getAllNameServersAsync(null);
        }
        
        /// <remarks/>
        public void getAllNameServersAsync(object userState) {
            if ((this.getAllNameServersOperationCompleted == null)) {
                this.getAllNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllNameServersOperationCompleted);
            }
            this.InvokeAsync("getAllNameServers", new object[0], this.getAllNameServersOperationCompleted, userState);
        }
        
        private void OngetAllNameServersOperationCompleted(object arg) {
            if ((this.getAllNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllNameServersCompleted(this, new getAllNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string getBindFile(string domain) {
            object[] results = this.Invoke("getBindFile", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBindFileAsync(string domain) {
            this.getBindFileAsync(domain, null);
        }
        
        /// <remarks/>
        public void getBindFileAsync(string domain, object userState) {
            if ((this.getBindFileOperationCompleted == null)) {
                this.getBindFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBindFileOperationCompleted);
            }
            this.InvokeAsync("getBindFile", new object[] {
                        domain}, this.getBindFileOperationCompleted, userState);
        }
        
        private void OngetBindFileOperationCompleted(object arg) {
            if ((this.getBindFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBindFileCompleted(this, new getBindFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public zoneType getZone(string domain) {
            object[] results = this.Invoke("getZone", new object[] {
                        domain});
            return ((zoneType)(results[0]));
        }
        
        /// <remarks/>
        public void getZoneAsync(string domain) {
            this.getZoneAsync(domain, null);
        }
        
        /// <remarks/>
        public void getZoneAsync(string domain, object userState) {
            if ((this.getZoneOperationCompleted == null)) {
                this.getZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneOperationCompleted);
            }
            this.InvokeAsync("getZone", new object[] {
                        domain}, this.getZoneOperationCompleted, userState);
        }
        
        private void OngetZoneOperationCompleted(object arg) {
            if ((this.getZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneCompleted(this, new getZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string fixZoneOwnership(string domain) {
            object[] results = this.Invoke("fixZoneOwnership", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fixZoneOwnershipAsync(string domain) {
            this.fixZoneOwnershipAsync(domain, null);
        }
        
        /// <remarks/>
        public void fixZoneOwnershipAsync(string domain, object userState) {
            if ((this.fixZoneOwnershipOperationCompleted == null)) {
                this.fixZoneOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfixZoneOwnershipOperationCompleted);
            }
            this.InvokeAsync("fixZoneOwnership", new object[] {
                        domain}, this.fixZoneOwnershipOperationCompleted, userState);
        }
        
        private void OnfixZoneOwnershipOperationCompleted(object arg) {
            if ((this.fixZoneOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fixZoneOwnershipCompleted(this, new fixZoneOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public createDefaultZoneResponseType createDefaultZone(createDefaultZoneRequestType request) {
            object[] results = this.Invoke("createDefaultZone", new object[] {
                        request});
            return ((createDefaultZoneResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createDefaultZoneAsync(createDefaultZoneRequestType request) {
            this.createDefaultZoneAsync(request, null);
        }
        
        /// <remarks/>
        public void createDefaultZoneAsync(createDefaultZoneRequestType request, object userState) {
            if ((this.createDefaultZoneOperationCompleted == null)) {
                this.createDefaultZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDefaultZoneOperationCompleted);
            }
            this.InvokeAsync("createDefaultZone", new object[] {
                        request}, this.createDefaultZoneOperationCompleted, userState);
        }
        
        private void OncreateDefaultZoneOperationCompleted(object arg) {
            if ((this.createDefaultZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDefaultZoneCompleted(this, new createDefaultZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public zoneHealthCheckResponseType zoneHealthCheck(string domain, string action) {
            object[] results = this.Invoke("zoneHealthCheck", new object[] {
                        domain,
                        action});
            return ((zoneHealthCheckResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void zoneHealthCheckAsync(string domain, string action) {
            this.zoneHealthCheckAsync(domain, action, null);
        }
        
        /// <remarks/>
        public void zoneHealthCheckAsync(string domain, string action, object userState) {
            if ((this.zoneHealthCheckOperationCompleted == null)) {
                this.zoneHealthCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzoneHealthCheckOperationCompleted);
            }
            this.InvokeAsync("zoneHealthCheck", new object[] {
                        domain,
                        action}, this.zoneHealthCheckOperationCompleted, userState);
        }
        
        private void OnzoneHealthCheckOperationCompleted(object arg) {
            if ((this.zoneHealthCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zoneHealthCheckCompleted(this, new zoneHealthCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string refreshZone(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] string[] nameservers) {
            object[] results = this.Invoke("refreshZone", new object[] {
                        domain,
                        nameservers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void refreshZoneAsync(string domain, string[] nameservers) {
            this.refreshZoneAsync(domain, nameservers, null);
        }
        
        /// <remarks/>
        public void refreshZoneAsync(string domain, string[] nameservers, object userState) {
            if ((this.refreshZoneOperationCompleted == null)) {
                this.refreshZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefreshZoneOperationCompleted);
            }
            this.InvokeAsync("refreshZone", new object[] {
                        domain,
                        nameservers}, this.refreshZoneOperationCompleted, userState);
        }
        
        private void OnrefreshZoneOperationCompleted(object arg) {
            if ((this.refreshZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refreshZoneCompleted(this, new refreshZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string getForwardingData(string domain) {
            object[] results = this.Invoke("getForwardingData", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getForwardingDataAsync(string domain) {
            this.getForwardingDataAsync(domain, null);
        }
        
        /// <remarks/>
        public void getForwardingDataAsync(string domain, object userState) {
            if ((this.getForwardingDataOperationCompleted == null)) {
                this.getForwardingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForwardingDataOperationCompleted);
            }
            this.InvokeAsync("getForwardingData", new object[] {
                        domain}, this.getForwardingDataOperationCompleted, userState);
        }
        
        private void OngetForwardingDataOperationCompleted(object arg) {
            if ((this.getForwardingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForwardingDataCompleted(this, new getForwardingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public configDataResponseArrayType getProxyConfig(int site, string server) {
            object[] results = this.Invoke("getProxyConfig", new object[] {
                        site,
                        server});
            return ((configDataResponseArrayType)(results[0]));
        }
        
        /// <remarks/>
        public void getProxyConfigAsync(int site, string server) {
            this.getProxyConfigAsync(site, server, null);
        }
        
        /// <remarks/>
        public void getProxyConfigAsync(int site, string server, object userState) {
            if ((this.getProxyConfigOperationCompleted == null)) {
                this.getProxyConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyConfigOperationCompleted);
            }
            this.InvokeAsync("getProxyConfig", new object[] {
                        site,
                        server}, this.getProxyConfigOperationCompleted, userState);
        }
        
        private void OngetProxyConfigOperationCompleted(object arg) {
            if ((this.getProxyConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyConfigCompleted(this, new getProxyConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("siteservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public proxySiteArrayType[] getProxyInstances(int site) {
            object[] results = this.Invoke("getProxyInstances", new object[] {
                        site});
            return ((proxySiteArrayType[])(results[0]));
        }
        
        /// <remarks/>
        public void getProxyInstancesAsync(int site) {
            this.getProxyInstancesAsync(site, null);
        }
        
        /// <remarks/>
        public void getProxyInstancesAsync(int site, object userState) {
            if ((this.getProxyInstancesOperationCompleted == null)) {
                this.getProxyInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyInstancesOperationCompleted);
            }
            this.InvokeAsync("getProxyInstances", new object[] {
                        site}, this.getProxyInstancesOperationCompleted, userState);
        }
        
        private void OngetProxyInstancesOperationCompleted(object arg) {
            if ((this.getProxyInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyInstancesCompleted(this, new getProxyInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string saveNewProxyConfigRecord(configDataType record) {
            object[] results = this.Invoke("saveNewProxyConfigRecord", new object[] {
                        record});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveNewProxyConfigRecordAsync(configDataType record) {
            this.saveNewProxyConfigRecordAsync(record, null);
        }
        
        /// <remarks/>
        public void saveNewProxyConfigRecordAsync(configDataType record, object userState) {
            if ((this.saveNewProxyConfigRecordOperationCompleted == null)) {
                this.saveNewProxyConfigRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveNewProxyConfigRecordOperationCompleted);
            }
            this.InvokeAsync("saveNewProxyConfigRecord", new object[] {
                        record}, this.saveNewProxyConfigRecordOperationCompleted, userState);
        }
        
        private void OnsaveNewProxyConfigRecordOperationCompleted(object arg) {
            if ((this.saveNewProxyConfigRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveNewProxyConfigRecordCompleted(this, new saveNewProxyConfigRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string removeProxyConfigRecord(int id) {
            object[] results = this.Invoke("removeProxyConfigRecord", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeProxyConfigRecordAsync(int id) {
            this.removeProxyConfigRecordAsync(id, null);
        }
        
        /// <remarks/>
        public void removeProxyConfigRecordAsync(int id, object userState) {
            if ((this.removeProxyConfigRecordOperationCompleted == null)) {
                this.removeProxyConfigRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProxyConfigRecordOperationCompleted);
            }
            this.InvokeAsync("removeProxyConfigRecord", new object[] {
                        id}, this.removeProxyConfigRecordOperationCompleted, userState);
        }
        
        private void OnremoveProxyConfigRecordOperationCompleted(object arg) {
            if ((this.removeProxyConfigRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProxyConfigRecordCompleted(this, new removeProxyConfigRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string modifyProxyConfigRecord(int id, string editField, string newpvalue) {
            object[] results = this.Invoke("modifyProxyConfigRecord", new object[] {
                        id,
                        editField,
                        newpvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyProxyConfigRecordAsync(int id, string editField, string newpvalue) {
            this.modifyProxyConfigRecordAsync(id, editField, newpvalue, null);
        }
        
        /// <remarks/>
        public void modifyProxyConfigRecordAsync(int id, string editField, string newpvalue, object userState) {
            if ((this.modifyProxyConfigRecordOperationCompleted == null)) {
                this.modifyProxyConfigRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyProxyConfigRecordOperationCompleted);
            }
            this.InvokeAsync("modifyProxyConfigRecord", new object[] {
                        id,
                        editField,
                        newpvalue}, this.modifyProxyConfigRecordOperationCompleted, userState);
        }
        
        private void OnmodifyProxyConfigRecordOperationCompleted(object arg) {
            if ((this.modifyProxyConfigRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyProxyConfigRecordCompleted(this, new modifyProxyConfigRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public proxyFilterDataResponseArrayType getProxyFilters(int site, string server) {
            object[] results = this.Invoke("getProxyFilters", new object[] {
                        site,
                        server});
            return ((proxyFilterDataResponseArrayType)(results[0]));
        }
        
        /// <remarks/>
        public void getProxyFiltersAsync(int site, string server) {
            this.getProxyFiltersAsync(site, server, null);
        }
        
        /// <remarks/>
        public void getProxyFiltersAsync(int site, string server, object userState) {
            if ((this.getProxyFiltersOperationCompleted == null)) {
                this.getProxyFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyFiltersOperationCompleted);
            }
            this.InvokeAsync("getProxyFilters", new object[] {
                        site,
                        server}, this.getProxyFiltersOperationCompleted, userState);
        }
        
        private void OngetProxyFiltersOperationCompleted(object arg) {
            if ((this.getProxyFiltersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyFiltersCompleted(this, new getProxyFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string saveNewProxyFilterRecord(proxyFilterDataType record) {
            object[] results = this.Invoke("saveNewProxyFilterRecord", new object[] {
                        record});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveNewProxyFilterRecordAsync(proxyFilterDataType record) {
            this.saveNewProxyFilterRecordAsync(record, null);
        }
        
        /// <remarks/>
        public void saveNewProxyFilterRecordAsync(proxyFilterDataType record, object userState) {
            if ((this.saveNewProxyFilterRecordOperationCompleted == null)) {
                this.saveNewProxyFilterRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveNewProxyFilterRecordOperationCompleted);
            }
            this.InvokeAsync("saveNewProxyFilterRecord", new object[] {
                        record}, this.saveNewProxyFilterRecordOperationCompleted, userState);
        }
        
        private void OnsaveNewProxyFilterRecordOperationCompleted(object arg) {
            if ((this.saveNewProxyFilterRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveNewProxyFilterRecordCompleted(this, new saveNewProxyFilterRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string removeProxyFilterRecord(int id) {
            object[] results = this.Invoke("removeProxyFilterRecord", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeProxyFilterRecordAsync(int id) {
            this.removeProxyFilterRecordAsync(id, null);
        }
        
        /// <remarks/>
        public void removeProxyFilterRecordAsync(int id, object userState) {
            if ((this.removeProxyFilterRecordOperationCompleted == null)) {
                this.removeProxyFilterRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProxyFilterRecordOperationCompleted);
            }
            this.InvokeAsync("removeProxyFilterRecord", new object[] {
                        id}, this.removeProxyFilterRecordOperationCompleted, userState);
        }
        
        private void OnremoveProxyFilterRecordOperationCompleted(object arg) {
            if ((this.removeProxyFilterRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProxyFilterRecordCompleted(this, new removeProxyFilterRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string modifyProxyFilterRecord(int id, string editField, string newpvalue) {
            object[] results = this.Invoke("modifyProxyFilterRecord", new object[] {
                        id,
                        editField,
                        newpvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyProxyFilterRecordAsync(int id, string editField, string newpvalue) {
            this.modifyProxyFilterRecordAsync(id, editField, newpvalue, null);
        }
        
        /// <remarks/>
        public void modifyProxyFilterRecordAsync(int id, string editField, string newpvalue, object userState) {
            if ((this.modifyProxyFilterRecordOperationCompleted == null)) {
                this.modifyProxyFilterRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyProxyFilterRecordOperationCompleted);
            }
            this.InvokeAsync("modifyProxyFilterRecord", new object[] {
                        id,
                        editField,
                        newpvalue}, this.modifyProxyFilterRecordOperationCompleted, userState);
        }
        
        private void OnmodifyProxyFilterRecordOperationCompleted(object arg) {
            if ((this.modifyProxyFilterRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyProxyFilterRecordCompleted(this, new modifyProxyFilterRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public protectedDomainResponseType getProtectedDomainInfo(string checkdomain) {
            object[] results = this.Invoke("getProtectedDomainInfo", new object[] {
                        checkdomain});
            return ((protectedDomainResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getProtectedDomainInfoAsync(string checkdomain) {
            this.getProtectedDomainInfoAsync(checkdomain, null);
        }
        
        /// <remarks/>
        public void getProtectedDomainInfoAsync(string checkdomain, object userState) {
            if ((this.getProtectedDomainInfoOperationCompleted == null)) {
                this.getProtectedDomainInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProtectedDomainInfoOperationCompleted);
            }
            this.InvokeAsync("getProtectedDomainInfo", new object[] {
                        checkdomain}, this.getProtectedDomainInfoOperationCompleted, userState);
        }
        
        private void OngetProtectedDomainInfoOperationCompleted(object arg) {
            if ((this.getProtectedDomainInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProtectedDomainInfoCompleted(this, new getProtectedDomainInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType addProtectedDomain(string domain, string contact) {
            object[] results = this.Invoke("addProtectedDomain", new object[] {
                        domain,
                        contact});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void addProtectedDomainAsync(string domain, string contact) {
            this.addProtectedDomainAsync(domain, contact, null);
        }
        
        /// <remarks/>
        public void addProtectedDomainAsync(string domain, string contact, object userState) {
            if ((this.addProtectedDomainOperationCompleted == null)) {
                this.addProtectedDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProtectedDomainOperationCompleted);
            }
            this.InvokeAsync("addProtectedDomain", new object[] {
                        domain,
                        contact}, this.addProtectedDomainOperationCompleted, userState);
        }
        
        private void OnaddProtectedDomainOperationCompleted(object arg) {
            if ((this.addProtectedDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProtectedDomainCompleted(this, new addProtectedDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType deleteRecordGapi(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("deleteRecordGapi", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRecordGapiAsync(string domain, rrecordType[] recordList, int returnsuccessinfo) {
            this.deleteRecordGapiAsync(domain, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void deleteRecordGapiAsync(string domain, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.deleteRecordGapiOperationCompleted == null)) {
                this.deleteRecordGapiOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRecordGapiOperationCompleted);
            }
            this.InvokeAsync("deleteRecordGapi", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo}, this.deleteRecordGapiOperationCompleted, userState);
        }
        
        private void OndeleteRecordGapiOperationCompleted(object arg) {
            if ((this.deleteRecordGapiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRecordGapiCompleted(this, new deleteRecordGapiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType createRecordGapi(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("createRecordGapi", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createRecordGapiAsync(string domain, rrecordType[] recordList, int returnsuccessinfo) {
            this.createRecordGapiAsync(domain, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void createRecordGapiAsync(string domain, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.createRecordGapiOperationCompleted == null)) {
                this.createRecordGapiOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRecordGapiOperationCompleted);
            }
            this.InvokeAsync("createRecordGapi", new object[] {
                        domain,
                        recordList,
                        returnsuccessinfo}, this.createRecordGapiOperationCompleted, userState);
        }
        
        private void OncreateRecordGapiOperationCompleted(object arg) {
            if ((this.createRecordGapiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRecordGapiCompleted(this, new createRecordGapiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public purgeGapiOrphansResponseInfoType purgeGapiOrphans(int age) {
            object[] results = this.Invoke("purgeGapiOrphans", new object[] {
                        age});
            return ((purgeGapiOrphansResponseInfoType)(results[0]));
        }
        
        /// <remarks/>
        public void purgeGapiOrphansAsync(int age) {
            this.purgeGapiOrphansAsync(age, null);
        }
        
        /// <remarks/>
        public void purgeGapiOrphansAsync(int age, object userState) {
            if ((this.purgeGapiOrphansOperationCompleted == null)) {
                this.purgeGapiOrphansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpurgeGapiOrphansOperationCompleted);
            }
            this.InvokeAsync("purgeGapiOrphans", new object[] {
                        age}, this.purgeGapiOrphansOperationCompleted, userState);
        }
        
        private void OnpurgeGapiOrphansOperationCompleted(object arg) {
            if ((this.purgeGapiOrphansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.purgeGapiOrphansCompleted(this, new purgeGapiOrphansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType importZoneFile(importZoneFileType importData) {
            object[] results = this.Invoke("importZoneFile", new object[] {
                        importData});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void importZoneFileAsync(importZoneFileType importData) {
            this.importZoneFileAsync(importData, null);
        }
        
        /// <remarks/>
        public void importZoneFileAsync(importZoneFileType importData, object userState) {
            if ((this.importZoneFileOperationCompleted == null)) {
                this.importZoneFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportZoneFileOperationCompleted);
            }
            this.InvokeAsync("importZoneFile", new object[] {
                        importData}, this.importZoneFileOperationCompleted, userState);
        }
        
        private void OnimportZoneFileOperationCompleted(object arg) {
            if ((this.importZoneFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importZoneFileCompleted(this, new importZoneFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public zoneRepairQueueReadResultType getRepairQueueRecords(string procid, int recordcount) {
            object[] results = this.Invoke("getRepairQueueRecords", new object[] {
                        procid,
                        recordcount});
            return ((zoneRepairQueueReadResultType)(results[0]));
        }
        
        /// <remarks/>
        public void getRepairQueueRecordsAsync(string procid, int recordcount) {
            this.getRepairQueueRecordsAsync(procid, recordcount, null);
        }
        
        /// <remarks/>
        public void getRepairQueueRecordsAsync(string procid, int recordcount, object userState) {
            if ((this.getRepairQueueRecordsOperationCompleted == null)) {
                this.getRepairQueueRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepairQueueRecordsOperationCompleted);
            }
            this.InvokeAsync("getRepairQueueRecords", new object[] {
                        procid,
                        recordcount}, this.getRepairQueueRecordsOperationCompleted, userState);
        }
        
        private void OngetRepairQueueRecordsOperationCompleted(object arg) {
            if ((this.getRepairQueueRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepairQueueRecordsCompleted(this, new getRepairQueueRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("recordcount")]
        public int removeRepairQueueRecords(string procid) {
            object[] results = this.Invoke("removeRepairQueueRecords", new object[] {
                        procid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removeRepairQueueRecordsAsync(string procid) {
            this.removeRepairQueueRecordsAsync(procid, null);
        }
        
        /// <remarks/>
        public void removeRepairQueueRecordsAsync(string procid, object userState) {
            if ((this.removeRepairQueueRecordsOperationCompleted == null)) {
                this.removeRepairQueueRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRepairQueueRecordsOperationCompleted);
            }
            this.InvokeAsync("removeRepairQueueRecords", new object[] {
                        procid}, this.removeRepairQueueRecordsOperationCompleted, userState);
        }
        
        private void OnremoveRepairQueueRecordsOperationCompleted(object arg) {
            if ((this.removeRepairQueueRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRepairQueueRecordsCompleted(this, new removeRepairQueueRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType addBulkEditJobBlob(bulkEditJobBlobType jobinfo) {
            object[] results = this.Invoke("addBulkEditJobBlob", new object[] {
                        jobinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void addBulkEditJobBlobAsync(bulkEditJobBlobType jobinfo) {
            this.addBulkEditJobBlobAsync(jobinfo, null);
        }
        
        /// <remarks/>
        public void addBulkEditJobBlobAsync(bulkEditJobBlobType jobinfo, object userState) {
            if ((this.addBulkEditJobBlobOperationCompleted == null)) {
                this.addBulkEditJobBlobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBulkEditJobBlobOperationCompleted);
            }
            this.InvokeAsync("addBulkEditJobBlob", new object[] {
                        jobinfo}, this.addBulkEditJobBlobOperationCompleted, userState);
        }
        
        private void OnaddBulkEditJobBlobOperationCompleted(object arg) {
            if ((this.addBulkEditJobBlobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBulkEditJobBlobCompleted(this, new addBulkEditJobBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("jobs", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public bulkEditJobType[] getBulkEditJobStatus() {
            object[] results = this.Invoke("getBulkEditJobStatus", new object[0]);
            return ((bulkEditJobType[])(results[0]));
        }
        
        /// <remarks/>
        public void getBulkEditJobStatusAsync() {
            this.getBulkEditJobStatusAsync(null);
        }
        
        /// <remarks/>
        public void getBulkEditJobStatusAsync(object userState) {
            if ((this.getBulkEditJobStatusOperationCompleted == null)) {
                this.getBulkEditJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBulkEditJobStatusOperationCompleted);
            }
            this.InvokeAsync("getBulkEditJobStatus", new object[0], this.getBulkEditJobStatusOperationCompleted, userState);
        }
        
        private void OngetBulkEditJobStatusOperationCompleted(object arg) {
            if ((this.getBulkEditJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBulkEditJobStatusCompleted(this, new getBulkEditJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bulkEditJobDetailsReturnType getBulkEditJobDetails(int job_id) {
            object[] results = this.Invoke("getBulkEditJobDetails", new object[] {
                        job_id});
            return ((bulkEditJobDetailsReturnType)(results[0]));
        }
        
        /// <remarks/>
        public void getBulkEditJobDetailsAsync(int job_id) {
            this.getBulkEditJobDetailsAsync(job_id, null);
        }
        
        /// <remarks/>
        public void getBulkEditJobDetailsAsync(int job_id, object userState) {
            if ((this.getBulkEditJobDetailsOperationCompleted == null)) {
                this.getBulkEditJobDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBulkEditJobDetailsOperationCompleted);
            }
            this.InvokeAsync("getBulkEditJobDetails", new object[] {
                        job_id}, this.getBulkEditJobDetailsOperationCompleted, userState);
        }
        
        private void OngetBulkEditJobDetailsOperationCompleted(object arg) {
            if ((this.getBulkEditJobDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBulkEditJobDetailsCompleted(this, new getBulkEditJobDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public accountListType getOffsiteAccountList() {
            object[] results = this.Invoke("getOffsiteAccountList", new object[0]);
            return ((accountListType)(results[0]));
        }
        
        /// <remarks/>
        public void getOffsiteAccountListAsync() {
            this.getOffsiteAccountListAsync(null);
        }
        
        /// <remarks/>
        public void getOffsiteAccountListAsync(object userState) {
            if ((this.getOffsiteAccountListOperationCompleted == null)) {
                this.getOffsiteAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOffsiteAccountListOperationCompleted);
            }
            this.InvokeAsync("getOffsiteAccountList", new object[0], this.getOffsiteAccountListOperationCompleted, userState);
        }
        
        private void OngetOffsiteAccountListOperationCompleted(object arg) {
            if ((this.getOffsiteAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOffsiteAccountListCompleted(this, new getOffsiteAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public accountListType getDNSAccountList(getDNSAccountListRequestType request) {
            object[] results = this.Invoke("getDNSAccountList", new object[] {
                        request});
            return ((accountListType)(results[0]));
        }
        
        /// <remarks/>
        public void getDNSAccountListAsync(getDNSAccountListRequestType request) {
            this.getDNSAccountListAsync(request, null);
        }
        
        /// <remarks/>
        public void getDNSAccountListAsync(getDNSAccountListRequestType request, object userState) {
            if ((this.getDNSAccountListOperationCompleted == null)) {
                this.getDNSAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDNSAccountListOperationCompleted);
            }
            this.InvokeAsync("getDNSAccountList", new object[] {
                        request}, this.getDNSAccountListOperationCompleted, userState);
        }
        
        private void OngetDNSAccountListOperationCompleted(object arg) {
            if ((this.getDNSAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDNSAccountListCompleted(this, new getDNSAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public accountListType getHostingAccountList() {
            object[] results = this.Invoke("getHostingAccountList", new object[0]);
            return ((accountListType)(results[0]));
        }
        
        /// <remarks/>
        public void getHostingAccountListAsync() {
            this.getHostingAccountListAsync(null);
        }
        
        /// <remarks/>
        public void getHostingAccountListAsync(object userState) {
            if ((this.getHostingAccountListOperationCompleted == null)) {
                this.getHostingAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHostingAccountListOperationCompleted);
            }
            this.InvokeAsync("getHostingAccountList", new object[0], this.getHostingAccountListOperationCompleted, userState);
        }
        
        private void OngetHostingAccountListOperationCompleted(object arg) {
            if ((this.getHostingAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHostingAccountListCompleted(this, new getHostingAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType restoreDefaultRecords(string domain, string recordtype) {
            object[] results = this.Invoke("restoreDefaultRecords", new object[] {
                        domain,
                        recordtype});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void restoreDefaultRecordsAsync(string domain, string recordtype) {
            this.restoreDefaultRecordsAsync(domain, recordtype, null);
        }
        
        /// <remarks/>
        public void restoreDefaultRecordsAsync(string domain, string recordtype, object userState) {
            if ((this.restoreDefaultRecordsOperationCompleted == null)) {
                this.restoreDefaultRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestoreDefaultRecordsOperationCompleted);
            }
            this.InvokeAsync("restoreDefaultRecords", new object[] {
                        domain,
                        recordtype}, this.restoreDefaultRecordsOperationCompleted, userState);
        }
        
        private void OnrestoreDefaultRecordsOperationCompleted(object arg) {
            if ((this.restoreDefaultRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restoreDefaultRecordsCompleted(this, new restoreDefaultRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getDefaultRecords(string domain, string recordtype) {
            object[] results = this.Invoke("getDefaultRecords", new object[] {
                        domain,
                        recordtype});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultRecordsAsync(string domain, string recordtype) {
            this.getDefaultRecordsAsync(domain, recordtype, null);
        }
        
        /// <remarks/>
        public void getDefaultRecordsAsync(string domain, string recordtype, object userState) {
            if ((this.getDefaultRecordsOperationCompleted == null)) {
                this.getDefaultRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultRecordsOperationCompleted);
            }
            this.InvokeAsync("getDefaultRecords", new object[] {
                        domain,
                        recordtype}, this.getDefaultRecordsOperationCompleted, userState);
        }
        
        private void OngetDefaultRecordsOperationCompleted(object arg) {
            if ((this.getDefaultRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultRecordsCompleted(this, new getDefaultRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("transferkey")]
        public transferKeyType createOffsiteTransferKey(string domain) {
            object[] results = this.Invoke("createOffsiteTransferKey", new object[] {
                        domain});
            return ((transferKeyType)(results[0]));
        }
        
        /// <remarks/>
        public void createOffsiteTransferKeyAsync(string domain) {
            this.createOffsiteTransferKeyAsync(domain, null);
        }
        
        /// <remarks/>
        public void createOffsiteTransferKeyAsync(string domain, object userState) {
            if ((this.createOffsiteTransferKeyOperationCompleted == null)) {
                this.createOffsiteTransferKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOffsiteTransferKeyOperationCompleted);
            }
            this.InvokeAsync("createOffsiteTransferKey", new object[] {
                        domain}, this.createOffsiteTransferKeyOperationCompleted, userState);
        }
        
        private void OncreateOffsiteTransferKeyOperationCompleted(object arg) {
            if ((this.createOffsiteTransferKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOffsiteTransferKeyCompleted(this, new createOffsiteTransferKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("records", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public smartDomainRecordChangeType[] getSmartDomainTemplateChanges(string domain) {
            object[] results = this.Invoke("getSmartDomainTemplateChanges", new object[] {
                        domain});
            return ((smartDomainRecordChangeType[])(results[0]));
        }
        
        /// <remarks/>
        public void getSmartDomainTemplateChangesAsync(string domain) {
            this.getSmartDomainTemplateChangesAsync(domain, null);
        }
        
        /// <remarks/>
        public void getSmartDomainTemplateChangesAsync(string domain, object userState) {
            if ((this.getSmartDomainTemplateChangesOperationCompleted == null)) {
                this.getSmartDomainTemplateChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSmartDomainTemplateChangesOperationCompleted);
            }
            this.InvokeAsync("getSmartDomainTemplateChanges", new object[] {
                        domain}, this.getSmartDomainTemplateChangesOperationCompleted, userState);
        }
        
        private void OngetSmartDomainTemplateChangesOperationCompleted(object arg) {
            if ((this.getSmartDomainTemplateChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSmartDomainTemplateChangesCompleted(this, new getSmartDomainTemplateChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType applySmartDomainTemplateChanges(string domain) {
            object[] results = this.Invoke("applySmartDomainTemplateChanges", new object[] {
                        domain});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void applySmartDomainTemplateChangesAsync(string domain) {
            this.applySmartDomainTemplateChangesAsync(domain, null);
        }
        
        /// <remarks/>
        public void applySmartDomainTemplateChangesAsync(string domain, object userState) {
            if ((this.applySmartDomainTemplateChangesOperationCompleted == null)) {
                this.applySmartDomainTemplateChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplySmartDomainTemplateChangesOperationCompleted);
            }
            this.InvokeAsync("applySmartDomainTemplateChanges", new object[] {
                        domain}, this.applySmartDomainTemplateChangesOperationCompleted, userState);
        }
        
        private void OnapplySmartDomainTemplateChangesOperationCompleted(object arg) {
            if ((this.applySmartDomainTemplateChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applySmartDomainTemplateChangesCompleted(this, new applySmartDomainTemplateChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public getDomainZoneParkedInfoResponseType getDomainZoneParkedInfo(string domain) {
            object[] results = this.Invoke("getDomainZoneParkedInfo", new object[] {
                        domain});
            return ((getDomainZoneParkedInfoResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getDomainZoneParkedInfoAsync(string domain) {
            this.getDomainZoneParkedInfoAsync(domain, null);
        }
        
        /// <remarks/>
        public void getDomainZoneParkedInfoAsync(string domain, object userState) {
            if ((this.getDomainZoneParkedInfoOperationCompleted == null)) {
                this.getDomainZoneParkedInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDomainZoneParkedInfoOperationCompleted);
            }
            this.InvokeAsync("getDomainZoneParkedInfo", new object[] {
                        domain}, this.getDomainZoneParkedInfoOperationCompleted, userState);
        }
        
        private void OngetDomainZoneParkedInfoOperationCompleted(object arg) {
            if ((this.getDomainZoneParkedInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDomainZoneParkedInfoCompleted(this, new getDomainZoneParkedInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public getHCCZoneInfoResponseType getHCCZoneInfo(string domain) {
            object[] results = this.Invoke("getHCCZoneInfo", new object[] {
                        domain});
            return ((getHCCZoneInfoResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getHCCZoneInfoAsync(string domain) {
            this.getHCCZoneInfoAsync(domain, null);
        }
        
        /// <remarks/>
        public void getHCCZoneInfoAsync(string domain, object userState) {
            if ((this.getHCCZoneInfoOperationCompleted == null)) {
                this.getHCCZoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHCCZoneInfoOperationCompleted);
            }
            this.InvokeAsync("getHCCZoneInfo", new object[] {
                        domain}, this.getHCCZoneInfoOperationCompleted, userState);
        }
        
        private void OngetHCCZoneInfoOperationCompleted(object arg) {
            if ((this.getHCCZoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHCCZoneInfoCompleted(this, new getHCCZoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string getAccountByUid(getAccountByUidRequestType request) {
            object[] results = this.Invoke("getAccountByUid", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountByUidAsync(getAccountByUidRequestType request) {
            this.getAccountByUidAsync(request, null);
        }
        
        /// <remarks/>
        public void getAccountByUidAsync(getAccountByUidRequestType request, object userState) {
            if ((this.getAccountByUidOperationCompleted == null)) {
                this.getAccountByUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountByUidOperationCompleted);
            }
            this.InvokeAsync("getAccountByUid", new object[] {
                        request}, this.getAccountByUidOperationCompleted, userState);
        }
        
        private void OngetAccountByUidOperationCompleted(object arg) {
            if ((this.getAccountByUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountByUidCompleted(this, new getAccountByUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int getOffsiteResellerId(string domain) {
            object[] results = this.Invoke("getOffsiteResellerId", new object[] {
                        domain});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getOffsiteResellerIdAsync(string domain) {
            this.getOffsiteResellerIdAsync(domain, null);
        }
        
        /// <remarks/>
        public void getOffsiteResellerIdAsync(string domain, object userState) {
            if ((this.getOffsiteResellerIdOperationCompleted == null)) {
                this.getOffsiteResellerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOffsiteResellerIdOperationCompleted);
            }
            this.InvokeAsync("getOffsiteResellerId", new object[] {
                        domain}, this.getOffsiteResellerIdOperationCompleted, userState);
        }
        
        private void OngetOffsiteResellerIdOperationCompleted(object arg) {
            if ((this.getOffsiteResellerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOffsiteResellerIdCompleted(this, new getOffsiteResellerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string getDefaultRedirectIp() {
            object[] results = this.Invoke("getDefaultRedirectIp", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultRedirectIpAsync() {
            this.getDefaultRedirectIpAsync(null);
        }
        
        /// <remarks/>
        public void getDefaultRedirectIpAsync(object userState) {
            if ((this.getDefaultRedirectIpOperationCompleted == null)) {
                this.getDefaultRedirectIpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultRedirectIpOperationCompleted);
            }
            this.InvokeAsync("getDefaultRedirectIp", new object[0], this.getDefaultRedirectIpOperationCompleted, userState);
        }
        
        private void OngetDefaultRedirectIpOperationCompleted(object arg) {
            if ((this.getDefaultRedirectIpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultRedirectIpCompleted(this, new getDefaultRedirectIpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int checkForwarding(string domain, string subdomain) {
            object[] results = this.Invoke("checkForwarding", new object[] {
                        domain,
                        subdomain});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkForwardingAsync(string domain, string subdomain) {
            this.checkForwardingAsync(domain, subdomain, null);
        }
        
        /// <remarks/>
        public void checkForwardingAsync(string domain, string subdomain, object userState) {
            if ((this.checkForwardingOperationCompleted == null)) {
                this.checkForwardingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckForwardingOperationCompleted);
            }
            this.InvokeAsync("checkForwarding", new object[] {
                        domain,
                        subdomain}, this.checkForwardingOperationCompleted, userState);
        }
        
        private void OncheckForwardingOperationCompleted(object arg) {
            if ((this.checkForwardingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkForwardingCompleted(this, new checkForwardingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public insertOrionEventResponseType insertOrionEvent(insertOrionEventRequestType request) {
            object[] results = this.Invoke("insertOrionEvent", new object[] {
                        request});
            return ((insertOrionEventResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void insertOrionEventAsync(insertOrionEventRequestType request) {
            this.insertOrionEventAsync(request, null);
        }
        
        /// <remarks/>
        public void insertOrionEventAsync(insertOrionEventRequestType request, object userState) {
            if ((this.insertOrionEventOperationCompleted == null)) {
                this.insertOrionEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOrionEventOperationCompleted);
            }
            this.InvokeAsync("insertOrionEvent", new object[] {
                        request}, this.insertOrionEventOperationCompleted, userState);
        }
        
        private void OninsertOrionEventOperationCompleted(object arg) {
            if ((this.insertOrionEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertOrionEventCompleted(this, new insertOrionEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("eventErrors", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public insertOrionEventResponseType[] processOrionEvents([System.Xml.Serialization.XmlArrayItemAttribute("events", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] orionEventType[] request) {
            object[] results = this.Invoke("processOrionEvents", new object[] {
                        request});
            return ((insertOrionEventResponseType[])(results[0]));
        }
        
        /// <remarks/>
        public void processOrionEventsAsync(orionEventType[] request) {
            this.processOrionEventsAsync(request, null);
        }
        
        /// <remarks/>
        public void processOrionEventsAsync(orionEventType[] request, object userState) {
            if ((this.processOrionEventsOperationCompleted == null)) {
                this.processOrionEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessOrionEventsOperationCompleted);
            }
            this.InvokeAsync("processOrionEvents", new object[] {
                        request}, this.processOrionEventsOperationCompleted, userState);
        }
        
        private void OnprocessOrionEventsOperationCompleted(object arg) {
            if ((this.processOrionEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processOrionEventsCompleted(this, new processOrionEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType deleteZone(string domain, int type, int purge) {
            object[] results = this.Invoke("deleteZone", new object[] {
                        domain,
                        type,
                        purge});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteZoneAsync(string domain, int type, int purge) {
            this.deleteZoneAsync(domain, type, purge, null);
        }
        
        /// <remarks/>
        public void deleteZoneAsync(string domain, int type, int purge, object userState) {
            if ((this.deleteZoneOperationCompleted == null)) {
                this.deleteZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteZoneOperationCompleted);
            }
            this.InvokeAsync("deleteZone", new object[] {
                        domain,
                        type,
                        purge}, this.deleteZoneOperationCompleted, userState);
        }
        
        private void OndeleteZoneOperationCompleted(object arg) {
            if ((this.deleteZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteZoneCompleted(this, new deleteZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifyZoneOwnership(string domain, int systemid) {
            object[] results = this.Invoke("modifyZoneOwnership", new object[] {
                        domain,
                        systemid});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifyZoneOwnershipAsync(string domain, int systemid) {
            this.modifyZoneOwnershipAsync(domain, systemid, null);
        }
        
        /// <remarks/>
        public void modifyZoneOwnershipAsync(string domain, int systemid, object userState) {
            if ((this.modifyZoneOwnershipOperationCompleted == null)) {
                this.modifyZoneOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyZoneOwnershipOperationCompleted);
            }
            this.InvokeAsync("modifyZoneOwnership", new object[] {
                        domain,
                        systemid}, this.modifyZoneOwnershipOperationCompleted, userState);
        }
        
        private void OnmodifyZoneOwnershipOperationCompleted(object arg) {
            if ((this.modifyZoneOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyZoneOwnershipCompleted(this, new modifyZoneOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifySourceType(string domain, string sourcetype, int systemid) {
            object[] results = this.Invoke("modifySourceType", new object[] {
                        domain,
                        sourcetype,
                        systemid});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifySourceTypeAsync(string domain, string sourcetype, int systemid) {
            this.modifySourceTypeAsync(domain, sourcetype, systemid, null);
        }
        
        /// <remarks/>
        public void modifySourceTypeAsync(string domain, string sourcetype, int systemid, object userState) {
            if ((this.modifySourceTypeOperationCompleted == null)) {
                this.modifySourceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySourceTypeOperationCompleted);
            }
            this.InvokeAsync("modifySourceType", new object[] {
                        domain,
                        sourcetype,
                        systemid}, this.modifySourceTypeOperationCompleted, userState);
        }
        
        private void OnmodifySourceTypeOperationCompleted(object arg) {
            if ((this.modifySourceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySourceTypeCompleted(this, new modifySourceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("uid")]
        public string getAccountUid(string domain) {
            object[] results = this.Invoke("getAccountUid", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountUidAsync(string domain) {
            this.getAccountUidAsync(domain, null);
        }
        
        /// <remarks/>
        public void getAccountUidAsync(string domain, object userState) {
            if ((this.getAccountUidOperationCompleted == null)) {
                this.getAccountUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountUidOperationCompleted);
            }
            this.InvokeAsync("getAccountUid", new object[] {
                        domain}, this.getAccountUidOperationCompleted, userState);
        }
        
        private void OngetAccountUidOperationCompleted(object arg) {
            if ((this.getAccountUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountUidCompleted(this, new getAccountUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int createZoneFolder(zoneFolderType folder) {
            object[] results = this.Invoke("createZoneFolder", new object[] {
                        folder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createZoneFolderAsync(zoneFolderType folder) {
            this.createZoneFolderAsync(folder, null);
        }
        
        /// <remarks/>
        public void createZoneFolderAsync(zoneFolderType folder, object userState) {
            if ((this.createZoneFolderOperationCompleted == null)) {
                this.createZoneFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateZoneFolderOperationCompleted);
            }
            this.InvokeAsync("createZoneFolder", new object[] {
                        folder}, this.createZoneFolderOperationCompleted, userState);
        }
        
        private void OncreateZoneFolderOperationCompleted(object arg) {
            if ((this.createZoneFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createZoneFolderCompleted(this, new createZoneFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int modifyZoneFolder(zoneFolderType folder) {
            object[] results = this.Invoke("modifyZoneFolder", new object[] {
                        folder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void modifyZoneFolderAsync(zoneFolderType folder) {
            this.modifyZoneFolderAsync(folder, null);
        }
        
        /// <remarks/>
        public void modifyZoneFolderAsync(zoneFolderType folder, object userState) {
            if ((this.modifyZoneFolderOperationCompleted == null)) {
                this.modifyZoneFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyZoneFolderOperationCompleted);
            }
            this.InvokeAsync("modifyZoneFolder", new object[] {
                        folder}, this.modifyZoneFolderOperationCompleted, userState);
        }
        
        private void OnmodifyZoneFolderOperationCompleted(object arg) {
            if ((this.modifyZoneFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyZoneFolderCompleted(this, new modifyZoneFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int deleteZoneFolder(int folderid) {
            object[] results = this.Invoke("deleteZoneFolder", new object[] {
                        folderid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteZoneFolderAsync(int folderid) {
            this.deleteZoneFolderAsync(folderid, null);
        }
        
        /// <remarks/>
        public void deleteZoneFolderAsync(int folderid, object userState) {
            if ((this.deleteZoneFolderOperationCompleted == null)) {
                this.deleteZoneFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteZoneFolderOperationCompleted);
            }
            this.InvokeAsync("deleteZoneFolder", new object[] {
                        folderid}, this.deleteZoneFolderOperationCompleted, userState);
        }
        
        private void OndeleteZoneFolderOperationCompleted(object arg) {
            if ((this.deleteZoneFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteZoneFolderCompleted(this, new deleteZoneFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int addZoneToFolder(int folderid, string domain, int systemid) {
            object[] results = this.Invoke("addZoneToFolder", new object[] {
                        folderid,
                        domain,
                        systemid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addZoneToFolderAsync(int folderid, string domain, int systemid) {
            this.addZoneToFolderAsync(folderid, domain, systemid, null);
        }
        
        /// <remarks/>
        public void addZoneToFolderAsync(int folderid, string domain, int systemid, object userState) {
            if ((this.addZoneToFolderOperationCompleted == null)) {
                this.addZoneToFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddZoneToFolderOperationCompleted);
            }
            this.InvokeAsync("addZoneToFolder", new object[] {
                        folderid,
                        domain,
                        systemid}, this.addZoneToFolderOperationCompleted, userState);
        }
        
        private void OnaddZoneToFolderOperationCompleted(object arg) {
            if ((this.addZoneToFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addZoneToFolderCompleted(this, new addZoneToFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int addZonesToFolders([System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] addZoneToFolderType[] request) {
            object[] results = this.Invoke("addZonesToFolders", new object[] {
                        request});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addZonesToFoldersAsync(addZoneToFolderType[] request) {
            this.addZonesToFoldersAsync(request, null);
        }
        
        /// <remarks/>
        public void addZonesToFoldersAsync(addZoneToFolderType[] request, object userState) {
            if ((this.addZonesToFoldersOperationCompleted == null)) {
                this.addZonesToFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddZonesToFoldersOperationCompleted);
            }
            this.InvokeAsync("addZonesToFolders", new object[] {
                        request}, this.addZonesToFoldersOperationCompleted, userState);
        }
        
        private void OnaddZonesToFoldersOperationCompleted(object arg) {
            if ((this.addZonesToFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addZonesToFoldersCompleted(this, new addZonesToFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int deleteZoneFromFolder(int folderid, string domain, int systemid) {
            object[] results = this.Invoke("deleteZoneFromFolder", new object[] {
                        folderid,
                        domain,
                        systemid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteZoneFromFolderAsync(int folderid, string domain, int systemid) {
            this.deleteZoneFromFolderAsync(folderid, domain, systemid, null);
        }
        
        /// <remarks/>
        public void deleteZoneFromFolderAsync(int folderid, string domain, int systemid, object userState) {
            if ((this.deleteZoneFromFolderOperationCompleted == null)) {
                this.deleteZoneFromFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteZoneFromFolderOperationCompleted);
            }
            this.InvokeAsync("deleteZoneFromFolder", new object[] {
                        folderid,
                        domain,
                        systemid}, this.deleteZoneFromFolderOperationCompleted, userState);
        }
        
        private void OndeleteZoneFromFolderOperationCompleted(object arg) {
            if ((this.deleteZoneFromFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteZoneFromFolderCompleted(this, new deleteZoneFromFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int deleteZoneFromAllFolders(string domain, int systemid) {
            object[] results = this.Invoke("deleteZoneFromAllFolders", new object[] {
                        domain,
                        systemid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteZoneFromAllFoldersAsync(string domain, int systemid) {
            this.deleteZoneFromAllFoldersAsync(domain, systemid, null);
        }
        
        /// <remarks/>
        public void deleteZoneFromAllFoldersAsync(string domain, int systemid, object userState) {
            if ((this.deleteZoneFromAllFoldersOperationCompleted == null)) {
                this.deleteZoneFromAllFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteZoneFromAllFoldersOperationCompleted);
            }
            this.InvokeAsync("deleteZoneFromAllFolders", new object[] {
                        domain,
                        systemid}, this.deleteZoneFromAllFoldersOperationCompleted, userState);
        }
        
        private void OndeleteZoneFromAllFoldersOperationCompleted(object arg) {
            if ((this.deleteZoneFromAllFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteZoneFromAllFoldersCompleted(this, new deleteZoneFromAllFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int deleteZonesFromFolders([System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] addZoneToFolderType[] request) {
            object[] results = this.Invoke("deleteZonesFromFolders", new object[] {
                        request});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteZonesFromFoldersAsync(addZoneToFolderType[] request) {
            this.deleteZonesFromFoldersAsync(request, null);
        }
        
        /// <remarks/>
        public void deleteZonesFromFoldersAsync(addZoneToFolderType[] request, object userState) {
            if ((this.deleteZonesFromFoldersOperationCompleted == null)) {
                this.deleteZonesFromFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteZonesFromFoldersOperationCompleted);
            }
            this.InvokeAsync("deleteZonesFromFolders", new object[] {
                        request}, this.deleteZonesFromFoldersOperationCompleted, userState);
        }
        
        private void OndeleteZonesFromFoldersOperationCompleted(object arg) {
            if ((this.deleteZonesFromFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteZonesFromFoldersCompleted(this, new deleteZonesFromFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("folders", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public zoneFolderType[] getZoneFolder(int folderid) {
            object[] results = this.Invoke("getZoneFolder", new object[] {
                        folderid});
            return ((zoneFolderType[])(results[0]));
        }
        
        /// <remarks/>
        public void getZoneFolderAsync(int folderid) {
            this.getZoneFolderAsync(folderid, null);
        }
        
        /// <remarks/>
        public void getZoneFolderAsync(int folderid, object userState) {
            if ((this.getZoneFolderOperationCompleted == null)) {
                this.getZoneFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneFolderOperationCompleted);
            }
            this.InvokeAsync("getZoneFolder", new object[] {
                        folderid}, this.getZoneFolderOperationCompleted, userState);
        }
        
        private void OngetZoneFolderOperationCompleted(object arg) {
            if ((this.getZoneFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneFolderCompleted(this, new getZoneFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("folders", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public zoneFolderType[] getZoneFolders() {
            object[] results = this.Invoke("getZoneFolders", new object[0]);
            return ((zoneFolderType[])(results[0]));
        }
        
        /// <remarks/>
        public void getZoneFoldersAsync() {
            this.getZoneFoldersAsync(null);
        }
        
        /// <remarks/>
        public void getZoneFoldersAsync(object userState) {
            if ((this.getZoneFoldersOperationCompleted == null)) {
                this.getZoneFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneFoldersOperationCompleted);
            }
            this.InvokeAsync("getZoneFolders", new object[0], this.getZoneFoldersOperationCompleted, userState);
        }
        
        private void OngetZoneFoldersOperationCompleted(object arg) {
            if ((this.getZoneFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneFoldersCompleted(this, new getZoneFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public accountListType getZonesInFolder(getZonesInFolderRequestType request) {
            object[] results = this.Invoke("getZonesInFolder", new object[] {
                        request});
            return ((accountListType)(results[0]));
        }
        
        /// <remarks/>
        public void getZonesInFolderAsync(getZonesInFolderRequestType request) {
            this.getZonesInFolderAsync(request, null);
        }
        
        /// <remarks/>
        public void getZonesInFolderAsync(getZonesInFolderRequestType request, object userState) {
            if ((this.getZonesInFolderOperationCompleted == null)) {
                this.getZonesInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZonesInFolderOperationCompleted);
            }
            this.InvokeAsync("getZonesInFolder", new object[] {
                        request}, this.getZonesInFolderOperationCompleted, userState);
        }
        
        private void OngetZonesInFolderOperationCompleted(object arg) {
            if ((this.getZonesInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZonesInFolderCompleted(this, new getZonesInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public zoneType getCustomTemplateData(int templateid) {
            object[] results = this.Invoke("getCustomTemplateData", new object[] {
                        templateid});
            return ((zoneType)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomTemplateDataAsync(int templateid) {
            this.getCustomTemplateDataAsync(templateid, null);
        }
        
        /// <remarks/>
        public void getCustomTemplateDataAsync(int templateid, object userState) {
            if ((this.getCustomTemplateDataOperationCompleted == null)) {
                this.getCustomTemplateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomTemplateDataOperationCompleted);
            }
            this.InvokeAsync("getCustomTemplateData", new object[] {
                        templateid}, this.getCustomTemplateDataOperationCompleted, userState);
        }
        
        private void OngetCustomTemplateDataOperationCompleted(object arg) {
            if ((this.getCustomTemplateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomTemplateDataCompleted(this, new getCustomTemplateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int createCustomTemplate(string templatename, soaType soa) {
            object[] results = this.Invoke("createCustomTemplate", new object[] {
                        templatename,
                        soa});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createCustomTemplateAsync(string templatename, soaType soa) {
            this.createCustomTemplateAsync(templatename, soa, null);
        }
        
        /// <remarks/>
        public void createCustomTemplateAsync(string templatename, soaType soa, object userState) {
            if ((this.createCustomTemplateOperationCompleted == null)) {
                this.createCustomTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCustomTemplateOperationCompleted);
            }
            this.InvokeAsync("createCustomTemplate", new object[] {
                        templatename,
                        soa}, this.createCustomTemplateOperationCompleted, userState);
        }
        
        private void OncreateCustomTemplateOperationCompleted(object arg) {
            if ((this.createCustomTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCustomTemplateCompleted(this, new createCustomTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("response")]
        public simpleResponseType modifyCustomTemplate(customTemplateType request) {
            object[] results = this.Invoke("modifyCustomTemplate", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifyCustomTemplateAsync(customTemplateType request) {
            this.modifyCustomTemplateAsync(request, null);
        }
        
        /// <remarks/>
        public void modifyCustomTemplateAsync(customTemplateType request, object userState) {
            if ((this.modifyCustomTemplateOperationCompleted == null)) {
                this.modifyCustomTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyCustomTemplateOperationCompleted);
            }
            this.InvokeAsync("modifyCustomTemplate", new object[] {
                        request}, this.modifyCustomTemplateOperationCompleted, userState);
        }
        
        private void OnmodifyCustomTemplateOperationCompleted(object arg) {
            if ((this.modifyCustomTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyCustomTemplateCompleted(this, new modifyCustomTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType deleteCustomTemplate(int templateid) {
            object[] results = this.Invoke("deleteCustomTemplate", new object[] {
                        templateid});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomTemplateAsync(int templateid) {
            this.deleteCustomTemplateAsync(templateid, null);
        }
        
        /// <remarks/>
        public void deleteCustomTemplateAsync(int templateid, object userState) {
            if ((this.deleteCustomTemplateOperationCompleted == null)) {
                this.deleteCustomTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomTemplateOperationCompleted);
            }
            this.InvokeAsync("deleteCustomTemplate", new object[] {
                        templateid}, this.deleteCustomTemplateOperationCompleted, userState);
        }
        
        private void OndeleteCustomTemplateOperationCompleted(object arg) {
            if ((this.deleteCustomTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomTemplateCompleted(this, new deleteCustomTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("templates", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public customTemplateType[] getCustomTemplates() {
            object[] results = this.Invoke("getCustomTemplates", new object[0]);
            return ((customTemplateType[])(results[0]));
        }
        
        /// <remarks/>
        public void getCustomTemplatesAsync() {
            this.getCustomTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void getCustomTemplatesAsync(object userState) {
            if ((this.getCustomTemplatesOperationCompleted == null)) {
                this.getCustomTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomTemplatesOperationCompleted);
            }
            this.InvokeAsync("getCustomTemplates", new object[0], this.getCustomTemplatesOperationCompleted, userState);
        }
        
        private void OngetCustomTemplatesOperationCompleted(object arg) {
            if ((this.getCustomTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomTemplatesCompleted(this, new getCustomTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public customTemplateType getCustomTemplateByName(string templatename) {
            object[] results = this.Invoke("getCustomTemplateByName", new object[] {
                        templatename});
            return ((customTemplateType)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomTemplateByNameAsync(string templatename) {
            this.getCustomTemplateByNameAsync(templatename, null);
        }
        
        /// <remarks/>
        public void getCustomTemplateByNameAsync(string templatename, object userState) {
            if ((this.getCustomTemplateByNameOperationCompleted == null)) {
                this.getCustomTemplateByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomTemplateByNameOperationCompleted);
            }
            this.InvokeAsync("getCustomTemplateByName", new object[] {
                        templatename}, this.getCustomTemplateByNameOperationCompleted, userState);
        }
        
        private void OngetCustomTemplateByNameOperationCompleted(object arg) {
            if ((this.getCustomTemplateByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomTemplateByNameCompleted(this, new getCustomTemplateByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifyCustomTemplateSoa(modifyCustomTemplateSoaRequestType soaData) {
            object[] results = this.Invoke("modifyCustomTemplateSoa", new object[] {
                        soaData});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifyCustomTemplateSoaAsync(modifyCustomTemplateSoaRequestType soaData) {
            this.modifyCustomTemplateSoaAsync(soaData, null);
        }
        
        /// <remarks/>
        public void modifyCustomTemplateSoaAsync(modifyCustomTemplateSoaRequestType soaData, object userState) {
            if ((this.modifyCustomTemplateSoaOperationCompleted == null)) {
                this.modifyCustomTemplateSoaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyCustomTemplateSoaOperationCompleted);
            }
            this.InvokeAsync("modifyCustomTemplateSoa", new object[] {
                        soaData}, this.modifyCustomTemplateSoaOperationCompleted, userState);
        }
        
        private void OnmodifyCustomTemplateSoaOperationCompleted(object arg) {
            if ((this.modifyCustomTemplateSoaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyCustomTemplateSoaCompleted(this, new modifyCustomTemplateSoaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType createCustomTemplateRecords(int templateid, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("createCustomTemplateRecords", new object[] {
                        templateid,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createCustomTemplateRecordsAsync(int templateid, rrecordType[] recordList, int returnsuccessinfo) {
            this.createCustomTemplateRecordsAsync(templateid, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void createCustomTemplateRecordsAsync(int templateid, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.createCustomTemplateRecordsOperationCompleted == null)) {
                this.createCustomTemplateRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCustomTemplateRecordsOperationCompleted);
            }
            this.InvokeAsync("createCustomTemplateRecords", new object[] {
                        templateid,
                        recordList,
                        returnsuccessinfo}, this.createCustomTemplateRecordsOperationCompleted, userState);
        }
        
        private void OncreateCustomTemplateRecordsOperationCompleted(object arg) {
            if ((this.createCustomTemplateRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCustomTemplateRecordsCompleted(this, new createCustomTemplateRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifyCustomTemplateRecords(int templateid, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("modifyCustomTemplateRecords", new object[] {
                        templateid,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifyCustomTemplateRecordsAsync(int templateid, rrecordType[] recordList, int returnsuccessinfo) {
            this.modifyCustomTemplateRecordsAsync(templateid, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void modifyCustomTemplateRecordsAsync(int templateid, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.modifyCustomTemplateRecordsOperationCompleted == null)) {
                this.modifyCustomTemplateRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyCustomTemplateRecordsOperationCompleted);
            }
            this.InvokeAsync("modifyCustomTemplateRecords", new object[] {
                        templateid,
                        recordList,
                        returnsuccessinfo}, this.modifyCustomTemplateRecordsOperationCompleted, userState);
        }
        
        private void OnmodifyCustomTemplateRecordsOperationCompleted(object arg) {
            if ((this.modifyCustomTemplateRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyCustomTemplateRecordsCompleted(this, new modifyCustomTemplateRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType deleteCustomTemplateRecords(int templateid, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList, int returnsuccessinfo) {
            object[] results = this.Invoke("deleteCustomTemplateRecords", new object[] {
                        templateid,
                        recordList,
                        returnsuccessinfo});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomTemplateRecordsAsync(int templateid, rrecordType[] recordList, int returnsuccessinfo) {
            this.deleteCustomTemplateRecordsAsync(templateid, recordList, returnsuccessinfo, null);
        }
        
        /// <remarks/>
        public void deleteCustomTemplateRecordsAsync(int templateid, rrecordType[] recordList, int returnsuccessinfo, object userState) {
            if ((this.deleteCustomTemplateRecordsOperationCompleted == null)) {
                this.deleteCustomTemplateRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomTemplateRecordsOperationCompleted);
            }
            this.InvokeAsync("deleteCustomTemplateRecords", new object[] {
                        templateid,
                        recordList,
                        returnsuccessinfo}, this.deleteCustomTemplateRecordsOperationCompleted, userState);
        }
        
        private void OndeleteCustomTemplateRecordsOperationCompleted(object arg) {
            if ((this.deleteCustomTemplateRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomTemplateRecordsCompleted(this, new deleteCustomTemplateRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType applyCustomTemplate([System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] applyCustomTemplateType[] request) {
            object[] results = this.Invoke("applyCustomTemplate", new object[] {
                        request});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void applyCustomTemplateAsync(applyCustomTemplateType[] request) {
            this.applyCustomTemplateAsync(request, null);
        }
        
        /// <remarks/>
        public void applyCustomTemplateAsync(applyCustomTemplateType[] request, object userState) {
            if ((this.applyCustomTemplateOperationCompleted == null)) {
                this.applyCustomTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyCustomTemplateOperationCompleted);
            }
            this.InvokeAsync("applyCustomTemplate", new object[] {
                        request}, this.applyCustomTemplateOperationCompleted, userState);
        }
        
        private void OnapplyCustomTemplateOperationCompleted(object arg) {
            if ((this.applyCustomTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyCustomTemplateCompleted(this, new applyCustomTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType applyCustomTemplatesToDomains([System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] applyCustomTemplateType[] request) {
            object[] results = this.Invoke("applyCustomTemplatesToDomains", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void applyCustomTemplatesToDomainsAsync(applyCustomTemplateType[] request) {
            this.applyCustomTemplatesToDomainsAsync(request, null);
        }
        
        /// <remarks/>
        public void applyCustomTemplatesToDomainsAsync(applyCustomTemplateType[] request, object userState) {
            if ((this.applyCustomTemplatesToDomainsOperationCompleted == null)) {
                this.applyCustomTemplatesToDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyCustomTemplatesToDomainsOperationCompleted);
            }
            this.InvokeAsync("applyCustomTemplatesToDomains", new object[] {
                        request}, this.applyCustomTemplatesToDomainsOperationCompleted, userState);
        }
        
        private void OnapplyCustomTemplatesToDomainsOperationCompleted(object arg) {
            if ((this.applyCustomTemplatesToDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyCustomTemplatesToDomainsCompleted(this, new applyCustomTemplatesToDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public applyCustomTemplateQueueType getApplyTemplateQueueStatus(getApplyTemplateQueueStatusRequestType request) {
            object[] results = this.Invoke("getApplyTemplateQueueStatus", new object[] {
                        request});
            return ((applyCustomTemplateQueueType)(results[0]));
        }
        
        /// <remarks/>
        public void getApplyTemplateQueueStatusAsync(getApplyTemplateQueueStatusRequestType request) {
            this.getApplyTemplateQueueStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void getApplyTemplateQueueStatusAsync(getApplyTemplateQueueStatusRequestType request, object userState) {
            if ((this.getApplyTemplateQueueStatusOperationCompleted == null)) {
                this.getApplyTemplateQueueStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplyTemplateQueueStatusOperationCompleted);
            }
            this.InvokeAsync("getApplyTemplateQueueStatus", new object[] {
                        request}, this.getApplyTemplateQueueStatusOperationCompleted, userState);
        }
        
        private void OngetApplyTemplateQueueStatusOperationCompleted(object arg) {
            if ((this.getApplyTemplateQueueStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplyTemplateQueueStatusCompleted(this, new getApplyTemplateQueueStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public createVanityNameServersResponseType createVanityNameServers(createVanityNameServersRequestType request) {
            object[] results = this.Invoke("createVanityNameServers", new object[] {
                        request});
            return ((createVanityNameServersResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createVanityNameServersAsync(createVanityNameServersRequestType request) {
            this.createVanityNameServersAsync(request, null);
        }
        
        /// <remarks/>
        public void createVanityNameServersAsync(createVanityNameServersRequestType request, object userState) {
            if ((this.createVanityNameServersOperationCompleted == null)) {
                this.createVanityNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVanityNameServersOperationCompleted);
            }
            this.InvokeAsync("createVanityNameServers", new object[] {
                        request}, this.createVanityNameServersOperationCompleted, userState);
        }
        
        private void OncreateVanityNameServersOperationCompleted(object arg) {
            if ((this.createVanityNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createVanityNameServersCompleted(this, new createVanityNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public getVanityNameServersResponseType getVanityNameServers(string domain) {
            object[] results = this.Invoke("getVanityNameServers", new object[] {
                        domain});
            return ((getVanityNameServersResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getVanityNameServersAsync(string domain) {
            this.getVanityNameServersAsync(domain, null);
        }
        
        /// <remarks/>
        public void getVanityNameServersAsync(string domain, object userState) {
            if ((this.getVanityNameServersOperationCompleted == null)) {
                this.getVanityNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVanityNameServersOperationCompleted);
            }
            this.InvokeAsync("getVanityNameServers", new object[] {
                        domain}, this.getVanityNameServersOperationCompleted, userState);
        }
        
        private void OngetVanityNameServersOperationCompleted(object arg) {
            if ((this.getVanityNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVanityNameServersCompleted(this, new getVanityNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public deleteVanityNameServersResponseType deleteVanityNameServers(string domain) {
            object[] results = this.Invoke("deleteVanityNameServers", new object[] {
                        domain});
            return ((deleteVanityNameServersResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteVanityNameServersAsync(string domain) {
            this.deleteVanityNameServersAsync(domain, null);
        }
        
        /// <remarks/>
        public void deleteVanityNameServersAsync(string domain, object userState) {
            if ((this.deleteVanityNameServersOperationCompleted == null)) {
                this.deleteVanityNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteVanityNameServersOperationCompleted);
            }
            this.InvokeAsync("deleteVanityNameServers", new object[] {
                        domain}, this.deleteVanityNameServersOperationCompleted, userState);
        }
        
        private void OndeleteVanityNameServersOperationCompleted(object arg) {
            if ((this.deleteVanityNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteVanityNameServersCompleted(this, new deleteVanityNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void modifyVanityNameServers(createVanityNameServersRequestType request) {
            this.Invoke("modifyVanityNameServers", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void modifyVanityNameServersAsync(createVanityNameServersRequestType request) {
            this.modifyVanityNameServersAsync(request, null);
        }
        
        /// <remarks/>
        public void modifyVanityNameServersAsync(createVanityNameServersRequestType request, object userState) {
            if ((this.modifyVanityNameServersOperationCompleted == null)) {
                this.modifyVanityNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyVanityNameServersOperationCompleted);
            }
            this.InvokeAsync("modifyVanityNameServers", new object[] {
                        request}, this.modifyVanityNameServersOperationCompleted, userState);
        }
        
        private void OnmodifyVanityNameServersOperationCompleted(object arg) {
            if ((this.modifyVanityNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyVanityNameServersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string migrateZoneToPremium(string domain) {
            object[] results = this.Invoke("migrateZoneToPremium", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void migrateZoneToPremiumAsync(string domain) {
            this.migrateZoneToPremiumAsync(domain, null);
        }
        
        /// <remarks/>
        public void migrateZoneToPremiumAsync(string domain, object userState) {
            if ((this.migrateZoneToPremiumOperationCompleted == null)) {
                this.migrateZoneToPremiumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmigrateZoneToPremiumOperationCompleted);
            }
            this.InvokeAsync("migrateZoneToPremium", new object[] {
                        domain}, this.migrateZoneToPremiumOperationCompleted, userState);
        }
        
        private void OnmigrateZoneToPremiumOperationCompleted(object arg) {
            if ((this.migrateZoneToPremiumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.migrateZoneToPremiumCompleted(this, new migrateZoneToPremiumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType setNameServers(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] string[] addservers, [System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] string[] removeservers) {
            object[] results = this.Invoke("setNameServers", new object[] {
                        domain,
                        addservers,
                        removeservers});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void setNameServersAsync(string domain, string[] addservers, string[] removeservers) {
            this.setNameServersAsync(domain, addservers, removeservers, null);
        }
        
        /// <remarks/>
        public void setNameServersAsync(string domain, string[] addservers, string[] removeservers, object userState) {
            if ((this.setNameServersOperationCompleted == null)) {
                this.setNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetNameServersOperationCompleted);
            }
            this.InvokeAsync("setNameServers", new object[] {
                        domain,
                        addservers,
                        removeservers}, this.setNameServersOperationCompleted, userState);
        }
        
        private void OnsetNameServersOperationCompleted(object arg) {
            if ((this.setNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setNameServersCompleted(this, new setNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("results", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public tdnsHealthCheckDataType[] tdnsHealthCheck(string domain) {
            object[] results = this.Invoke("tdnsHealthCheck", new object[] {
                        domain});
            return ((tdnsHealthCheckDataType[])(results[0]));
        }
        
        /// <remarks/>
        public void tdnsHealthCheckAsync(string domain) {
            this.tdnsHealthCheckAsync(domain, null);
        }
        
        /// <remarks/>
        public void tdnsHealthCheckAsync(string domain, object userState) {
            if ((this.tdnsHealthCheckOperationCompleted == null)) {
                this.tdnsHealthCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OntdnsHealthCheckOperationCompleted);
            }
            this.InvokeAsync("tdnsHealthCheck", new object[] {
                        domain}, this.tdnsHealthCheckOperationCompleted, userState);
        }
        
        private void OntdnsHealthCheckOperationCompleted(object arg) {
            if ((this.tdnsHealthCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tdnsHealthCheckCompleted(this, new tdnsHealthCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType tdnsHealthCheckFix(string domain, tdnsHealthCheckDataType fix) {
            object[] results = this.Invoke("tdnsHealthCheckFix", new object[] {
                        domain,
                        fix});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void tdnsHealthCheckFixAsync(string domain, tdnsHealthCheckDataType fix) {
            this.tdnsHealthCheckFixAsync(domain, fix, null);
        }
        
        /// <remarks/>
        public void tdnsHealthCheckFixAsync(string domain, tdnsHealthCheckDataType fix, object userState) {
            if ((this.tdnsHealthCheckFixOperationCompleted == null)) {
                this.tdnsHealthCheckFixOperationCompleted = new System.Threading.SendOrPostCallback(this.OntdnsHealthCheckFixOperationCompleted);
            }
            this.InvokeAsync("tdnsHealthCheckFix", new object[] {
                        domain,
                        fix}, this.tdnsHealthCheckFixOperationCompleted, userState);
        }
        
        private void OntdnsHealthCheckFixOperationCompleted(object arg) {
            if ((this.tdnsHealthCheckFixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tdnsHealthCheckFixCompleted(this, new tdnsHealthCheckFixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType submitNewDSRecords(dsSubmissionType dsdata) {
            object[] results = this.Invoke("submitNewDSRecords", new object[] {
                        dsdata});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void submitNewDSRecordsAsync(dsSubmissionType dsdata) {
            this.submitNewDSRecordsAsync(dsdata, null);
        }
        
        /// <remarks/>
        public void submitNewDSRecordsAsync(dsSubmissionType dsdata, object userState) {
            if ((this.submitNewDSRecordsOperationCompleted == null)) {
                this.submitNewDSRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitNewDSRecordsOperationCompleted);
            }
            this.InvokeAsync("submitNewDSRecords", new object[] {
                        dsdata}, this.submitNewDSRecordsOperationCompleted, userState);
        }
        
        private void OnsubmitNewDSRecordsOperationCompleted(object arg) {
            if ((this.submitNewDSRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitNewDSRecordsCompleted(this, new submitNewDSRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public dnssecStatusType getDNSSECStatus(dnssecRequestType request) {
            object[] results = this.Invoke("getDNSSECStatus", new object[] {
                        request});
            return ((dnssecStatusType)(results[0]));
        }
        
        /// <remarks/>
        public void getDNSSECStatusAsync(dnssecRequestType request) {
            this.getDNSSECStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void getDNSSECStatusAsync(dnssecRequestType request, object userState) {
            if ((this.getDNSSECStatusOperationCompleted == null)) {
                this.getDNSSECStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDNSSECStatusOperationCompleted);
            }
            this.InvokeAsync("getDNSSECStatus", new object[] {
                        request}, this.getDNSSECStatusOperationCompleted, userState);
        }
        
        private void OngetDNSSECStatusOperationCompleted(object arg) {
            if ((this.getDNSSECStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDNSSECStatusCompleted(this, new getDNSSECStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public dnssecStatusType getDNSSECStatusByShopper() {
            object[] results = this.Invoke("getDNSSECStatusByShopper", new object[0]);
            return ((dnssecStatusType)(results[0]));
        }
        
        /// <remarks/>
        public void getDNSSECStatusByShopperAsync() {
            this.getDNSSECStatusByShopperAsync(null);
        }
        
        /// <remarks/>
        public void getDNSSECStatusByShopperAsync(object userState) {
            if ((this.getDNSSECStatusByShopperOperationCompleted == null)) {
                this.getDNSSECStatusByShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDNSSECStatusByShopperOperationCompleted);
            }
            this.InvokeAsync("getDNSSECStatusByShopper", new object[0], this.getDNSSECStatusByShopperOperationCompleted, userState);
        }
        
        private void OngetDNSSECStatusByShopperOperationCompleted(object arg) {
            if ((this.getDNSSECStatusByShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDNSSECStatusByShopperCompleted(this, new getDNSSECStatusByShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType enableDNSSEC(dnssecRequestType request) {
            object[] results = this.Invoke("enableDNSSEC", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void enableDNSSECAsync(dnssecRequestType request) {
            this.enableDNSSECAsync(request, null);
        }
        
        /// <remarks/>
        public void enableDNSSECAsync(dnssecRequestType request, object userState) {
            if ((this.enableDNSSECOperationCompleted == null)) {
                this.enableDNSSECOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableDNSSECOperationCompleted);
            }
            this.InvokeAsync("enableDNSSEC", new object[] {
                        request}, this.enableDNSSECOperationCompleted, userState);
        }
        
        private void OnenableDNSSECOperationCompleted(object arg) {
            if ((this.enableDNSSECCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableDNSSECCompleted(this, new enableDNSSECCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType updateDNSSECNotifyEmail(dnssecRequestType request) {
            object[] results = this.Invoke("updateDNSSECNotifyEmail", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void updateDNSSECNotifyEmailAsync(dnssecRequestType request) {
            this.updateDNSSECNotifyEmailAsync(request, null);
        }
        
        /// <remarks/>
        public void updateDNSSECNotifyEmailAsync(dnssecRequestType request, object userState) {
            if ((this.updateDNSSECNotifyEmailOperationCompleted == null)) {
                this.updateDNSSECNotifyEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDNSSECNotifyEmailOperationCompleted);
            }
            this.InvokeAsync("updateDNSSECNotifyEmail", new object[] {
                        request}, this.updateDNSSECNotifyEmailOperationCompleted, userState);
        }
        
        private void OnupdateDNSSECNotifyEmailOperationCompleted(object arg) {
            if ((this.updateDNSSECNotifyEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDNSSECNotifyEmailCompleted(this, new updateDNSSECNotifyEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType disableDNSSEC(dnssecRequestType request) {
            object[] results = this.Invoke("disableDNSSEC", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void disableDNSSECAsync(dnssecRequestType request) {
            this.disableDNSSECAsync(request, null);
        }
        
        /// <remarks/>
        public void disableDNSSECAsync(dnssecRequestType request, object userState) {
            if ((this.disableDNSSECOperationCompleted == null)) {
                this.disableDNSSECOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableDNSSECOperationCompleted);
            }
            this.InvokeAsync("disableDNSSEC", new object[] {
                        request}, this.disableDNSSECOperationCompleted, userState);
        }
        
        private void OndisableDNSSECOperationCompleted(object arg) {
            if ((this.disableDNSSECCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableDNSSECCompleted(this, new disableDNSSECCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public auditLogType getCustomerAuditLog(getCustomerAuditLogRequestType request) {
            object[] results = this.Invoke("getCustomerAuditLog", new object[] {
                        request});
            return ((auditLogType)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAuditLogAsync(getCustomerAuditLogRequestType request) {
            this.getCustomerAuditLogAsync(request, null);
        }
        
        /// <remarks/>
        public void getCustomerAuditLogAsync(getCustomerAuditLogRequestType request, object userState) {
            if ((this.getCustomerAuditLogOperationCompleted == null)) {
                this.getCustomerAuditLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerAuditLogOperationCompleted);
            }
            this.InvokeAsync("getCustomerAuditLog", new object[] {
                        request}, this.getCustomerAuditLogOperationCompleted, userState);
        }
        
        private void OngetCustomerAuditLogOperationCompleted(object arg) {
            if ((this.getCustomerAuditLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerAuditLogCompleted(this, new getCustomerAuditLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public auditLogType getCustomerAuditLogById(int id) {
            object[] results = this.Invoke("getCustomerAuditLogById", new object[] {
                        id});
            return ((auditLogType)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAuditLogByIdAsync(int id) {
            this.getCustomerAuditLogByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void getCustomerAuditLogByIdAsync(int id, object userState) {
            if ((this.getCustomerAuditLogByIdOperationCompleted == null)) {
                this.getCustomerAuditLogByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerAuditLogByIdOperationCompleted);
            }
            this.InvokeAsync("getCustomerAuditLogById", new object[] {
                        id}, this.getCustomerAuditLogByIdOperationCompleted, userState);
        }
        
        private void OngetCustomerAuditLogByIdOperationCompleted(object arg) {
            if ((this.getCustomerAuditLogByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerAuditLogByIdCompleted(this, new getCustomerAuditLogByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public getPremiumStatusResponseType getPremiumStatus() {
            object[] results = this.Invoke("getPremiumStatus", new object[0]);
            return ((getPremiumStatusResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getPremiumStatusAsync() {
            this.getPremiumStatusAsync(null);
        }
        
        /// <remarks/>
        public void getPremiumStatusAsync(object userState) {
            if ((this.getPremiumStatusOperationCompleted == null)) {
                this.getPremiumStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPremiumStatusOperationCompleted);
            }
            this.InvokeAsync("getPremiumStatus", new object[0], this.getPremiumStatusOperationCompleted, userState);
        }
        
        private void OngetPremiumStatusOperationCompleted(object arg) {
            if ((this.getPremiumStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPremiumStatusCompleted(this, new getPremiumStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("domains", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public domainRecordsType[] getMainANSByShopper() {
            object[] results = this.Invoke("getMainANSByShopper", new object[0]);
            return ((domainRecordsType[])(results[0]));
        }
        
        /// <remarks/>
        public void getMainANSByShopperAsync() {
            this.getMainANSByShopperAsync(null);
        }
        
        /// <remarks/>
        public void getMainANSByShopperAsync(object userState) {
            if ((this.getMainANSByShopperOperationCompleted == null)) {
                this.getMainANSByShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainANSByShopperOperationCompleted);
            }
            this.InvokeAsync("getMainANSByShopper", new object[0], this.getMainANSByShopperOperationCompleted, userState);
        }
        
        private void OngetMainANSByShopperOperationCompleted(object arg) {
            if ((this.getMainANSByShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainANSByShopperCompleted(this, new getMainANSByShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType enableXferSlave(enableXferSlaveRequestType request) {
            object[] results = this.Invoke("enableXferSlave", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void enableXferSlaveAsync(enableXferSlaveRequestType request) {
            this.enableXferSlaveAsync(request, null);
        }
        
        /// <remarks/>
        public void enableXferSlaveAsync(enableXferSlaveRequestType request, object userState) {
            if ((this.enableXferSlaveOperationCompleted == null)) {
                this.enableXferSlaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableXferSlaveOperationCompleted);
            }
            this.InvokeAsync("enableXferSlave", new object[] {
                        request}, this.enableXferSlaveOperationCompleted, userState);
        }
        
        private void OnenableXferSlaveOperationCompleted(object arg) {
            if ((this.enableXferSlaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableXferSlaveCompleted(this, new enableXferSlaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public getXferStatusResponseType getXferStatus(string domain) {
            object[] results = this.Invoke("getXferStatus", new object[] {
                        domain});
            return ((getXferStatusResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getXferStatusAsync(string domain) {
            this.getXferStatusAsync(domain, null);
        }
        
        /// <remarks/>
        public void getXferStatusAsync(string domain, object userState) {
            if ((this.getXferStatusOperationCompleted == null)) {
                this.getXferStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXferStatusOperationCompleted);
            }
            this.InvokeAsync("getXferStatus", new object[] {
                        domain}, this.getXferStatusOperationCompleted, userState);
        }
        
        private void OngetXferStatusOperationCompleted(object arg) {
            if ((this.getXferStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXferStatusCompleted(this, new getXferStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType updateXferSlave(updateXferSlaveRequestType request) {
            object[] results = this.Invoke("updateXferSlave", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void updateXferSlaveAsync(updateXferSlaveRequestType request) {
            this.updateXferSlaveAsync(request, null);
        }
        
        /// <remarks/>
        public void updateXferSlaveAsync(updateXferSlaveRequestType request, object userState) {
            if ((this.updateXferSlaveOperationCompleted == null)) {
                this.updateXferSlaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateXferSlaveOperationCompleted);
            }
            this.InvokeAsync("updateXferSlave", new object[] {
                        request}, this.updateXferSlaveOperationCompleted, userState);
        }
        
        private void OnupdateXferSlaveOperationCompleted(object arg) {
            if ((this.updateXferSlaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateXferSlaveCompleted(this, new updateXferSlaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType disableXferSlave(string domain) {
            object[] results = this.Invoke("disableXferSlave", new object[] {
                        domain});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void disableXferSlaveAsync(string domain) {
            this.disableXferSlaveAsync(domain, null);
        }
        
        /// <remarks/>
        public void disableXferSlaveAsync(string domain, object userState) {
            if ((this.disableXferSlaveOperationCompleted == null)) {
                this.disableXferSlaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableXferSlaveOperationCompleted);
            }
            this.InvokeAsync("disableXferSlave", new object[] {
                        domain}, this.disableXferSlaveOperationCompleted, userState);
        }
        
        private void OndisableXferSlaveOperationCompleted(object arg) {
            if ((this.disableXferSlaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableXferSlaveCompleted(this, new disableXferSlaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType enableXferMaster(enableXferMasterRequestType request) {
            object[] results = this.Invoke("enableXferMaster", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void enableXferMasterAsync(enableXferMasterRequestType request) {
            this.enableXferMasterAsync(request, null);
        }
        
        /// <remarks/>
        public void enableXferMasterAsync(enableXferMasterRequestType request, object userState) {
            if ((this.enableXferMasterOperationCompleted == null)) {
                this.enableXferMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableXferMasterOperationCompleted);
            }
            this.InvokeAsync("enableXferMaster", new object[] {
                        request}, this.enableXferMasterOperationCompleted, userState);
        }
        
        private void OnenableXferMasterOperationCompleted(object arg) {
            if ((this.enableXferMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableXferMasterCompleted(this, new enableXferMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType updateXferMaster(updateXferMasterRequestType request) {
            object[] results = this.Invoke("updateXferMaster", new object[] {
                        request});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void updateXferMasterAsync(updateXferMasterRequestType request) {
            this.updateXferMasterAsync(request, null);
        }
        
        /// <remarks/>
        public void updateXferMasterAsync(updateXferMasterRequestType request, object userState) {
            if ((this.updateXferMasterOperationCompleted == null)) {
                this.updateXferMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateXferMasterOperationCompleted);
            }
            this.InvokeAsync("updateXferMaster", new object[] {
                        request}, this.updateXferMasterOperationCompleted, userState);
        }
        
        private void OnupdateXferMasterOperationCompleted(object arg) {
            if ((this.updateXferMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateXferMasterCompleted(this, new updateXferMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType disableXferMaster(string domain) {
            object[] results = this.Invoke("disableXferMaster", new object[] {
                        domain});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void disableXferMasterAsync(string domain) {
            this.disableXferMasterAsync(domain, null);
        }
        
        /// <remarks/>
        public void disableXferMasterAsync(string domain, object userState) {
            if ((this.disableXferMasterOperationCompleted == null)) {
                this.disableXferMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableXferMasterOperationCompleted);
            }
            this.InvokeAsync("disableXferMaster", new object[] {
                        domain}, this.disableXferMasterOperationCompleted, userState);
        }
        
        private void OndisableXferMasterOperationCompleted(object arg) {
            if ((this.disableXferMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableXferMasterCompleted(this, new disableXferMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifySoa(string domain, soaType soaData) {
            object[] results = this.Invoke("modifySoa", new object[] {
                        domain,
                        soaData});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifySoaAsync(string domain, soaType soaData) {
            this.modifySoaAsync(domain, soaData, null);
        }
        
        /// <remarks/>
        public void modifySoaAsync(string domain, soaType soaData, object userState) {
            if ((this.modifySoaOperationCompleted == null)) {
                this.modifySoaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySoaOperationCompleted);
            }
            this.InvokeAsync("modifySoa", new object[] {
                        domain,
                        soaData}, this.modifySoaOperationCompleted, userState);
        }
        
        private void OnmodifySoaOperationCompleted(object arg) {
            if ((this.modifySoaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySoaCompleted(this, new modifySoaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType createOffsiteZone(string domain) {
            object[] results = this.Invoke("createOffsiteZone", new object[] {
                        domain});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createOffsiteZoneAsync(string domain) {
            this.createOffsiteZoneAsync(domain, null);
        }
        
        /// <remarks/>
        public void createOffsiteZoneAsync(string domain, object userState) {
            if ((this.createOffsiteZoneOperationCompleted == null)) {
                this.createOffsiteZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOffsiteZoneOperationCompleted);
            }
            this.InvokeAsync("createOffsiteZone", new object[] {
                        domain}, this.createOffsiteZoneOperationCompleted, userState);
        }
        
        private void OncreateOffsiteZoneOperationCompleted(object arg) {
            if ((this.createOffsiteZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOffsiteZoneCompleted(this, new createOffsiteZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public simpleResponseType deleteOffsiteZone(string domain) {
            object[] results = this.Invoke("deleteOffsiteZone", new object[] {
                        domain});
            return ((simpleResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteOffsiteZoneAsync(string domain) {
            this.deleteOffsiteZoneAsync(domain, null);
        }
        
        /// <remarks/>
        public void deleteOffsiteZoneAsync(string domain, object userState) {
            if ((this.deleteOffsiteZoneOperationCompleted == null)) {
                this.deleteOffsiteZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOffsiteZoneOperationCompleted);
            }
            this.InvokeAsync("deleteOffsiteZone", new object[] {
                        domain}, this.deleteOffsiteZoneOperationCompleted, userState);
        }
        
        private void OndeleteOffsiteZoneOperationCompleted(object arg) {
            if ((this.deleteOffsiteZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteOffsiteZoneCompleted(this, new deleteOffsiteZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public soaType getDefaultSoaValues() {
            object[] results = this.Invoke("getDefaultSoaValues", new object[0]);
            return ((soaType)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultSoaValuesAsync() {
            this.getDefaultSoaValuesAsync(null);
        }
        
        /// <remarks/>
        public void getDefaultSoaValuesAsync(object userState) {
            if ((this.getDefaultSoaValuesOperationCompleted == null)) {
                this.getDefaultSoaValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultSoaValuesOperationCompleted);
            }
            this.InvokeAsync("getDefaultSoaValues", new object[0], this.getDefaultSoaValuesOperationCompleted, userState);
        }
        
        private void OngetDefaultSoaValuesOperationCompleted(object arg) {
            if ((this.getDefaultSoaValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultSoaValuesCompleted(this, new getDefaultSoaValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getRecordsByUid(getRecordsByUidRequestType request) {
            object[] results = this.Invoke("getRecordsByUid", new object[] {
                        request});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getRecordsByUidAsync(getRecordsByUidRequestType request) {
            this.getRecordsByUidAsync(request, null);
        }
        
        /// <remarks/>
        public void getRecordsByUidAsync(getRecordsByUidRequestType request, object userState) {
            if ((this.getRecordsByUidOperationCompleted == null)) {
                this.getRecordsByUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecordsByUidOperationCompleted);
            }
            this.InvokeAsync("getRecordsByUid", new object[] {
                        request}, this.getRecordsByUidOperationCompleted, userState);
        }
        
        private void OngetRecordsByUidOperationCompleted(object arg) {
            if ((this.getRecordsByUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecordsByUidCompleted(this, new getRecordsByUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public queryReportMonthlySummaryType getQueryReportMonthlySummary(string domain) {
            object[] results = this.Invoke("getQueryReportMonthlySummary", new object[] {
                        domain});
            return ((queryReportMonthlySummaryType)(results[0]));
        }
        
        /// <remarks/>
        public void getQueryReportMonthlySummaryAsync(string domain) {
            this.getQueryReportMonthlySummaryAsync(domain, null);
        }
        
        /// <remarks/>
        public void getQueryReportMonthlySummaryAsync(string domain, object userState) {
            if ((this.getQueryReportMonthlySummaryOperationCompleted == null)) {
                this.getQueryReportMonthlySummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueryReportMonthlySummaryOperationCompleted);
            }
            this.InvokeAsync("getQueryReportMonthlySummary", new object[] {
                        domain}, this.getQueryReportMonthlySummaryOperationCompleted, userState);
        }
        
        private void OngetQueryReportMonthlySummaryOperationCompleted(object arg) {
            if ((this.getQueryReportMonthlySummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueryReportMonthlySummaryCompleted(this, new getQueryReportMonthlySummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public queryReportResponseType getQueryReportMonthlyDateRange(queryReportRangeRequestType request) {
            object[] results = this.Invoke("getQueryReportMonthlyDateRange", new object[] {
                        request});
            return ((queryReportResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getQueryReportMonthlyDateRangeAsync(queryReportRangeRequestType request) {
            this.getQueryReportMonthlyDateRangeAsync(request, null);
        }
        
        /// <remarks/>
        public void getQueryReportMonthlyDateRangeAsync(queryReportRangeRequestType request, object userState) {
            if ((this.getQueryReportMonthlyDateRangeOperationCompleted == null)) {
                this.getQueryReportMonthlyDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueryReportMonthlyDateRangeOperationCompleted);
            }
            this.InvokeAsync("getQueryReportMonthlyDateRange", new object[] {
                        request}, this.getQueryReportMonthlyDateRangeOperationCompleted, userState);
        }
        
        private void OngetQueryReportMonthlyDateRangeOperationCompleted(object arg) {
            if ((this.getQueryReportMonthlyDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueryReportMonthlyDateRangeCompleted(this, new getQueryReportMonthlyDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public queryReportResponseType getQueryReportDailyDateRange(queryReportRangeRequestType request) {
            object[] results = this.Invoke("getQueryReportDailyDateRange", new object[] {
                        request});
            return ((queryReportResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getQueryReportDailyDateRangeAsync(queryReportRangeRequestType request) {
            this.getQueryReportDailyDateRangeAsync(request, null);
        }
        
        /// <remarks/>
        public void getQueryReportDailyDateRangeAsync(queryReportRangeRequestType request, object userState) {
            if ((this.getQueryReportDailyDateRangeOperationCompleted == null)) {
                this.getQueryReportDailyDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueryReportDailyDateRangeOperationCompleted);
            }
            this.InvokeAsync("getQueryReportDailyDateRange", new object[] {
                        request}, this.getQueryReportDailyDateRangeOperationCompleted, userState);
        }
        
        private void OngetQueryReportDailyDateRangeOperationCompleted(object arg) {
            if ((this.getQueryReportDailyDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueryReportDailyDateRangeCompleted(this, new getQueryReportDailyDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public queryReportResponseType getQueryReportHourlyDateRange(queryReportRangeRequestType request) {
            object[] results = this.Invoke("getQueryReportHourlyDateRange", new object[] {
                        request});
            return ((queryReportResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getQueryReportHourlyDateRangeAsync(queryReportRangeRequestType request) {
            this.getQueryReportHourlyDateRangeAsync(request, null);
        }
        
        /// <remarks/>
        public void getQueryReportHourlyDateRangeAsync(queryReportRangeRequestType request, object userState) {
            if ((this.getQueryReportHourlyDateRangeOperationCompleted == null)) {
                this.getQueryReportHourlyDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueryReportHourlyDateRangeOperationCompleted);
            }
            this.InvokeAsync("getQueryReportHourlyDateRange", new object[] {
                        request}, this.getQueryReportHourlyDateRangeOperationCompleted, userState);
        }
        
        private void OngetQueryReportHourlyDateRangeOperationCompleted(object arg) {
            if ((this.getQueryReportHourlyDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueryReportHourlyDateRangeCompleted(this, new getQueryReportHourlyDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    [System.Xml.Serialization.XmlRootAttribute("clientAuth", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
    public partial class authDataType : System.Web.Services.Protocols.SoapHeader {
        
        private string clientidField;
        
        private string tokenField;
        
        private string clientipField;
        
        /// <remarks/>
        public string clientid {
            get {
                return this.clientidField;
            }
            set {
                this.clientidField = value;
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string clientip {
            get {
                return this.clientipField;
            }
            set {
                this.clientipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class queryReportElementType {
        
        private string dateField;
        
        private int qcountField;
        
        private int qcountdnssecField;
        
        private bool qcountdnssecFieldSpecified;
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public int qcount {
            get {
                return this.qcountField;
            }
            set {
                this.qcountField = value;
            }
        }
        
        /// <remarks/>
        public int qcountdnssec {
            get {
                return this.qcountdnssecField;
            }
            set {
                this.qcountdnssecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qcountdnssecSpecified {
            get {
                return this.qcountdnssecFieldSpecified;
            }
            set {
                this.qcountdnssecFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class queryReportResponseType {
        
        private string domainField;
        
        private queryReportElementType[] reportField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("report")]
        public queryReportElementType[] report {
            get {
                return this.reportField;
            }
            set {
                this.reportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class queryReportRangeRequestType {
        
        private string domainField;
        
        private string startdateField;
        
        private string enddateField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public string enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class queryReportMonthlyElementType {
        
        private int monthField;
        
        private int qcountField;
        
        /// <remarks/>
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        public int qcount {
            get {
                return this.qcountField;
            }
            set {
                this.qcountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class queryReportMonthlySummaryType {
        
        private string domainField;
        
        private int qcounttodayField;
        
        private bool qcounttodayFieldSpecified;
        
        private int qcountmonthField;
        
        private bool qcountmonthFieldSpecified;
        
        private queryReportMonthlyElementType[] reportField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public int qcounttoday {
            get {
                return this.qcounttodayField;
            }
            set {
                this.qcounttodayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qcounttodaySpecified {
            get {
                return this.qcounttodayFieldSpecified;
            }
            set {
                this.qcounttodayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int qcountmonth {
            get {
                return this.qcountmonthField;
            }
            set {
                this.qcountmonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qcountmonthSpecified {
            get {
                return this.qcountmonthFieldSpecified;
            }
            set {
                this.qcountmonthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("report")]
        public queryReportMonthlyElementType[] report {
            get {
                return this.reportField;
            }
            set {
                this.reportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getRecordsByUidRequestType {
        
        private string accountuidField;
        
        private string[] attributeuidField;
        
        /// <remarks/>
        public string accountuid {
            get {
                return this.accountuidField;
            }
            set {
                this.accountuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributeuid")]
        public string[] attributeuid {
            get {
                return this.attributeuidField;
            }
            set {
                this.attributeuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class updateXferMasterRequestType {
        
        private string domainField;
        
        private enableXferMasterRequestType addField;
        
        private int[] deleteField;
        
        private string[] sendnotifyField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public enableXferMasterRequestType add {
            get {
                return this.addField;
            }
            set {
                this.addField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("delete")]
        public int[] delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sendnotify")]
        public string[] sendnotify {
            get {
                return this.sendnotifyField;
            }
            set {
                this.sendnotifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class enableXferMasterRequestType {
        
        private string domainField;
        
        private xferSlaveType[] xferslavesField;
        
        private string[] sendnotifyField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xferslaves")]
        public xferSlaveType[] xferslaves {
            get {
                return this.xferslavesField;
            }
            set {
                this.xferslavesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sendnotify")]
        public string[] sendnotify {
            get {
                return this.sendnotifyField;
            }
            set {
                this.sendnotifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class xferSlaveType {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string startipaddressField;
        
        private string endipaddressField;
        
        private tsigKeyType tsigkeyField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string startipaddress {
            get {
                return this.startipaddressField;
            }
            set {
                this.startipaddressField = value;
            }
        }
        
        /// <remarks/>
        public string endipaddress {
            get {
                return this.endipaddressField;
            }
            set {
                this.endipaddressField = value;
            }
        }
        
        /// <remarks/>
        public tsigKeyType tsigkey {
            get {
                return this.tsigkeyField;
            }
            set {
                this.tsigkeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class tsigKeyType {
        
        private string nameField;
        
        private string algorithmField;
        
        private string keyField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string algorithm {
            get {
                return this.algorithmField;
            }
            set {
                this.algorithmField = value;
            }
        }
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class updateXferSlaveRequestType {
        
        private string domainField;
        
        private enableXferSlaveRequestType addField;
        
        private int[] deleteField;
        
        private allowNotifyIpAddressRangeType[] allownotifyField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public enableXferSlaveRequestType add {
            get {
                return this.addField;
            }
            set {
                this.addField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("delete")]
        public int[] delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("allownotify")]
        public allowNotifyIpAddressRangeType[] allownotify {
            get {
                return this.allownotifyField;
            }
            set {
                this.allownotifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class enableXferSlaveRequestType {
        
        private string domainField;
        
        private xferMasterType[] xfermastersField;
        
        private allowNotifyIpAddressRangeType[] allownotifyField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xfermasters")]
        public xferMasterType[] xfermasters {
            get {
                return this.xfermastersField;
            }
            set {
                this.xfermastersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("allownotify")]
        public allowNotifyIpAddressRangeType[] allownotify {
            get {
                return this.allownotifyField;
            }
            set {
                this.allownotifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class xferMasterType {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string ipaddressField;
        
        private tsigKeyType tsigkeyField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ipaddress {
            get {
                return this.ipaddressField;
            }
            set {
                this.ipaddressField = value;
            }
        }
        
        /// <remarks/>
        public tsigKeyType tsigkey {
            get {
                return this.tsigkeyField;
            }
            set {
                this.tsigkeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class allowNotifyIpAddressRangeType {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string startipaddressField;
        
        private string endipaddressField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string startipaddress {
            get {
                return this.startipaddressField;
            }
            set {
                this.startipaddressField = value;
            }
        }
        
        /// <remarks/>
        public string endipaddress {
            get {
                return this.endipaddressField;
            }
            set {
                this.endipaddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getXferStatusResponseType {
        
        private int masterField;
        
        private bool masterFieldSpecified;
        
        private int slaveField;
        
        private bool slaveFieldSpecified;
        
        private int lastxferstatusField;
        
        private bool lastxferstatusFieldSpecified;
        
        private string lastxfermsgField;
        
        private string lastxferdateField;
        
        private xferMasterType[] xfermastersField;
        
        private allowNotifyIpAddressRangeType[] allownotifyField;
        
        private xferSlaveType[] xferslavesField;
        
        private string[] sendnotifyField;
        
        /// <remarks/>
        public int master {
            get {
                return this.masterField;
            }
            set {
                this.masterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool masterSpecified {
            get {
                return this.masterFieldSpecified;
            }
            set {
                this.masterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int slave {
            get {
                return this.slaveField;
            }
            set {
                this.slaveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool slaveSpecified {
            get {
                return this.slaveFieldSpecified;
            }
            set {
                this.slaveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int lastxferstatus {
            get {
                return this.lastxferstatusField;
            }
            set {
                this.lastxferstatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastxferstatusSpecified {
            get {
                return this.lastxferstatusFieldSpecified;
            }
            set {
                this.lastxferstatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string lastxfermsg {
            get {
                return this.lastxfermsgField;
            }
            set {
                this.lastxfermsgField = value;
            }
        }
        
        /// <remarks/>
        public string lastxferdate {
            get {
                return this.lastxferdateField;
            }
            set {
                this.lastxferdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xfermasters")]
        public xferMasterType[] xfermasters {
            get {
                return this.xfermastersField;
            }
            set {
                this.xfermastersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("allownotify")]
        public allowNotifyIpAddressRangeType[] allownotify {
            get {
                return this.allownotifyField;
            }
            set {
                this.allownotifyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xferslaves")]
        public xferSlaveType[] xferslaves {
            get {
                return this.xferslavesField;
            }
            set {
                this.xferslavesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sendnotify")]
        public string[] sendnotify {
            get {
                return this.sendnotifyField;
            }
            set {
                this.sendnotifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class domainRecordsType {
        
        private string domainField;
        
        private rrecordType[] arecordsField;
        
        private string[] nameserversField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arecords")]
        public rrecordType[] arecords {
            get {
                return this.arecordsField;
            }
            set {
                this.arecordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameservers")]
        public string[] nameservers {
            get {
                return this.nameserversField;
            }
            set {
                this.nameserversField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class rrecordType {
        
        private string typeField;
        
        private string attributeUidField;
        
        private string nameField;
        
        private string nameUidField;
        
        private string dataField;
        
        private string dataUidField;
        
        private string serviceField;
        
        private string serviceUidField;
        
        private string protocolField;
        
        private string protocolUidField;
        
        private int portField;
        
        private bool portFieldSpecified;
        
        private string portUidField;
        
        private int weightField;
        
        private bool weightFieldSpecified;
        
        private string weightUidField;
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private string priorityUidField;
        
        private int ttlField;
        
        private bool ttlFieldSpecified;
        
        private string ttlUidField;
        
        private string statusField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string attributeUid {
            get {
                return this.attributeUidField;
            }
            set {
                this.attributeUidField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string nameUid {
            get {
                return this.nameUidField;
            }
            set {
                this.nameUidField = value;
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string dataUid {
            get {
                return this.dataUidField;
            }
            set {
                this.dataUidField = value;
            }
        }
        
        /// <remarks/>
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public string serviceUid {
            get {
                return this.serviceUidField;
            }
            set {
                this.serviceUidField = value;
            }
        }
        
        /// <remarks/>
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public string protocolUid {
            get {
                return this.protocolUidField;
            }
            set {
                this.protocolUidField = value;
            }
        }
        
        /// <remarks/>
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool portSpecified {
            get {
                return this.portFieldSpecified;
            }
            set {
                this.portFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string portUid {
            get {
                return this.portUidField;
            }
            set {
                this.portUidField = value;
            }
        }
        
        /// <remarks/>
        public int weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weightSpecified {
            get {
                return this.weightFieldSpecified;
            }
            set {
                this.weightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string weightUid {
            get {
                return this.weightUidField;
            }
            set {
                this.weightUidField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string priorityUid {
            get {
                return this.priorityUidField;
            }
            set {
                this.priorityUidField = value;
            }
        }
        
        /// <remarks/>
        public int ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ttlSpecified {
            get {
                return this.ttlFieldSpecified;
            }
            set {
                this.ttlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ttlUid {
            get {
                return this.ttlUidField;
            }
            set {
                this.ttlUidField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getPremiumStatusResponseType {
        
        private int enabledField;
        
        private string uidField;
        
        private string expiresField;
        
        /// <remarks/>
        public int enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class auditLogItemType {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string totalcountField;
        
        private string logtimeField;
        
        private string domainField;
        
        private string actionnameField;
        
        private string objecttypeField;
        
        private string objectnameField;
        
        private string parentnameField;
        
        private string remoteuseridField;
        
        private int remoteusertypeField;
        
        private bool remoteusertypeFieldSpecified;
        
        private string remoteuseripField;
        
        private string resultnameField;
        
        private string actiondataField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string totalcount {
            get {
                return this.totalcountField;
            }
            set {
                this.totalcountField = value;
            }
        }
        
        /// <remarks/>
        public string logtime {
            get {
                return this.logtimeField;
            }
            set {
                this.logtimeField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string actionname {
            get {
                return this.actionnameField;
            }
            set {
                this.actionnameField = value;
            }
        }
        
        /// <remarks/>
        public string objecttype {
            get {
                return this.objecttypeField;
            }
            set {
                this.objecttypeField = value;
            }
        }
        
        /// <remarks/>
        public string objectname {
            get {
                return this.objectnameField;
            }
            set {
                this.objectnameField = value;
            }
        }
        
        /// <remarks/>
        public string parentname {
            get {
                return this.parentnameField;
            }
            set {
                this.parentnameField = value;
            }
        }
        
        /// <remarks/>
        public string remoteuserid {
            get {
                return this.remoteuseridField;
            }
            set {
                this.remoteuseridField = value;
            }
        }
        
        /// <remarks/>
        public int remoteusertype {
            get {
                return this.remoteusertypeField;
            }
            set {
                this.remoteusertypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteusertypeSpecified {
            get {
                return this.remoteusertypeFieldSpecified;
            }
            set {
                this.remoteusertypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string remoteuserip {
            get {
                return this.remoteuseripField;
            }
            set {
                this.remoteuseripField = value;
            }
        }
        
        /// <remarks/>
        public string resultname {
            get {
                return this.resultnameField;
            }
            set {
                this.resultnameField = value;
            }
        }
        
        /// <remarks/>
        public string actiondata {
            get {
                return this.actiondataField;
            }
            set {
                this.actiondataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class auditLogType {
        
        private int pageField;
        
        private bool pageFieldSpecified;
        
        private int pagesizeField;
        
        private bool pagesizeFieldSpecified;
        
        private int totalpagesField;
        
        private bool totalpagesFieldSpecified;
        
        private auditLogItemType[] auditlogField;
        
        /// <remarks/>
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSpecified {
            get {
                return this.pageFieldSpecified;
            }
            set {
                this.pageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int pagesize {
            get {
                return this.pagesizeField;
            }
            set {
                this.pagesizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pagesizeSpecified {
            get {
                return this.pagesizeFieldSpecified;
            }
            set {
                this.pagesizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int totalpages {
            get {
                return this.totalpagesField;
            }
            set {
                this.totalpagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalpagesSpecified {
            get {
                return this.totalpagesFieldSpecified;
            }
            set {
                this.totalpagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("auditlog")]
        public auditLogItemType[] auditlog {
            get {
                return this.auditlogField;
            }
            set {
                this.auditlogField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class auditLogFilterType {
        
        private string[] domainField;
        
        private string[] statusField;
        
        private string[] objecttypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("domain")]
        public string[] domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public string[] status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("objecttype")]
        public string[] objecttype {
            get {
                return this.objecttypeField;
            }
            set {
                this.objecttypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getCustomerAuditLogRequestType {
        
        private int pagesizeField;
        
        private int pageField;
        
        private string startdateField;
        
        private string enddateField;
        
        private auditLogFilterType filterField;
        
        /// <remarks/>
        public int pagesize {
            get {
                return this.pagesizeField;
            }
            set {
                this.pagesizeField = value;
            }
        }
        
        /// <remarks/>
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public string startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public string enddate {
            get {
                return this.enddateField;
            }
            set {
                this.enddateField = value;
            }
        }
        
        /// <remarks/>
        public auditLogFilterType filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class dnssecStatusType {
        
        private int enabledField;
        
        private string emailField;
        
        private string enabledateField;
        
        private string signdateField;
        
        private int totalzonesField;
        
        private bool totalzonesFieldSpecified;
        
        private int usedzonesField;
        
        private bool usedzonesFieldSpecified;
        
        private int availablezonesField;
        
        private bool availablezonesFieldSpecified;
        
        private string[] dsrecordField;
        
        /// <remarks/>
        public int enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string enabledate {
            get {
                return this.enabledateField;
            }
            set {
                this.enabledateField = value;
            }
        }
        
        /// <remarks/>
        public string signdate {
            get {
                return this.signdateField;
            }
            set {
                this.signdateField = value;
            }
        }
        
        /// <remarks/>
        public int totalzones {
            get {
                return this.totalzonesField;
            }
            set {
                this.totalzonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalzonesSpecified {
            get {
                return this.totalzonesFieldSpecified;
            }
            set {
                this.totalzonesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int usedzones {
            get {
                return this.usedzonesField;
            }
            set {
                this.usedzonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedzonesSpecified {
            get {
                return this.usedzonesFieldSpecified;
            }
            set {
                this.usedzonesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int availablezones {
            get {
                return this.availablezonesField;
            }
            set {
                this.availablezonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool availablezonesSpecified {
            get {
                return this.availablezonesFieldSpecified;
            }
            set {
                this.availablezonesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dsrecord")]
        public string[] dsrecord {
            get {
                return this.dsrecordField;
            }
            set {
                this.dsrecordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class dnssecRequestType {
        
        private string domainField;
        
        private string emailField;
        
        private int algorithmField;
        
        private bool algorithmFieldSpecified;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int algorithm {
            get {
                return this.algorithmField;
            }
            set {
                this.algorithmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool algorithmSpecified {
            get {
                return this.algorithmFieldSpecified;
            }
            set {
                this.algorithmFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class dsSubmissionType {
        
        private string zone_uidField;
        
        private string zone_nameField;
        
        private string[] dsrecsField;
        
        /// <remarks/>
        public string zone_uid {
            get {
                return this.zone_uidField;
            }
            set {
                this.zone_uidField = value;
            }
        }
        
        /// <remarks/>
        public string zone_name {
            get {
                return this.zone_nameField;
            }
            set {
                this.zone_nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dsrecs")]
        public string[] dsrecs {
            get {
                return this.dsrecsField;
            }
            set {
                this.dsrecsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class tdnsHealthCheckDataType {
        
        private int statusField;
        
        private string actionField;
        
        private string typeField;
        
        private string nameField;
        
        private string dataField;
        
        private string infoField;
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class deleteVanityNameServersResponseType {
        
        private simpleResponseType responseField;
        
        private vanityNameServerAliasMapType[] aliasmapField;
        
        /// <remarks/>
        public simpleResponseType response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aliasmap")]
        public vanityNameServerAliasMapType[] aliasmap {
            get {
                return this.aliasmapField;
            }
            set {
                this.aliasmapField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class simpleResponseType {
        
        private int resultField;
        
        private int errorcodeField;
        
        private bool errorcodeFieldSpecified;
        
        private string errortextField;
        
        /// <remarks/>
        public int result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                this.errorcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorcodeSpecified {
            get {
                return this.errorcodeFieldSpecified;
            }
            set {
                this.errorcodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string errortext {
            get {
                return this.errortextField;
            }
            set {
                this.errortextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class vanityNameServerAliasMapType {
        
        private string vanitynameField;
        
        private string realnameField;
        
        private string realipv4Field;
        
        private string realipv6Field;
        
        /// <remarks/>
        public string vanityname {
            get {
                return this.vanitynameField;
            }
            set {
                this.vanitynameField = value;
            }
        }
        
        /// <remarks/>
        public string realname {
            get {
                return this.realnameField;
            }
            set {
                this.realnameField = value;
            }
        }
        
        /// <remarks/>
        public string realipv4 {
            get {
                return this.realipv4Field;
            }
            set {
                this.realipv4Field = value;
            }
        }
        
        /// <remarks/>
        public string realipv6 {
            get {
                return this.realipv6Field;
            }
            set {
                this.realipv6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getVanityNameServersResponseType {
        
        private simpleResponseType responseField;
        
        private int defaultField;
        
        private bool defaultFieldSpecified;
        
        private vanityNameServerAliasMapType[] aliasmapField;
        
        /// <remarks/>
        public simpleResponseType response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        public int @default {
            get {
                return this.defaultField;
            }
            set {
                this.defaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultSpecified {
            get {
                return this.defaultFieldSpecified;
            }
            set {
                this.defaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aliasmap")]
        public vanityNameServerAliasMapType[] aliasmap {
            get {
                return this.aliasmapField;
            }
            set {
                this.aliasmapField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class createVanityNameServersResponseType {
        
        private simpleResponseType responseField;
        
        private vanityNameServerAliasMapType[] aliasmapField;
        
        /// <remarks/>
        public simpleResponseType response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aliasmap")]
        public vanityNameServerAliasMapType[] aliasmap {
            get {
                return this.aliasmapField;
            }
            set {
                this.aliasmapField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class createVanityNameServersRequestType {
        
        private string domainField;
        
        private int defaultField;
        
        private string vanity1Field;
        
        private string vanity2Field;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public int @default {
            get {
                return this.defaultField;
            }
            set {
                this.defaultField = value;
            }
        }
        
        /// <remarks/>
        public string vanity1 {
            get {
                return this.vanity1Field;
            }
            set {
                this.vanity1Field = value;
            }
        }
        
        /// <remarks/>
        public string vanity2 {
            get {
                return this.vanity2Field;
            }
            set {
                this.vanity2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class applyCustomTemplateQueueElementType {
        
        private string domainField;
        
        private int templateidField;
        
        private string templatenameField;
        
        private int statuscodeField;
        
        private string statustextField;
        
        private string requestedField;
        
        private string completedField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public int templateid {
            get {
                return this.templateidField;
            }
            set {
                this.templateidField = value;
            }
        }
        
        /// <remarks/>
        public string templatename {
            get {
                return this.templatenameField;
            }
            set {
                this.templatenameField = value;
            }
        }
        
        /// <remarks/>
        public int statuscode {
            get {
                return this.statuscodeField;
            }
            set {
                this.statuscodeField = value;
            }
        }
        
        /// <remarks/>
        public string statustext {
            get {
                return this.statustextField;
            }
            set {
                this.statustextField = value;
            }
        }
        
        /// <remarks/>
        public string requested {
            get {
                return this.requestedField;
            }
            set {
                this.requestedField = value;
            }
        }
        
        /// <remarks/>
        public string completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class applyCustomTemplateQueueType {
        
        private int pageField;
        
        private bool pageFieldSpecified;
        
        private int pagesizeField;
        
        private bool pagesizeFieldSpecified;
        
        private int totalpagesField;
        
        private bool totalpagesFieldSpecified;
        
        private applyCustomTemplateQueueElementType[] queueField;
        
        /// <remarks/>
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSpecified {
            get {
                return this.pageFieldSpecified;
            }
            set {
                this.pageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int pagesize {
            get {
                return this.pagesizeField;
            }
            set {
                this.pagesizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pagesizeSpecified {
            get {
                return this.pagesizeFieldSpecified;
            }
            set {
                this.pagesizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int totalpages {
            get {
                return this.totalpagesField;
            }
            set {
                this.totalpagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalpagesSpecified {
            get {
                return this.totalpagesFieldSpecified;
            }
            set {
                this.totalpagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("queue")]
        public applyCustomTemplateQueueElementType[] queue {
            get {
                return this.queueField;
            }
            set {
                this.queueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getApplyTemplateQueueStatusRequestType {
        
        private int pagesizeField;
        
        private int pageField;
        
        /// <remarks/>
        public int pagesize {
            get {
                return this.pagesizeField;
            }
            set {
                this.pagesizeField = value;
            }
        }
        
        /// <remarks/>
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class applyCustomTemplateType {
        
        private string domainField;
        
        private int templateidField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public int templateid {
            get {
                return this.templateidField;
            }
            set {
                this.templateidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class modifyCustomTemplateSoaRequestType {
        
        private int templateidField;
        
        private soaType soaField;
        
        /// <remarks/>
        public int templateid {
            get {
                return this.templateidField;
            }
            set {
                this.templateidField = value;
            }
        }
        
        /// <remarks/>
        public soaType soa {
            get {
                return this.soaField;
            }
            set {
                this.soaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class soaType {
        
        private string originField;
        
        private int ttlField;
        
        private string nsField;
        
        private string mboxField;
        
        private int serialField;
        
        private bool serialFieldSpecified;
        
        private int refreshField;
        
        private int retryField;
        
        private int expireField;
        
        private int minimumField;
        
        private bool minimumFieldSpecified;
        
        /// <remarks/>
        public string origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public int ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <remarks/>
        public string ns {
            get {
                return this.nsField;
            }
            set {
                this.nsField = value;
            }
        }
        
        /// <remarks/>
        public string mbox {
            get {
                return this.mboxField;
            }
            set {
                this.mboxField = value;
            }
        }
        
        /// <remarks/>
        public int serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serialSpecified {
            get {
                return this.serialFieldSpecified;
            }
            set {
                this.serialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int refresh {
            get {
                return this.refreshField;
            }
            set {
                this.refreshField = value;
            }
        }
        
        /// <remarks/>
        public int retry {
            get {
                return this.retryField;
            }
            set {
                this.retryField = value;
            }
        }
        
        /// <remarks/>
        public int expire {
            get {
                return this.expireField;
            }
            set {
                this.expireField = value;
            }
        }
        
        /// <remarks/>
        public int minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minimumSpecified {
            get {
                return this.minimumFieldSpecified;
            }
            set {
                this.minimumFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class customTemplateType {
        
        private int idField;
        
        private string nameField;
        
        private int newzonedefaultField;
        
        private bool newzonedefaultFieldSpecified;
        
        private string lastmodifiedField;
        
        private soaType soaField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int newzonedefault {
            get {
                return this.newzonedefaultField;
            }
            set {
                this.newzonedefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newzonedefaultSpecified {
            get {
                return this.newzonedefaultFieldSpecified;
            }
            set {
                this.newzonedefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string lastmodified {
            get {
                return this.lastmodifiedField;
            }
            set {
                this.lastmodifiedField = value;
            }
        }
        
        /// <remarks/>
        public soaType soa {
            get {
                return this.soaField;
            }
            set {
                this.soaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getZonesInFolderRequestType {
        
        private int folderidField;
        
        private getDNSAccountListRequestType listparamsField;
        
        /// <remarks/>
        public int folderid {
            get {
                return this.folderidField;
            }
            set {
                this.folderidField = value;
            }
        }
        
        /// <remarks/>
        public getDNSAccountListRequestType listparams {
            get {
                return this.listparamsField;
            }
            set {
                this.listparamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getDNSAccountListRequestType {
        
        private string[] domainsField;
        
        private string searchdomainField;
        
        private int lengthField;
        
        private bool lengthFieldSpecified;
        
        private int includedomainField;
        
        private bool includedomainFieldSpecified;
        
        private int pageField;
        
        private bool pageFieldSpecified;
        
        private int typeField;
        
        private bool typeFieldSpecified;
        
        private string sortField;
        
        private string[] filterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("domains")]
        public string[] domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
        
        /// <remarks/>
        public string searchdomain {
            get {
                return this.searchdomainField;
            }
            set {
                this.searchdomainField = value;
            }
        }
        
        /// <remarks/>
        public int length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lengthSpecified {
            get {
                return this.lengthFieldSpecified;
            }
            set {
                this.lengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int includedomain {
            get {
                return this.includedomainField;
            }
            set {
                this.includedomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includedomainSpecified {
            get {
                return this.includedomainFieldSpecified;
            }
            set {
                this.includedomainFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSpecified {
            get {
                return this.pageFieldSpecified;
            }
            set {
                this.pageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("filter")]
        public string[] filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class addZoneToFolderType {
        
        private int folderidField;
        
        private string domainField;
        
        private int systemidField;
        
        /// <remarks/>
        public int folderid {
            get {
                return this.folderidField;
            }
            set {
                this.folderidField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public int systemid {
            get {
                return this.systemidField;
            }
            set {
                this.systemidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneFolderType {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private string descriptionField;
        
        private int zonesField;
        
        private bool zonesFieldSpecified;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int zones {
            get {
                return this.zonesField;
            }
            set {
                this.zonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zonesSpecified {
            get {
                return this.zonesFieldSpecified;
            }
            set {
                this.zonesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class orionEventType {
        
        private int idField;
        
        private string uidField;
        
        private string eventTypeField;
        
        private string requestorField;
        
        private orionEventItemsType[] eventItemsField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string eventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string requestor {
            get {
                return this.requestorField;
            }
            set {
                this.requestorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("eventItems")]
        public orionEventItemsType[] eventItems {
            get {
                return this.eventItemsField;
            }
            set {
                this.eventItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class orionEventItemsType {
        
        private string itemTypeField;
        
        private string valueField;
        
        private string targetUIDField;
        
        private string priorValueField;
        
        /// <remarks/>
        public string ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string TargetUID {
            get {
                return this.targetUIDField;
            }
            set {
                this.targetUIDField = value;
            }
        }
        
        /// <remarks/>
        public string PriorValue {
            get {
                return this.priorValueField;
            }
            set {
                this.priorValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class insertOrionEventResponseType {
        
        private int eventIdField;
        
        private string errorField;
        
        /// <remarks/>
        public int eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class insertOrionEventRequestType {
        
        private string eventTypeField;
        
        private string requestorField;
        
        private string auditMessageField;
        
        private orionEventItemsType[] eventItemsField;
        
        /// <remarks/>
        public string eventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string requestor {
            get {
                return this.requestorField;
            }
            set {
                this.requestorField = value;
            }
        }
        
        /// <remarks/>
        public string auditMessage {
            get {
                return this.auditMessageField;
            }
            set {
                this.auditMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("eventItems")]
        public orionEventItemsType[] eventItems {
            get {
                return this.eventItemsField;
            }
            set {
                this.eventItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getAccountByUidRequestType {
        
        private string uidField;
        
        private string[] attributesField;
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes")]
        public string[] attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getHCCZoneInfoResponseType {
        
        private int zoneexistsField;
        
        private int parkedField;
        
        private bool parkedFieldSpecified;
        
        private string zonetypeField;
        
        private rrecordType[] arecordsField;
        
        private rrecordType[] subdomainsField;
        
        /// <remarks/>
        public int zoneexists {
            get {
                return this.zoneexistsField;
            }
            set {
                this.zoneexistsField = value;
            }
        }
        
        /// <remarks/>
        public int parked {
            get {
                return this.parkedField;
            }
            set {
                this.parkedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parkedSpecified {
            get {
                return this.parkedFieldSpecified;
            }
            set {
                this.parkedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string zonetype {
            get {
                return this.zonetypeField;
            }
            set {
                this.zonetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arecords")]
        public rrecordType[] arecords {
            get {
                return this.arecordsField;
            }
            set {
                this.arecordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subdomains")]
        public rrecordType[] subdomains {
            get {
                return this.subdomainsField;
            }
            set {
                this.subdomainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class getDomainZoneParkedInfoResponseType {
        
        private int zoneexistsField;
        
        private int parkedField;
        
        private bool parkedFieldSpecified;
        
        /// <remarks/>
        public int zoneexists {
            get {
                return this.zoneexistsField;
            }
            set {
                this.zoneexistsField = value;
            }
        }
        
        /// <remarks/>
        public int parked {
            get {
                return this.parkedField;
            }
            set {
                this.parkedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parkedSpecified {
            get {
                return this.parkedFieldSpecified;
            }
            set {
                this.parkedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class smartDomainRecordChangeType {
        
        private string oldrecordField;
        
        private string newrecordField;
        
        /// <remarks/>
        public string oldrecord {
            get {
                return this.oldrecordField;
            }
            set {
                this.oldrecordField = value;
            }
        }
        
        /// <remarks/>
        public string newrecord {
            get {
                return this.newrecordField;
            }
            set {
                this.newrecordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class accountListElementType {
        
        private string domainField;
        
        private string uidField;
        
        private string statusField;
        
        private int applytemplatestatusField;
        
        private bool applytemplatestatusFieldSpecified;
        
        private int migrationstatusField;
        
        private bool migrationstatusFieldSpecified;
        
        private int recordcountField;
        
        private int queryusageField;
        
        private string lastmodifiedField;
        
        private string productnameField;
        
        private int typeField;
        
        private bool typeFieldSpecified;
        
        private int systemidField;
        
        private bool systemidFieldSpecified;
        
        private int masterField;
        
        private bool masterFieldSpecified;
        
        private int slaveField;
        
        private bool slaveFieldSpecified;
        
        private int dnssecField;
        
        private bool dnssecFieldSpecified;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int applytemplatestatus {
            get {
                return this.applytemplatestatusField;
            }
            set {
                this.applytemplatestatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applytemplatestatusSpecified {
            get {
                return this.applytemplatestatusFieldSpecified;
            }
            set {
                this.applytemplatestatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int migrationstatus {
            get {
                return this.migrationstatusField;
            }
            set {
                this.migrationstatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool migrationstatusSpecified {
            get {
                return this.migrationstatusFieldSpecified;
            }
            set {
                this.migrationstatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int recordcount {
            get {
                return this.recordcountField;
            }
            set {
                this.recordcountField = value;
            }
        }
        
        /// <remarks/>
        public int queryusage {
            get {
                return this.queryusageField;
            }
            set {
                this.queryusageField = value;
            }
        }
        
        /// <remarks/>
        public string lastmodified {
            get {
                return this.lastmodifiedField;
            }
            set {
                this.lastmodifiedField = value;
            }
        }
        
        /// <remarks/>
        public string productname {
            get {
                return this.productnameField;
            }
            set {
                this.productnameField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int systemid {
            get {
                return this.systemidField;
            }
            set {
                this.systemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool systemidSpecified {
            get {
                return this.systemidFieldSpecified;
            }
            set {
                this.systemidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int master {
            get {
                return this.masterField;
            }
            set {
                this.masterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool masterSpecified {
            get {
                return this.masterFieldSpecified;
            }
            set {
                this.masterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int slave {
            get {
                return this.slaveField;
            }
            set {
                this.slaveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool slaveSpecified {
            get {
                return this.slaveFieldSpecified;
            }
            set {
                this.slaveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int dnssec {
            get {
                return this.dnssecField;
            }
            set {
                this.dnssecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dnssecSpecified {
            get {
                return this.dnssecFieldSpecified;
            }
            set {
                this.dnssecFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class accountListType {
        
        private int fromcacheField;
        
        private bool fromcacheFieldSpecified;
        
        private string cachedateField;
        
        private int totalcountField;
        
        private int countField;
        
        private int pageField;
        
        private bool pageFieldSpecified;
        
        private string debug_exectimeField;
        
        private accountListElementType[] accountsField;
        
        /// <remarks/>
        public int fromcache {
            get {
                return this.fromcacheField;
            }
            set {
                this.fromcacheField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fromcacheSpecified {
            get {
                return this.fromcacheFieldSpecified;
            }
            set {
                this.fromcacheFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string cachedate {
            get {
                return this.cachedateField;
            }
            set {
                this.cachedateField = value;
            }
        }
        
        /// <remarks/>
        public int totalcount {
            get {
                return this.totalcountField;
            }
            set {
                this.totalcountField = value;
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSpecified {
            get {
                return this.pageFieldSpecified;
            }
            set {
                this.pageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string debug_exectime {
            get {
                return this.debug_exectimeField;
            }
            set {
                this.debug_exectimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accounts")]
        public accountListElementType[] accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class bulkEditDomainType {
        
        private int idField;
        
        private int job_idField;
        
        private string domainField;
        
        private string statusField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int job_id {
            get {
                return this.job_idField;
            }
            set {
                this.job_idField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class bulkEditJobDetailsReturnType {
        
        private bulkEditJobType jobField;
        
        private bulkEditDomainType[] domainsField;
        
        /// <remarks/>
        public bulkEditJobType job {
            get {
                return this.jobField;
            }
            set {
                this.jobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("domains")]
        public bulkEditDomainType[] domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class bulkEditJobType {
        
        private int idField;
        
        private string parent_shopper_idField;
        
        private string shopper_idField;
        
        private string reseller_idField;
        
        private string typeField;
        
        private int destructiveField;
        
        private string base_domainField;
        
        private string base_accountuidField;
        
        private string base_recordField;
        
        private string dateField;
        
        private string statusField;
        
        private int sizeField;
        
        private int completedField;
        
        private int blob_idField;
        
        private string base_record_infoField;
        
        private int errorsField;
        
        private bool errorsFieldSpecified;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string parent_shopper_id {
            get {
                return this.parent_shopper_idField;
            }
            set {
                this.parent_shopper_idField = value;
            }
        }
        
        /// <remarks/>
        public string shopper_id {
            get {
                return this.shopper_idField;
            }
            set {
                this.shopper_idField = value;
            }
        }
        
        /// <remarks/>
        public string reseller_id {
            get {
                return this.reseller_idField;
            }
            set {
                this.reseller_idField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int destructive {
            get {
                return this.destructiveField;
            }
            set {
                this.destructiveField = value;
            }
        }
        
        /// <remarks/>
        public string base_domain {
            get {
                return this.base_domainField;
            }
            set {
                this.base_domainField = value;
            }
        }
        
        /// <remarks/>
        public string base_accountuid {
            get {
                return this.base_accountuidField;
            }
            set {
                this.base_accountuidField = value;
            }
        }
        
        /// <remarks/>
        public string base_record {
            get {
                return this.base_recordField;
            }
            set {
                this.base_recordField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public int completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
        
        /// <remarks/>
        public int blob_id {
            get {
                return this.blob_idField;
            }
            set {
                this.blob_idField = value;
            }
        }
        
        /// <remarks/>
        public string base_record_info {
            get {
                return this.base_record_infoField;
            }
            set {
                this.base_record_infoField = value;
            }
        }
        
        /// <remarks/>
        public int errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorsSpecified {
            get {
                return this.errorsFieldSpecified;
            }
            set {
                this.errorsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class bulkEditJobBlobType {
        
        private string parent_shopper_idField;
        
        private string shopper_idField;
        
        private string edittypeField;
        
        private int destructiveField;
        
        private string basedomainField;
        
        private string baseaccountuidField;
        
        private string baserecordField;
        
        private string domainsField;
        
        /// <remarks/>
        public string parent_shopper_id {
            get {
                return this.parent_shopper_idField;
            }
            set {
                this.parent_shopper_idField = value;
            }
        }
        
        /// <remarks/>
        public string shopper_id {
            get {
                return this.shopper_idField;
            }
            set {
                this.shopper_idField = value;
            }
        }
        
        /// <remarks/>
        public string edittype {
            get {
                return this.edittypeField;
            }
            set {
                this.edittypeField = value;
            }
        }
        
        /// <remarks/>
        public int destructive {
            get {
                return this.destructiveField;
            }
            set {
                this.destructiveField = value;
            }
        }
        
        /// <remarks/>
        public string basedomain {
            get {
                return this.basedomainField;
            }
            set {
                this.basedomainField = value;
            }
        }
        
        /// <remarks/>
        public string baseaccountuid {
            get {
                return this.baseaccountuidField;
            }
            set {
                this.baseaccountuidField = value;
            }
        }
        
        /// <remarks/>
        public string baserecord {
            get {
                return this.baserecordField;
            }
            set {
                this.baserecordField = value;
            }
        }
        
        /// <remarks/>
        public string domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneRepairQueueRecordType {
        
        private int idField;
        
        private string domainField;
        
        private string accountuidField;
        
        private string shopperidField;
        
        private string reselleridField;
        
        private int problemtypeField;
        
        private string nameField;
        
        private string dateField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string accountuid {
            get {
                return this.accountuidField;
            }
            set {
                this.accountuidField = value;
            }
        }
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public string resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        public int problemtype {
            get {
                return this.problemtypeField;
            }
            set {
                this.problemtypeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneRepairQueueReadResultType {
        
        private int recordcountField;
        
        private zoneRepairQueueRecordType[] recordsField;
        
        /// <remarks/>
        public int recordcount {
            get {
                return this.recordcountField;
            }
            set {
                this.recordcountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("records")]
        public zoneRepairQueueRecordType[] records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class importZoneFileType {
        
        private string domainField;
        
        private string zoneFileField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string zoneFile {
            get {
                return this.zoneFileField;
            }
            set {
                this.zoneFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class purgeGapiOrphansResponseInfoType {
        
        private int removedField;
        
        private int purgedField;
        
        private int failedField;
        
        private string[] failedRecordsField;
        
        /// <remarks/>
        public int removed {
            get {
                return this.removedField;
            }
            set {
                this.removedField = value;
            }
        }
        
        /// <remarks/>
        public int purged {
            get {
                return this.purgedField;
            }
            set {
                this.purgedField = value;
            }
        }
        
        /// <remarks/>
        public int failed {
            get {
                return this.failedField;
            }
            set {
                this.failedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("failedRecords")]
        public string[] failedRecords {
            get {
                return this.failedRecordsField;
            }
            set {
                this.failedRecordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class protectedDomainResponseType {
        
        private string protectedField;
        
        private string nameServersTypeField;
        
        private string nameServersField;
        
        private string zoneFileField;
        
        private string contactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string @protected {
            get {
                return this.protectedField;
            }
            set {
                this.protectedField = value;
            }
        }
        
        /// <remarks/>
        public string nameServersType {
            get {
                return this.nameServersTypeField;
            }
            set {
                this.nameServersTypeField = value;
            }
        }
        
        /// <remarks/>
        public string nameServers {
            get {
                return this.nameServersField;
            }
            set {
                this.nameServersField = value;
            }
        }
        
        /// <remarks/>
        public string zoneFile {
            get {
                return this.zoneFileField;
            }
            set {
                this.zoneFileField = value;
            }
        }
        
        /// <remarks/>
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxyFilterParameterArrayType {
        
        private string filterField;
        
        private string[] parametersField;
        
        /// <remarks/>
        public string filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameters")]
        public string[] parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxyFilterDataType {
        
        private int idField;
        
        private string filterField;
        
        private int siteField;
        
        private string anycastField;
        
        private string instanceField;
        
        private string zoneField;
        
        private string parameterField;
        
        private string pvalueField;
        
        private int activeField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public int site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string anycast {
            get {
                return this.anycastField;
            }
            set {
                this.anycastField = value;
            }
        }
        
        /// <remarks/>
        public string instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
            }
        }
        
        /// <remarks/>
        public string zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        public string parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public string pvalue {
            get {
                return this.pvalueField;
            }
            set {
                this.pvalueField = value;
            }
        }
        
        /// <remarks/>
        public int active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxyFilterDataResponseArrayType {
        
        private proxyFilterDataType[] proxyfiltersField;
        
        private string[] anycastlistField;
        
        private proxyFilterParameterArrayType[] parameterlistField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("proxyfilters")]
        public proxyFilterDataType[] proxyfilters {
            get {
                return this.proxyfiltersField;
            }
            set {
                this.proxyfiltersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anycastlist")]
        public string[] anycastlist {
            get {
                return this.anycastlistField;
            }
            set {
                this.anycastlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameterlist")]
        public proxyFilterParameterArrayType[] parameterlist {
            get {
                return this.parameterlistField;
            }
            set {
                this.parameterlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxySiteArrayType {
        
        private int siteField;
        
        private string[] serversField;
        
        /// <remarks/>
        public int site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("servers")]
        public string[] servers {
            get {
                return this.serversField;
            }
            set {
                this.serversField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class configDataType {
        
        private int idField;
        
        private string applicationField;
        
        private int siteField;
        
        private string anycastField;
        
        private string instanceField;
        
        private string classField;
        
        private string parameterField;
        
        private string pvalueField;
        
        private int activeField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public int site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string anycast {
            get {
                return this.anycastField;
            }
            set {
                this.anycastField = value;
            }
        }
        
        /// <remarks/>
        public string instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public string parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public string pvalue {
            get {
                return this.pvalueField;
            }
            set {
                this.pvalueField = value;
            }
        }
        
        /// <remarks/>
        public int active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class configDataResponseArrayType {
        
        private configDataType[] proxyconfigField;
        
        private string[] anycastlistField;
        
        private string[] parameterlistField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("proxyconfig")]
        public configDataType[] proxyconfig {
            get {
                return this.proxyconfigField;
            }
            set {
                this.proxyconfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anycastlist")]
        public string[] anycastlist {
            get {
                return this.anycastlistField;
            }
            set {
                this.anycastlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameterlist")]
        public string[] parameterlist {
            get {
                return this.parameterlistField;
            }
            set {
                this.parameterlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneHealthCheckResponseType {
        
        private string domainField;
        
        private string accountUidField;
        
        private string[] nameServersField;
        
        private string problemDetectedField;
        
        private string recommendedFixField;
        
        private string fixPerformedField;
        
        private int flagsField;
        
        private string[] errorsField;
        
        private string[] debugField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string accountUid {
            get {
                return this.accountUidField;
            }
            set {
                this.accountUidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameServers")]
        public string[] nameServers {
            get {
                return this.nameServersField;
            }
            set {
                this.nameServersField = value;
            }
        }
        
        /// <remarks/>
        public string problemDetected {
            get {
                return this.problemDetectedField;
            }
            set {
                this.problemDetectedField = value;
            }
        }
        
        /// <remarks/>
        public string recommendedFix {
            get {
                return this.recommendedFixField;
            }
            set {
                this.recommendedFixField = value;
            }
        }
        
        /// <remarks/>
        public string fixPerformed {
            get {
                return this.fixPerformedField;
            }
            set {
                this.fixPerformedField = value;
            }
        }
        
        /// <remarks/>
        public int flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errors")]
        public string[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("debug")]
        public string[] debug {
            get {
                return this.debugField;
            }
            set {
                this.debugField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class createDefaultZoneResponseType {
        
        private int resultField;
        
        private int errorcodeField;
        
        private bool errorcodeFieldSpecified;
        
        private string errortextField;
        
        private string uidField;
        
        private string shopperidField;
        
        private string reselleridField;
        
        private string typeField;
        
        private string[] nameserversField;
        
        /// <remarks/>
        public int result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                this.errorcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorcodeSpecified {
            get {
                return this.errorcodeFieldSpecified;
            }
            set {
                this.errorcodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string errortext {
            get {
                return this.errortextField;
            }
            set {
                this.errortextField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public string resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameservers")]
        public string[] nameservers {
            get {
                return this.nameserversField;
            }
            set {
                this.nameserversField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class createDefaultZoneRequestType {
        
        private string domainField;
        
        private string[] nameserversField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameservers")]
        public string[] nameservers {
            get {
                return this.nameserversField;
            }
            set {
                this.nameserversField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class transferKeyType {
        
        private string attributeUidField;
        
        private string keyvalueField;
        
        /// <remarks/>
        public string attributeUid {
            get {
                return this.attributeUidField;
            }
            set {
                this.attributeUidField = value;
            }
        }
        
        /// <remarks/>
        public string keyvalue {
            get {
                return this.keyvalueField;
            }
            set {
                this.keyvalueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneType {
        
        private string domainField;
        
        private string shopperidField;
        
        private string reselleridField;
        
        private string accountuidField;
        
        private int systemidField;
        
        private bool systemidFieldSpecified;
        
        private int applytemplatestatusField;
        
        private bool applytemplatestatusFieldSpecified;
        
        private int migrationstatusField;
        
        private bool migrationstatusFieldSpecified;
        
        private string lastmodifiedField;
        
        private string sourcetypeField;
        
        private transferKeyType[] transferkeysField;
        
        private string statusField;
        
        private soaType soaField;
        
        private rrecordType[] rrecordsField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public string resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        public string accountuid {
            get {
                return this.accountuidField;
            }
            set {
                this.accountuidField = value;
            }
        }
        
        /// <remarks/>
        public int systemid {
            get {
                return this.systemidField;
            }
            set {
                this.systemidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool systemidSpecified {
            get {
                return this.systemidFieldSpecified;
            }
            set {
                this.systemidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int applytemplatestatus {
            get {
                return this.applytemplatestatusField;
            }
            set {
                this.applytemplatestatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applytemplatestatusSpecified {
            get {
                return this.applytemplatestatusFieldSpecified;
            }
            set {
                this.applytemplatestatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int migrationstatus {
            get {
                return this.migrationstatusField;
            }
            set {
                this.migrationstatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool migrationstatusSpecified {
            get {
                return this.migrationstatusFieldSpecified;
            }
            set {
                this.migrationstatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string lastmodified {
            get {
                return this.lastmodifiedField;
            }
            set {
                this.lastmodifiedField = value;
            }
        }
        
        /// <remarks/>
        public string sourcetype {
            get {
                return this.sourcetypeField;
            }
            set {
                this.sourcetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transferkeys")]
        public transferKeyType[] transferkeys {
            get {
                return this.transferkeysField;
            }
            set {
                this.transferkeysField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public soaType soa {
            get {
                return this.soaField;
            }
            set {
                this.soaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", IsNullable=false)]
        public rrecordType[] rrecords {
            get {
                return this.rrecordsField;
            }
            set {
                this.rrecordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class responseinfoType {
        
        private int infocodeField;
        
        private bool infocodeFieldSpecified;
        
        private string affectedtypeField;
        
        private string affectednameField;
        
        private string[] infoField;
        
        /// <remarks/>
        public int infocode {
            get {
                return this.infocodeField;
            }
            set {
                this.infocodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool infocodeSpecified {
            get {
                return this.infocodeFieldSpecified;
            }
            set {
                this.infocodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string affectedtype {
            get {
                return this.affectedtypeField;
            }
            set {
                this.affectedtypeField = value;
            }
        }
        
        /// <remarks/>
        public string affectedname {
            get {
                return this.affectednameField;
            }
            set {
                this.affectednameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("info")]
        public string[] info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class booleanResponseType {
        
        private bool resultField;
        
        private int errorcodeField;
        
        private bool errorcodeFieldSpecified;
        
        private string errortextField;
        
        private responseinfoType[] responseinfoField;
        
        private string[] affecteduidsField;
        
        /// <remarks/>
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                this.errorcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorcodeSpecified {
            get {
                return this.errorcodeFieldSpecified;
            }
            set {
                this.errorcodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string errortext {
            get {
                return this.errortextField;
            }
            set {
                this.errortextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("responseinfo")]
        public responseinfoType[] responseinfo {
            get {
                return this.responseinfoField;
            }
            set {
                this.responseinfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("affecteduids")]
        public string[] affecteduids {
            get {
                return this.affecteduidsField;
            }
            set {
                this.affecteduidsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class domainIPAddressType {
        
        private string domainField;
        
        private string shopperidField;
        
        private string reselleridField;
        
        private string[] ipaddressField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public string resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ipaddress")]
        public string[] ipaddress {
            get {
                return this.ipaddressField;
            }
            set {
                this.ipaddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    [System.Xml.Serialization.XmlRootAttribute("custInfo", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
    public partial class custDataType : System.Web.Services.Protocols.SoapHeader {
        
        private string shopperidField;
        
        private int reselleridField;
        
        private string execshopperidField;
        
        private int execreselleridField;
        
        private bool execreselleridFieldSpecified;
        
        private string originField;
        
        private string enduseripField;
        
        private int offsiteField;
        
        private bool offsiteFieldSpecified;
        
        private int[] systemidField;
        
        private string manageruseridField;
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public int resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        public string execshopperid {
            get {
                return this.execshopperidField;
            }
            set {
                this.execshopperidField = value;
            }
        }
        
        /// <remarks/>
        public int execresellerid {
            get {
                return this.execreselleridField;
            }
            set {
                this.execreselleridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool execreselleridSpecified {
            get {
                return this.execreselleridFieldSpecified;
            }
            set {
                this.execreselleridFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public string enduserip {
            get {
                return this.enduseripField;
            }
            set {
                this.enduseripField = value;
            }
        }
        
        /// <remarks/>
        public int offsite {
            get {
                return this.offsiteField;
            }
            set {
                this.offsiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsiteSpecified {
            get {
                return this.offsiteFieldSpecified;
            }
            set {
                this.offsiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("systemid")]
        public int[] systemid {
            get {
                return this.systemidField;
            }
            set {
                this.systemidField = value;
            }
        }
        
        /// <remarks/>
        public string manageruserid {
            get {
                return this.manageruseridField;
            }
            set {
                this.manageruseridField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void returnTimeCompletedEventHandler(object sender, returnTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void echoAuthCompletedEventHandler(object sender, echoAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class echoAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal echoAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public authDataType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authDataType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void echoCustCompletedEventHandler(object sender, echoCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class echoCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal echoCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public custDataType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((custDataType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMainARecordsCompletedEventHandler(object sender, getMainARecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainARecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainARecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMainARecordsForDomainsCompletedEventHandler(object sender, getMainARecordsForDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainARecordsForDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainARecordsForDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public domainIPAddressType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((domainIPAddressType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMXRecordsCompletedEventHandler(object sender, getMXRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMXRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMXRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNSRecordsCompletedEventHandler(object sender, getNSRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNSRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNSRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSRVRecordsCompletedEventHandler(object sender, getSRVRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRVRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRVRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRRecordsCompletedEventHandler(object sender, getRRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setMXRecordsCompletedEventHandler(object sender, setMXRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMXRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMXRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createRecordsCompletedEventHandler(object sender, createRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyRecordsCompletedEventHandler(object sender, modifyRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifySOARecordCompletedEventHandler(object sender, modifySOARecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySOARecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySOARecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteRecordsCompletedEventHandler(object sender, deleteRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSOACompletedEventHandler(object sender, getSOACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSOACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSOACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public soaType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((soaType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNameServersCompletedEventHandler(object sender, getNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDefaultNameServersCompletedEventHandler(object sender, getDefaultNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllNameServersCompletedEventHandler(object sender, getAllNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBindFileCompletedEventHandler(object sender, getBindFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBindFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBindFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getZoneCompletedEventHandler(object sender, getZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void fixZoneOwnershipCompletedEventHandler(object sender, fixZoneOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fixZoneOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fixZoneOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createDefaultZoneCompletedEventHandler(object sender, createDefaultZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDefaultZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDefaultZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createDefaultZoneResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createDefaultZoneResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void zoneHealthCheckCompletedEventHandler(object sender, zoneHealthCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zoneHealthCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zoneHealthCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneHealthCheckResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneHealthCheckResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void refreshZoneCompletedEventHandler(object sender, refreshZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refreshZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refreshZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getForwardingDataCompletedEventHandler(object sender, getForwardingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForwardingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForwardingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProxyConfigCompletedEventHandler(object sender, getProxyConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public configDataResponseArrayType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((configDataResponseArrayType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProxyInstancesCompletedEventHandler(object sender, getProxyInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public proxySiteArrayType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((proxySiteArrayType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveNewProxyConfigRecordCompletedEventHandler(object sender, saveNewProxyConfigRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveNewProxyConfigRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveNewProxyConfigRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeProxyConfigRecordCompletedEventHandler(object sender, removeProxyConfigRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeProxyConfigRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeProxyConfigRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyProxyConfigRecordCompletedEventHandler(object sender, modifyProxyConfigRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyProxyConfigRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyProxyConfigRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProxyFiltersCompletedEventHandler(object sender, getProxyFiltersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public proxyFilterDataResponseArrayType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((proxyFilterDataResponseArrayType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveNewProxyFilterRecordCompletedEventHandler(object sender, saveNewProxyFilterRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveNewProxyFilterRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveNewProxyFilterRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeProxyFilterRecordCompletedEventHandler(object sender, removeProxyFilterRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeProxyFilterRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeProxyFilterRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyProxyFilterRecordCompletedEventHandler(object sender, modifyProxyFilterRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyProxyFilterRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyProxyFilterRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProtectedDomainInfoCompletedEventHandler(object sender, getProtectedDomainInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProtectedDomainInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProtectedDomainInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public protectedDomainResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((protectedDomainResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addProtectedDomainCompletedEventHandler(object sender, addProtectedDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProtectedDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProtectedDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteRecordGapiCompletedEventHandler(object sender, deleteRecordGapiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRecordGapiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRecordGapiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createRecordGapiCompletedEventHandler(object sender, createRecordGapiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRecordGapiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRecordGapiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void purgeGapiOrphansCompletedEventHandler(object sender, purgeGapiOrphansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class purgeGapiOrphansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal purgeGapiOrphansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public purgeGapiOrphansResponseInfoType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((purgeGapiOrphansResponseInfoType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void importZoneFileCompletedEventHandler(object sender, importZoneFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importZoneFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importZoneFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRepairQueueRecordsCompletedEventHandler(object sender, getRepairQueueRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepairQueueRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepairQueueRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneRepairQueueReadResultType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneRepairQueueReadResultType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeRepairQueueRecordsCompletedEventHandler(object sender, removeRepairQueueRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeRepairQueueRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeRepairQueueRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addBulkEditJobBlobCompletedEventHandler(object sender, addBulkEditJobBlobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBulkEditJobBlobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBulkEditJobBlobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBulkEditJobStatusCompletedEventHandler(object sender, getBulkEditJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBulkEditJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBulkEditJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bulkEditJobType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bulkEditJobType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBulkEditJobDetailsCompletedEventHandler(object sender, getBulkEditJobDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBulkEditJobDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBulkEditJobDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bulkEditJobDetailsReturnType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bulkEditJobDetailsReturnType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOffsiteAccountListCompletedEventHandler(object sender, getOffsiteAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOffsiteAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOffsiteAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountListType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountListType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDNSAccountListCompletedEventHandler(object sender, getDNSAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDNSAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDNSAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountListType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountListType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getHostingAccountListCompletedEventHandler(object sender, getHostingAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHostingAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHostingAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountListType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountListType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void restoreDefaultRecordsCompletedEventHandler(object sender, restoreDefaultRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class restoreDefaultRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal restoreDefaultRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDefaultRecordsCompletedEventHandler(object sender, getDefaultRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOffsiteTransferKeyCompletedEventHandler(object sender, createOffsiteTransferKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createOffsiteTransferKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createOffsiteTransferKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public transferKeyType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transferKeyType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSmartDomainTemplateChangesCompletedEventHandler(object sender, getSmartDomainTemplateChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSmartDomainTemplateChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSmartDomainTemplateChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public smartDomainRecordChangeType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((smartDomainRecordChangeType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void applySmartDomainTemplateChangesCompletedEventHandler(object sender, applySmartDomainTemplateChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applySmartDomainTemplateChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applySmartDomainTemplateChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDomainZoneParkedInfoCompletedEventHandler(object sender, getDomainZoneParkedInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDomainZoneParkedInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDomainZoneParkedInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getDomainZoneParkedInfoResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getDomainZoneParkedInfoResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getHCCZoneInfoCompletedEventHandler(object sender, getHCCZoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHCCZoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHCCZoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getHCCZoneInfoResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getHCCZoneInfoResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAccountByUidCompletedEventHandler(object sender, getAccountByUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountByUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountByUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOffsiteResellerIdCompletedEventHandler(object sender, getOffsiteResellerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOffsiteResellerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOffsiteResellerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDefaultRedirectIpCompletedEventHandler(object sender, getDefaultRedirectIpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultRedirectIpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultRedirectIpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void checkForwardingCompletedEventHandler(object sender, checkForwardingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkForwardingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkForwardingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void insertOrionEventCompletedEventHandler(object sender, insertOrionEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertOrionEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertOrionEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public insertOrionEventResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((insertOrionEventResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void processOrionEventsCompletedEventHandler(object sender, processOrionEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processOrionEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processOrionEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public insertOrionEventResponseType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((insertOrionEventResponseType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteZoneCompletedEventHandler(object sender, deleteZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyZoneOwnershipCompletedEventHandler(object sender, modifyZoneOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyZoneOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyZoneOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifySourceTypeCompletedEventHandler(object sender, modifySourceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySourceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySourceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAccountUidCompletedEventHandler(object sender, getAccountUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createZoneFolderCompletedEventHandler(object sender, createZoneFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createZoneFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createZoneFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyZoneFolderCompletedEventHandler(object sender, modifyZoneFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyZoneFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyZoneFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteZoneFolderCompletedEventHandler(object sender, deleteZoneFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteZoneFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteZoneFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addZoneToFolderCompletedEventHandler(object sender, addZoneToFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addZoneToFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addZoneToFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addZonesToFoldersCompletedEventHandler(object sender, addZonesToFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addZonesToFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addZonesToFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteZoneFromFolderCompletedEventHandler(object sender, deleteZoneFromFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteZoneFromFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteZoneFromFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteZoneFromAllFoldersCompletedEventHandler(object sender, deleteZoneFromAllFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteZoneFromAllFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteZoneFromAllFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteZonesFromFoldersCompletedEventHandler(object sender, deleteZonesFromFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteZonesFromFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteZonesFromFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getZoneFolderCompletedEventHandler(object sender, getZoneFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneFolderType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneFolderType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getZoneFoldersCompletedEventHandler(object sender, getZoneFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneFolderType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneFolderType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getZonesInFolderCompletedEventHandler(object sender, getZonesInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZonesInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZonesInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountListType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountListType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomTemplateDataCompletedEventHandler(object sender, getCustomTemplateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomTemplateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomTemplateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createCustomTemplateCompletedEventHandler(object sender, createCustomTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCustomTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCustomTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyCustomTemplateCompletedEventHandler(object sender, modifyCustomTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyCustomTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyCustomTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteCustomTemplateCompletedEventHandler(object sender, deleteCustomTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomTemplatesCompletedEventHandler(object sender, getCustomTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customTemplateType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customTemplateType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomTemplateByNameCompletedEventHandler(object sender, getCustomTemplateByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomTemplateByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomTemplateByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customTemplateType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customTemplateType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyCustomTemplateSoaCompletedEventHandler(object sender, modifyCustomTemplateSoaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyCustomTemplateSoaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyCustomTemplateSoaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createCustomTemplateRecordsCompletedEventHandler(object sender, createCustomTemplateRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCustomTemplateRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCustomTemplateRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyCustomTemplateRecordsCompletedEventHandler(object sender, modifyCustomTemplateRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyCustomTemplateRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyCustomTemplateRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteCustomTemplateRecordsCompletedEventHandler(object sender, deleteCustomTemplateRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomTemplateRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomTemplateRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void applyCustomTemplateCompletedEventHandler(object sender, applyCustomTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyCustomTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyCustomTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void applyCustomTemplatesToDomainsCompletedEventHandler(object sender, applyCustomTemplatesToDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyCustomTemplatesToDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyCustomTemplatesToDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getApplyTemplateQueueStatusCompletedEventHandler(object sender, getApplyTemplateQueueStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplyTemplateQueueStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplyTemplateQueueStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public applyCustomTemplateQueueType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((applyCustomTemplateQueueType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createVanityNameServersCompletedEventHandler(object sender, createVanityNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createVanityNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createVanityNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public createVanityNameServersResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((createVanityNameServersResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVanityNameServersCompletedEventHandler(object sender, getVanityNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVanityNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVanityNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getVanityNameServersResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getVanityNameServersResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteVanityNameServersCompletedEventHandler(object sender, deleteVanityNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteVanityNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteVanityNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public deleteVanityNameServersResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((deleteVanityNameServersResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyVanityNameServersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void migrateZoneToPremiumCompletedEventHandler(object sender, migrateZoneToPremiumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class migrateZoneToPremiumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal migrateZoneToPremiumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setNameServersCompletedEventHandler(object sender, setNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void tdnsHealthCheckCompletedEventHandler(object sender, tdnsHealthCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tdnsHealthCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tdnsHealthCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tdnsHealthCheckDataType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tdnsHealthCheckDataType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void tdnsHealthCheckFixCompletedEventHandler(object sender, tdnsHealthCheckFixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tdnsHealthCheckFixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tdnsHealthCheckFixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void submitNewDSRecordsCompletedEventHandler(object sender, submitNewDSRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitNewDSRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitNewDSRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDNSSECStatusCompletedEventHandler(object sender, getDNSSECStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDNSSECStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDNSSECStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dnssecStatusType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dnssecStatusType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDNSSECStatusByShopperCompletedEventHandler(object sender, getDNSSECStatusByShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDNSSECStatusByShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDNSSECStatusByShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dnssecStatusType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dnssecStatusType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void enableDNSSECCompletedEventHandler(object sender, enableDNSSECCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableDNSSECCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableDNSSECCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateDNSSECNotifyEmailCompletedEventHandler(object sender, updateDNSSECNotifyEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDNSSECNotifyEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDNSSECNotifyEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void disableDNSSECCompletedEventHandler(object sender, disableDNSSECCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableDNSSECCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableDNSSECCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomerAuditLogCompletedEventHandler(object sender, getCustomerAuditLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerAuditLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerAuditLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public auditLogType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((auditLogType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomerAuditLogByIdCompletedEventHandler(object sender, getCustomerAuditLogByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerAuditLogByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerAuditLogByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public auditLogType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((auditLogType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPremiumStatusCompletedEventHandler(object sender, getPremiumStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPremiumStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPremiumStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getPremiumStatusResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getPremiumStatusResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMainANSByShopperCompletedEventHandler(object sender, getMainANSByShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainANSByShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainANSByShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public domainRecordsType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((domainRecordsType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void enableXferSlaveCompletedEventHandler(object sender, enableXferSlaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableXferSlaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableXferSlaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXferStatusCompletedEventHandler(object sender, getXferStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXferStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXferStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getXferStatusResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getXferStatusResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateXferSlaveCompletedEventHandler(object sender, updateXferSlaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateXferSlaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateXferSlaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void disableXferSlaveCompletedEventHandler(object sender, disableXferSlaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableXferSlaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableXferSlaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void enableXferMasterCompletedEventHandler(object sender, enableXferMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableXferMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableXferMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateXferMasterCompletedEventHandler(object sender, updateXferMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateXferMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateXferMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void disableXferMasterCompletedEventHandler(object sender, disableXferMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableXferMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableXferMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifySoaCompletedEventHandler(object sender, modifySoaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySoaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySoaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOffsiteZoneCompletedEventHandler(object sender, createOffsiteZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createOffsiteZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createOffsiteZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteOffsiteZoneCompletedEventHandler(object sender, deleteOffsiteZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteOffsiteZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteOffsiteZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public simpleResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((simpleResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDefaultSoaValuesCompletedEventHandler(object sender, getDefaultSoaValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultSoaValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultSoaValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public soaType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((soaType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRecordsByUidCompletedEventHandler(object sender, getRecordsByUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecordsByUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecordsByUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getQueryReportMonthlySummaryCompletedEventHandler(object sender, getQueryReportMonthlySummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueryReportMonthlySummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueryReportMonthlySummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public queryReportMonthlySummaryType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((queryReportMonthlySummaryType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getQueryReportMonthlyDateRangeCompletedEventHandler(object sender, getQueryReportMonthlyDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueryReportMonthlyDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueryReportMonthlyDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public queryReportResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((queryReportResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getQueryReportDailyDateRangeCompletedEventHandler(object sender, getQueryReportDailyDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueryReportDailyDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueryReportDailyDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public queryReportResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((queryReportResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getQueryReportHourlyDateRangeCompletedEventHandler(object sender, getQueryReportHourlyDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueryReportHourlyDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQueryReportHourlyDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public queryReportResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((queryReportResponseType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591