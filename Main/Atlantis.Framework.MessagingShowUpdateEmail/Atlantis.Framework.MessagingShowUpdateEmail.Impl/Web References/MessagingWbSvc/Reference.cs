//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.MessagingShowUpdateEmail.Impl.MessagingWbSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MessagingWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MessagingWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getEmailTemplatebyTemplateIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplacePLVParmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBounceRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowUpdateEmailMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShopperMergeForEmailSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShopperUnMergeForEmailSystemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MessagingWebService() {
            this.Url = global::Atlantis.Framework.MessagingShowUpdateEmail.Impl.Properties.Settings.Default.Atlantis_Framework_MessagingShowUpdateEmail_Impl_MessagingWbSvc_MessagingWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getEmailTemplatebyTemplateIDCompletedEventHandler getEmailTemplatebyTemplateIDCompleted;
        
        /// <remarks/>
        public event ReplacePLVParmsCompletedEventHandler ReplacePLVParmsCompleted;
        
        /// <remarks/>
        public event CheckBounceRulesCompletedEventHandler CheckBounceRulesCompleted;
        
        /// <remarks/>
        public event ShowUpdateEmailMessageCompletedEventHandler ShowUpdateEmailMessageCompleted;
        
        /// <remarks/>
        public event ShopperMergeForEmailSystemCompletedEventHandler ShopperMergeForEmailSystemCompleted;
        
        /// <remarks/>
        public event ShopperUnMergeForEmailSystemCompletedEventHandler ShopperUnMergeForEmailSystemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEmailTemplatebyTemplateID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEmailTemplatebyTemplateID(int iTemplateID) {
            object[] results = this.Invoke("getEmailTemplatebyTemplateID", new object[] {
                        iTemplateID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmailTemplatebyTemplateIDAsync(int iTemplateID) {
            this.getEmailTemplatebyTemplateIDAsync(iTemplateID, null);
        }
        
        /// <remarks/>
        public void getEmailTemplatebyTemplateIDAsync(int iTemplateID, object userState) {
            if ((this.getEmailTemplatebyTemplateIDOperationCompleted == null)) {
                this.getEmailTemplatebyTemplateIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmailTemplatebyTemplateIDOperationCompleted);
            }
            this.InvokeAsync("getEmailTemplatebyTemplateID", new object[] {
                        iTemplateID}, this.getEmailTemplatebyTemplateIDOperationCompleted, userState);
        }
        
        private void OngetEmailTemplatebyTemplateIDOperationCompleted(object arg) {
            if ((this.getEmailTemplatebyTemplateIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmailTemplatebyTemplateIDCompleted(this, new getEmailTemplatebyTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplacePLVParms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplacePLVParms(string replaceText, int privateLabelID) {
            object[] results = this.Invoke("ReplacePLVParms", new object[] {
                        replaceText,
                        privateLabelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplacePLVParmsAsync(string replaceText, int privateLabelID) {
            this.ReplacePLVParmsAsync(replaceText, privateLabelID, null);
        }
        
        /// <remarks/>
        public void ReplacePLVParmsAsync(string replaceText, int privateLabelID, object userState) {
            if ((this.ReplacePLVParmsOperationCompleted == null)) {
                this.ReplacePLVParmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplacePLVParmsOperationCompleted);
            }
            this.InvokeAsync("ReplacePLVParms", new object[] {
                        replaceText,
                        privateLabelID}, this.ReplacePLVParmsOperationCompleted, userState);
        }
        
        private void OnReplacePLVParmsOperationCompleted(object arg) {
            if ((this.ReplacePLVParmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplacePLVParmsCompleted(this, new ReplacePLVParmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckBounceRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckBounceRules(string emailHash, string emailAddress, int PrivateLabelID) {
            object[] results = this.Invoke("CheckBounceRules", new object[] {
                        emailHash,
                        emailAddress,
                        PrivateLabelID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBounceRulesAsync(string emailHash, string emailAddress, int PrivateLabelID) {
            this.CheckBounceRulesAsync(emailHash, emailAddress, PrivateLabelID, null);
        }
        
        /// <remarks/>
        public void CheckBounceRulesAsync(string emailHash, string emailAddress, int PrivateLabelID, object userState) {
            if ((this.CheckBounceRulesOperationCompleted == null)) {
                this.CheckBounceRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBounceRulesOperationCompleted);
            }
            this.InvokeAsync("CheckBounceRules", new object[] {
                        emailHash,
                        emailAddress,
                        PrivateLabelID}, this.CheckBounceRulesOperationCompleted, userState);
        }
        
        private void OnCheckBounceRulesOperationCompleted(object arg) {
            if ((this.CheckBounceRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBounceRulesCompleted(this, new CheckBounceRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowUpdateEmailMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShowUpdateEmailMessage(string emailHash, int PrivateLabelID) {
            object[] results = this.Invoke("ShowUpdateEmailMessage", new object[] {
                        emailHash,
                        PrivateLabelID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShowUpdateEmailMessageAsync(string emailHash, int PrivateLabelID) {
            this.ShowUpdateEmailMessageAsync(emailHash, PrivateLabelID, null);
        }
        
        /// <remarks/>
        public void ShowUpdateEmailMessageAsync(string emailHash, int PrivateLabelID, object userState) {
            if ((this.ShowUpdateEmailMessageOperationCompleted == null)) {
                this.ShowUpdateEmailMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowUpdateEmailMessageOperationCompleted);
            }
            this.InvokeAsync("ShowUpdateEmailMessage", new object[] {
                        emailHash,
                        PrivateLabelID}, this.ShowUpdateEmailMessageOperationCompleted, userState);
        }
        
        private void OnShowUpdateEmailMessageOperationCompleted(object arg) {
            if ((this.ShowUpdateEmailMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowUpdateEmailMessageCompleted(this, new ShowUpdateEmailMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShopperMergeForEmailSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShopperMergeForEmailSystem(string losingShopperID, string gainingShopperID) {
            this.Invoke("ShopperMergeForEmailSystem", new object[] {
                        losingShopperID,
                        gainingShopperID});
        }
        
        /// <remarks/>
        public void ShopperMergeForEmailSystemAsync(string losingShopperID, string gainingShopperID) {
            this.ShopperMergeForEmailSystemAsync(losingShopperID, gainingShopperID, null);
        }
        
        /// <remarks/>
        public void ShopperMergeForEmailSystemAsync(string losingShopperID, string gainingShopperID, object userState) {
            if ((this.ShopperMergeForEmailSystemOperationCompleted == null)) {
                this.ShopperMergeForEmailSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShopperMergeForEmailSystemOperationCompleted);
            }
            this.InvokeAsync("ShopperMergeForEmailSystem", new object[] {
                        losingShopperID,
                        gainingShopperID}, this.ShopperMergeForEmailSystemOperationCompleted, userState);
        }
        
        private void OnShopperMergeForEmailSystemOperationCompleted(object arg) {
            if ((this.ShopperMergeForEmailSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShopperMergeForEmailSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShopperUnMergeForEmailSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShopperUnMergeForEmailSystem(string losingShopperID, string gainingShopperID) {
            this.Invoke("ShopperUnMergeForEmailSystem", new object[] {
                        losingShopperID,
                        gainingShopperID});
        }
        
        /// <remarks/>
        public void ShopperUnMergeForEmailSystemAsync(string losingShopperID, string gainingShopperID) {
            this.ShopperUnMergeForEmailSystemAsync(losingShopperID, gainingShopperID, null);
        }
        
        /// <remarks/>
        public void ShopperUnMergeForEmailSystemAsync(string losingShopperID, string gainingShopperID, object userState) {
            if ((this.ShopperUnMergeForEmailSystemOperationCompleted == null)) {
                this.ShopperUnMergeForEmailSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShopperUnMergeForEmailSystemOperationCompleted);
            }
            this.InvokeAsync("ShopperUnMergeForEmailSystem", new object[] {
                        losingShopperID,
                        gainingShopperID}, this.ShopperUnMergeForEmailSystemOperationCompleted, userState);
        }
        
        private void OnShopperUnMergeForEmailSystemOperationCompleted(object arg) {
            if ((this.ShopperUnMergeForEmailSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShopperUnMergeForEmailSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getEmailTemplatebyTemplateIDCompletedEventHandler(object sender, getEmailTemplatebyTemplateIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmailTemplatebyTemplateIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmailTemplatebyTemplateIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReplacePLVParmsCompletedEventHandler(object sender, ReplacePLVParmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplacePLVParmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplacePLVParmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckBounceRulesCompletedEventHandler(object sender, CheckBounceRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBounceRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBounceRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShowUpdateEmailMessageCompletedEventHandler(object sender, ShowUpdateEmailMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowUpdateEmailMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowUpdateEmailMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShopperMergeForEmailSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShopperUnMergeForEmailSystemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591