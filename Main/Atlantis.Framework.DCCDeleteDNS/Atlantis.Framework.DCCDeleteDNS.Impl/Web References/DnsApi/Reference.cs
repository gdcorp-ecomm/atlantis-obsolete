//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DCCDeleteDNS.Impl.DnsApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="dnsapiSoap", Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class dnssoapapi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback returnTimeOperationCompleted;
        
        private authDataType clientAuthField;
        
        private System.Threading.SendOrPostCallback echoAuthOperationCompleted;
        
        private custDataType custInfoField;
        
        private System.Threading.SendOrPostCallback echoCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMXRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNSRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSRVRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMXRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSOAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBindFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback fixZoneOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDefaultZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback zoneHealthCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback refreshZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForwardingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveNewProxyConfigRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProxyConfigRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyProxyConfigRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProxyFiltersOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveNewProxyFilterRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProxyFilterRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyProxyFilterRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProtectedDomainInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public dnssoapapi() {
            this.Url = global::Atlantis.Framework.DCCDeleteDNS.Impl.Properties.Settings.Default.Atlantis_Framework_DCCDeleteDNS_Impl_DnsApi_dnssoapapi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public authDataType clientAuth {
            get {
                return this.clientAuthField;
            }
            set {
                this.clientAuthField = value;
            }
        }
        
        public custDataType custInfo {
            get {
                return this.custInfoField;
            }
            set {
                this.custInfoField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event returnTimeCompletedEventHandler returnTimeCompleted;
        
        /// <remarks/>
        public event echoAuthCompletedEventHandler echoAuthCompleted;
        
        /// <remarks/>
        public event echoCustCompletedEventHandler echoCustCompleted;
        
        /// <remarks/>
        public event getMXRecordsCompletedEventHandler getMXRecordsCompleted;
        
        /// <remarks/>
        public event getNSRecordsCompletedEventHandler getNSRecordsCompleted;
        
        /// <remarks/>
        public event getSRVRecordsCompletedEventHandler getSRVRecordsCompleted;
        
        /// <remarks/>
        public event getRRecordsCompletedEventHandler getRRecordsCompleted;
        
        /// <remarks/>
        public event setMXRecordsCompletedEventHandler setMXRecordsCompleted;
        
        /// <remarks/>
        public event createRecordsCompletedEventHandler createRecordsCompleted;
        
        /// <remarks/>
        public event modifyRecordsCompletedEventHandler modifyRecordsCompleted;
        
        /// <remarks/>
        public event deleteRecordsCompletedEventHandler deleteRecordsCompleted;
        
        /// <remarks/>
        public event getSOACompletedEventHandler getSOACompleted;
        
        /// <remarks/>
        public event getNameServersCompletedEventHandler getNameServersCompleted;
        
        /// <remarks/>
        public event getBindFileCompletedEventHandler getBindFileCompleted;
        
        /// <remarks/>
        public event getZoneCompletedEventHandler getZoneCompleted;
        
        /// <remarks/>
        public event fixZoneOwnershipCompletedEventHandler fixZoneOwnershipCompleted;
        
        /// <remarks/>
        public event createDefaultZoneCompletedEventHandler createDefaultZoneCompleted;
        
        /// <remarks/>
        public event zoneHealthCheckCompletedEventHandler zoneHealthCheckCompleted;
        
        /// <remarks/>
        public event refreshZoneCompletedEventHandler refreshZoneCompleted;
        
        /// <remarks/>
        public event getForwardingDataCompletedEventHandler getForwardingDataCompleted;
        
        /// <remarks/>
        public event getProxyConfigCompletedEventHandler getProxyConfigCompleted;
        
        /// <remarks/>
        public event getProxyInstancesCompletedEventHandler getProxyInstancesCompleted;
        
        /// <remarks/>
        public event saveNewProxyConfigRecordCompletedEventHandler saveNewProxyConfigRecordCompleted;
        
        /// <remarks/>
        public event removeProxyConfigRecordCompletedEventHandler removeProxyConfigRecordCompleted;
        
        /// <remarks/>
        public event modifyProxyConfigRecordCompletedEventHandler modifyProxyConfigRecordCompleted;
        
        /// <remarks/>
        public event getProxyFiltersCompletedEventHandler getProxyFiltersCompleted;
        
        /// <remarks/>
        public event saveNewProxyFilterRecordCompletedEventHandler saveNewProxyFilterRecordCompleted;
        
        /// <remarks/>
        public event removeProxyFilterRecordCompletedEventHandler removeProxyFilterRecordCompleted;
        
        /// <remarks/>
        public event modifyProxyFilterRecordCompletedEventHandler modifyProxyFilterRecordCompleted;
        
        /// <remarks/>
        public event getProtectedDomainInfoCompletedEventHandler getProtectedDomainInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string returnTime() {
            object[] results = this.Invoke("returnTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void returnTimeAsync() {
            this.returnTimeAsync(null);
        }
        
        /// <remarks/>
        public void returnTimeAsync(object userState) {
            if ((this.returnTimeOperationCompleted == null)) {
                this.returnTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnTimeOperationCompleted);
            }
            this.InvokeAsync("returnTime", new object[0], this.returnTimeOperationCompleted, userState);
        }
        
        private void OnreturnTimeOperationCompleted(object arg) {
            if ((this.returnTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnTimeCompleted(this, new returnTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("authOut")]
        public authDataType echoAuth() {
            object[] results = this.Invoke("echoAuth", new object[0]);
            return ((authDataType)(results[0]));
        }
        
        /// <remarks/>
        public void echoAuthAsync() {
            this.echoAuthAsync(null);
        }
        
        /// <remarks/>
        public void echoAuthAsync(object userState) {
            if ((this.echoAuthOperationCompleted == null)) {
                this.echoAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnechoAuthOperationCompleted);
            }
            this.InvokeAsync("echoAuth", new object[0], this.echoAuthOperationCompleted, userState);
        }
        
        private void OnechoAuthOperationCompleted(object arg) {
            if ((this.echoAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.echoAuthCompleted(this, new echoAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("CustInfo")]
        public custDataType echoCust() {
            object[] results = this.Invoke("echoCust", new object[0]);
            return ((custDataType)(results[0]));
        }
        
        /// <remarks/>
        public void echoCustAsync() {
            this.echoCustAsync(null);
        }
        
        /// <remarks/>
        public void echoCustAsync(object userState) {
            if ((this.echoCustOperationCompleted == null)) {
                this.echoCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnechoCustOperationCompleted);
            }
            this.InvokeAsync("echoCust", new object[0], this.echoCustOperationCompleted, userState);
        }
        
        private void OnechoCustOperationCompleted(object arg) {
            if ((this.echoCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.echoCustCompleted(this, new echoCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getMXRecords(string domain) {
            object[] results = this.Invoke("getMXRecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getMXRecordsAsync(string domain) {
            this.getMXRecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getMXRecordsAsync(string domain, object userState) {
            if ((this.getMXRecordsOperationCompleted == null)) {
                this.getMXRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMXRecordsOperationCompleted);
            }
            this.InvokeAsync("getMXRecords", new object[] {
                        domain}, this.getMXRecordsOperationCompleted, userState);
        }
        
        private void OngetMXRecordsOperationCompleted(object arg) {
            if ((this.getMXRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMXRecordsCompleted(this, new getMXRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getNSRecords(string domain) {
            object[] results = this.Invoke("getNSRecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getNSRecordsAsync(string domain) {
            this.getNSRecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getNSRecordsAsync(string domain, object userState) {
            if ((this.getNSRecordsOperationCompleted == null)) {
                this.getNSRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNSRecordsOperationCompleted);
            }
            this.InvokeAsync("getNSRecords", new object[] {
                        domain}, this.getNSRecordsOperationCompleted, userState);
        }
        
        private void OngetNSRecordsOperationCompleted(object arg) {
            if ((this.getNSRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNSRecordsCompleted(this, new getNSRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getSRVRecords(string domain) {
            object[] results = this.Invoke("getSRVRecords", new object[] {
                        domain});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getSRVRecordsAsync(string domain) {
            this.getSRVRecordsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getSRVRecordsAsync(string domain, object userState) {
            if ((this.getSRVRecordsOperationCompleted == null)) {
                this.getSRVRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSRVRecordsOperationCompleted);
            }
            this.InvokeAsync("getSRVRecords", new object[] {
                        domain}, this.getSRVRecordsOperationCompleted, userState);
        }
        
        private void OngetSRVRecordsOperationCompleted(object arg) {
            if ((this.getSRVRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSRVRecordsCompleted(this, new getSRVRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public rrecordType[] getRRecords(string domain, string type) {
            object[] results = this.Invoke("getRRecords", new object[] {
                        domain,
                        type});
            return ((rrecordType[])(results[0]));
        }
        
        /// <remarks/>
        public void getRRecordsAsync(string domain, string type) {
            this.getRRecordsAsync(domain, type, null);
        }
        
        /// <remarks/>
        public void getRRecordsAsync(string domain, string type, object userState) {
            if ((this.getRRecordsOperationCompleted == null)) {
                this.getRRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRRecordsOperationCompleted);
            }
            this.InvokeAsync("getRRecords", new object[] {
                        domain,
                        type}, this.getRRecordsOperationCompleted, userState);
        }
        
        private void OngetRRecordsOperationCompleted(object arg) {
            if ((this.getRRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRRecordsCompleted(this, new getRRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType setMXRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList) {
            object[] results = this.Invoke("setMXRecords", new object[] {
                        domain,
                        recordList});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void setMXRecordsAsync(string domain, rrecordType[] recordList) {
            this.setMXRecordsAsync(domain, recordList, null);
        }
        
        /// <remarks/>
        public void setMXRecordsAsync(string domain, rrecordType[] recordList, object userState) {
            if ((this.setMXRecordsOperationCompleted == null)) {
                this.setMXRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMXRecordsOperationCompleted);
            }
            this.InvokeAsync("setMXRecords", new object[] {
                        domain,
                        recordList}, this.setMXRecordsOperationCompleted, userState);
        }
        
        private void OnsetMXRecordsOperationCompleted(object arg) {
            if ((this.setMXRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMXRecordsCompleted(this, new setMXRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType createRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList) {
            object[] results = this.Invoke("createRecords", new object[] {
                        domain,
                        recordList});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void createRecordsAsync(string domain, rrecordType[] recordList) {
            this.createRecordsAsync(domain, recordList, null);
        }
        
        /// <remarks/>
        public void createRecordsAsync(string domain, rrecordType[] recordList, object userState) {
            if ((this.createRecordsOperationCompleted == null)) {
                this.createRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRecordsOperationCompleted);
            }
            this.InvokeAsync("createRecords", new object[] {
                        domain,
                        recordList}, this.createRecordsOperationCompleted, userState);
        }
        
        private void OncreateRecordsOperationCompleted(object arg) {
            if ((this.createRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRecordsCompleted(this, new createRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType modifyRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList) {
            object[] results = this.Invoke("modifyRecords", new object[] {
                        domain,
                        recordList});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void modifyRecordsAsync(string domain, rrecordType[] recordList) {
            this.modifyRecordsAsync(domain, recordList, null);
        }
        
        /// <remarks/>
        public void modifyRecordsAsync(string domain, rrecordType[] recordList, object userState) {
            if ((this.modifyRecordsOperationCompleted == null)) {
                this.modifyRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyRecordsOperationCompleted);
            }
            this.InvokeAsync("modifyRecords", new object[] {
                        domain,
                        recordList}, this.modifyRecordsOperationCompleted, userState);
        }
        
        private void OnmodifyRecordsOperationCompleted(object arg) {
            if ((this.modifyRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyRecordsCompleted(this, new modifyRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public booleanResponseType deleteRecords(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] rrecordType[] recordList) {
            object[] results = this.Invoke("deleteRecords", new object[] {
                        domain,
                        recordList});
            return ((booleanResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRecordsAsync(string domain, rrecordType[] recordList) {
            this.deleteRecordsAsync(domain, recordList, null);
        }
        
        /// <remarks/>
        public void deleteRecordsAsync(string domain, rrecordType[] recordList, object userState) {
            if ((this.deleteRecordsOperationCompleted == null)) {
                this.deleteRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRecordsOperationCompleted);
            }
            this.InvokeAsync("deleteRecords", new object[] {
                        domain,
                        recordList}, this.deleteRecordsOperationCompleted, userState);
        }
        
        private void OndeleteRecordsOperationCompleted(object arg) {
            if ((this.deleteRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRecordsCompleted(this, new deleteRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public soaType getSOA(string domain) {
            object[] results = this.Invoke("getSOA", new object[] {
                        domain});
            return ((soaType)(results[0]));
        }
        
        /// <remarks/>
        public void getSOAAsync(string domain) {
            this.getSOAAsync(domain, null);
        }
        
        /// <remarks/>
        public void getSOAAsync(string domain, object userState) {
            if ((this.getSOAOperationCompleted == null)) {
                this.getSOAOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSOAOperationCompleted);
            }
            this.InvokeAsync("getSOA", new object[] {
                        domain}, this.getSOAOperationCompleted, userState);
        }
        
        private void OngetSOAOperationCompleted(object arg) {
            if ((this.getSOACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSOACompleted(this, new getSOACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public string[] getNameServers(string domain, int even) {
            object[] results = this.Invoke("getNameServers", new object[] {
                        domain,
                        even});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getNameServersAsync(string domain, int even) {
            this.getNameServersAsync(domain, even, null);
        }
        
        /// <remarks/>
        public void getNameServersAsync(string domain, int even, object userState) {
            if ((this.getNameServersOperationCompleted == null)) {
                this.getNameServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameServersOperationCompleted);
            }
            this.InvokeAsync("getNameServers", new object[] {
                        domain,
                        even}, this.getNameServersOperationCompleted, userState);
        }
        
        private void OngetNameServersOperationCompleted(object arg) {
            if ((this.getNameServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameServersCompleted(this, new getNameServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string getBindFile(string domain) {
            object[] results = this.Invoke("getBindFile", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBindFileAsync(string domain) {
            this.getBindFileAsync(domain, null);
        }
        
        /// <remarks/>
        public void getBindFileAsync(string domain, object userState) {
            if ((this.getBindFileOperationCompleted == null)) {
                this.getBindFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBindFileOperationCompleted);
            }
            this.InvokeAsync("getBindFile", new object[] {
                        domain}, this.getBindFileOperationCompleted, userState);
        }
        
        private void OngetBindFileOperationCompleted(object arg) {
            if ((this.getBindFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBindFileCompleted(this, new getBindFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public zoneType getZone(string domain) {
            object[] results = this.Invoke("getZone", new object[] {
                        domain});
            return ((zoneType)(results[0]));
        }
        
        /// <remarks/>
        public void getZoneAsync(string domain) {
            this.getZoneAsync(domain, null);
        }
        
        /// <remarks/>
        public void getZoneAsync(string domain, object userState) {
            if ((this.getZoneOperationCompleted == null)) {
                this.getZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZoneOperationCompleted);
            }
            this.InvokeAsync("getZone", new object[] {
                        domain}, this.getZoneOperationCompleted, userState);
        }
        
        private void OngetZoneOperationCompleted(object arg) {
            if ((this.getZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZoneCompleted(this, new getZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string fixZoneOwnership(string domain) {
            object[] results = this.Invoke("fixZoneOwnership", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fixZoneOwnershipAsync(string domain) {
            this.fixZoneOwnershipAsync(domain, null);
        }
        
        /// <remarks/>
        public void fixZoneOwnershipAsync(string domain, object userState) {
            if ((this.fixZoneOwnershipOperationCompleted == null)) {
                this.fixZoneOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfixZoneOwnershipOperationCompleted);
            }
            this.InvokeAsync("fixZoneOwnership", new object[] {
                        domain}, this.fixZoneOwnershipOperationCompleted, userState);
        }
        
        private void OnfixZoneOwnershipOperationCompleted(object arg) {
            if ((this.fixZoneOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fixZoneOwnershipCompleted(this, new fixZoneOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string createDefaultZone(string domain) {
            object[] results = this.Invoke("createDefaultZone", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createDefaultZoneAsync(string domain) {
            this.createDefaultZoneAsync(domain, null);
        }
        
        /// <remarks/>
        public void createDefaultZoneAsync(string domain, object userState) {
            if ((this.createDefaultZoneOperationCompleted == null)) {
                this.createDefaultZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDefaultZoneOperationCompleted);
            }
            this.InvokeAsync("createDefaultZone", new object[] {
                        domain}, this.createDefaultZoneOperationCompleted, userState);
        }
        
        private void OncreateDefaultZoneOperationCompleted(object arg) {
            if ((this.createDefaultZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDefaultZoneCompleted(this, new createDefaultZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public zoneHealthCheckResponseType zoneHealthCheck(string domain, string action) {
            object[] results = this.Invoke("zoneHealthCheck", new object[] {
                        domain,
                        action});
            return ((zoneHealthCheckResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void zoneHealthCheckAsync(string domain, string action) {
            this.zoneHealthCheckAsync(domain, action, null);
        }
        
        /// <remarks/>
        public void zoneHealthCheckAsync(string domain, string action, object userState) {
            if ((this.zoneHealthCheckOperationCompleted == null)) {
                this.zoneHealthCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzoneHealthCheckOperationCompleted);
            }
            this.InvokeAsync("zoneHealthCheck", new object[] {
                        domain,
                        action}, this.zoneHealthCheckOperationCompleted, userState);
        }
        
        private void OnzoneHealthCheckOperationCompleted(object arg) {
            if ((this.zoneHealthCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zoneHealthCheckCompleted(this, new zoneHealthCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string refreshZone(string domain, [System.Xml.Serialization.XmlArrayItemAttribute("nameservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)] string[] nameservers) {
            object[] results = this.Invoke("refreshZone", new object[] {
                        domain,
                        nameservers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void refreshZoneAsync(string domain, string[] nameservers) {
            this.refreshZoneAsync(domain, nameservers, null);
        }
        
        /// <remarks/>
        public void refreshZoneAsync(string domain, string[] nameservers, object userState) {
            if ((this.refreshZoneOperationCompleted == null)) {
                this.refreshZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefreshZoneOperationCompleted);
            }
            this.InvokeAsync("refreshZone", new object[] {
                        domain,
                        nameservers}, this.refreshZoneOperationCompleted, userState);
        }
        
        private void OnrefreshZoneOperationCompleted(object arg) {
            if ((this.refreshZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refreshZoneCompleted(this, new refreshZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("custInfo")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string getForwardingData(string domain) {
            object[] results = this.Invoke("getForwardingData", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getForwardingDataAsync(string domain) {
            this.getForwardingDataAsync(domain, null);
        }
        
        /// <remarks/>
        public void getForwardingDataAsync(string domain, object userState) {
            if ((this.getForwardingDataOperationCompleted == null)) {
                this.getForwardingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForwardingDataOperationCompleted);
            }
            this.InvokeAsync("getForwardingData", new object[] {
                        domain}, this.getForwardingDataOperationCompleted, userState);
        }
        
        private void OngetForwardingDataOperationCompleted(object arg) {
            if ((this.getForwardingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForwardingDataCompleted(this, new getForwardingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public configDataResponseArrayType getProxyConfig(int site, string server) {
            object[] results = this.Invoke("getProxyConfig", new object[] {
                        site,
                        server});
            return ((configDataResponseArrayType)(results[0]));
        }
        
        /// <remarks/>
        public void getProxyConfigAsync(int site, string server) {
            this.getProxyConfigAsync(site, server, null);
        }
        
        /// <remarks/>
        public void getProxyConfigAsync(int site, string server, object userState) {
            if ((this.getProxyConfigOperationCompleted == null)) {
                this.getProxyConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyConfigOperationCompleted);
            }
            this.InvokeAsync("getProxyConfig", new object[] {
                        site,
                        server}, this.getProxyConfigOperationCompleted, userState);
        }
        
        private void OngetProxyConfigOperationCompleted(object arg) {
            if ((this.getProxyConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyConfigCompleted(this, new getProxyConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("siteservers", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
        public proxySiteArrayType[] getProxyInstances(int site) {
            object[] results = this.Invoke("getProxyInstances", new object[] {
                        site});
            return ((proxySiteArrayType[])(results[0]));
        }
        
        /// <remarks/>
        public void getProxyInstancesAsync(int site) {
            this.getProxyInstancesAsync(site, null);
        }
        
        /// <remarks/>
        public void getProxyInstancesAsync(int site, object userState) {
            if ((this.getProxyInstancesOperationCompleted == null)) {
                this.getProxyInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyInstancesOperationCompleted);
            }
            this.InvokeAsync("getProxyInstances", new object[] {
                        site}, this.getProxyInstancesOperationCompleted, userState);
        }
        
        private void OngetProxyInstancesOperationCompleted(object arg) {
            if ((this.getProxyInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyInstancesCompleted(this, new getProxyInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string saveNewProxyConfigRecord(configDataType record) {
            object[] results = this.Invoke("saveNewProxyConfigRecord", new object[] {
                        record});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveNewProxyConfigRecordAsync(configDataType record) {
            this.saveNewProxyConfigRecordAsync(record, null);
        }
        
        /// <remarks/>
        public void saveNewProxyConfigRecordAsync(configDataType record, object userState) {
            if ((this.saveNewProxyConfigRecordOperationCompleted == null)) {
                this.saveNewProxyConfigRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveNewProxyConfigRecordOperationCompleted);
            }
            this.InvokeAsync("saveNewProxyConfigRecord", new object[] {
                        record}, this.saveNewProxyConfigRecordOperationCompleted, userState);
        }
        
        private void OnsaveNewProxyConfigRecordOperationCompleted(object arg) {
            if ((this.saveNewProxyConfigRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveNewProxyConfigRecordCompleted(this, new saveNewProxyConfigRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string removeProxyConfigRecord(int id) {
            object[] results = this.Invoke("removeProxyConfigRecord", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeProxyConfigRecordAsync(int id) {
            this.removeProxyConfigRecordAsync(id, null);
        }
        
        /// <remarks/>
        public void removeProxyConfigRecordAsync(int id, object userState) {
            if ((this.removeProxyConfigRecordOperationCompleted == null)) {
                this.removeProxyConfigRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProxyConfigRecordOperationCompleted);
            }
            this.InvokeAsync("removeProxyConfigRecord", new object[] {
                        id}, this.removeProxyConfigRecordOperationCompleted, userState);
        }
        
        private void OnremoveProxyConfigRecordOperationCompleted(object arg) {
            if ((this.removeProxyConfigRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProxyConfigRecordCompleted(this, new removeProxyConfigRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string modifyProxyConfigRecord(int id, string editField, string newpvalue) {
            object[] results = this.Invoke("modifyProxyConfigRecord", new object[] {
                        id,
                        editField,
                        newpvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyProxyConfigRecordAsync(int id, string editField, string newpvalue) {
            this.modifyProxyConfigRecordAsync(id, editField, newpvalue, null);
        }
        
        /// <remarks/>
        public void modifyProxyConfigRecordAsync(int id, string editField, string newpvalue, object userState) {
            if ((this.modifyProxyConfigRecordOperationCompleted == null)) {
                this.modifyProxyConfigRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyProxyConfigRecordOperationCompleted);
            }
            this.InvokeAsync("modifyProxyConfigRecord", new object[] {
                        id,
                        editField,
                        newpvalue}, this.modifyProxyConfigRecordOperationCompleted, userState);
        }
        
        private void OnmodifyProxyConfigRecordOperationCompleted(object arg) {
            if ((this.modifyProxyConfigRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyProxyConfigRecordCompleted(this, new modifyProxyConfigRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public proxyFilterDataResponseArrayType getProxyFilters(int site, string server) {
            object[] results = this.Invoke("getProxyFilters", new object[] {
                        site,
                        server});
            return ((proxyFilterDataResponseArrayType)(results[0]));
        }
        
        /// <remarks/>
        public void getProxyFiltersAsync(int site, string server) {
            this.getProxyFiltersAsync(site, server, null);
        }
        
        /// <remarks/>
        public void getProxyFiltersAsync(int site, string server, object userState) {
            if ((this.getProxyFiltersOperationCompleted == null)) {
                this.getProxyFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProxyFiltersOperationCompleted);
            }
            this.InvokeAsync("getProxyFilters", new object[] {
                        site,
                        server}, this.getProxyFiltersOperationCompleted, userState);
        }
        
        private void OngetProxyFiltersOperationCompleted(object arg) {
            if ((this.getProxyFiltersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProxyFiltersCompleted(this, new getProxyFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string saveNewProxyFilterRecord(proxyFilterDataType record) {
            object[] results = this.Invoke("saveNewProxyFilterRecord", new object[] {
                        record});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveNewProxyFilterRecordAsync(proxyFilterDataType record) {
            this.saveNewProxyFilterRecordAsync(record, null);
        }
        
        /// <remarks/>
        public void saveNewProxyFilterRecordAsync(proxyFilterDataType record, object userState) {
            if ((this.saveNewProxyFilterRecordOperationCompleted == null)) {
                this.saveNewProxyFilterRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveNewProxyFilterRecordOperationCompleted);
            }
            this.InvokeAsync("saveNewProxyFilterRecord", new object[] {
                        record}, this.saveNewProxyFilterRecordOperationCompleted, userState);
        }
        
        private void OnsaveNewProxyFilterRecordOperationCompleted(object arg) {
            if ((this.saveNewProxyFilterRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveNewProxyFilterRecordCompleted(this, new saveNewProxyFilterRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string removeProxyFilterRecord(int id) {
            object[] results = this.Invoke("removeProxyFilterRecord", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeProxyFilterRecordAsync(int id) {
            this.removeProxyFilterRecordAsync(id, null);
        }
        
        /// <remarks/>
        public void removeProxyFilterRecordAsync(int id, object userState) {
            if ((this.removeProxyFilterRecordOperationCompleted == null)) {
                this.removeProxyFilterRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProxyFilterRecordOperationCompleted);
            }
            this.InvokeAsync("removeProxyFilterRecord", new object[] {
                        id}, this.removeProxyFilterRecordOperationCompleted, userState);
        }
        
        private void OnremoveProxyFilterRecordOperationCompleted(object arg) {
            if ((this.removeProxyFilterRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProxyFilterRecordCompleted(this, new removeProxyFilterRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string modifyProxyFilterRecord(int id, string editField, string newpvalue) {
            object[] results = this.Invoke("modifyProxyFilterRecord", new object[] {
                        id,
                        editField,
                        newpvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyProxyFilterRecordAsync(int id, string editField, string newpvalue) {
            this.modifyProxyFilterRecordAsync(id, editField, newpvalue, null);
        }
        
        /// <remarks/>
        public void modifyProxyFilterRecordAsync(int id, string editField, string newpvalue, object userState) {
            if ((this.modifyProxyFilterRecordOperationCompleted == null)) {
                this.modifyProxyFilterRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyProxyFilterRecordOperationCompleted);
            }
            this.InvokeAsync("modifyProxyFilterRecord", new object[] {
                        id,
                        editField,
                        newpvalue}, this.modifyProxyFilterRecordOperationCompleted, userState);
        }
        
        private void OnmodifyProxyFilterRecordOperationCompleted(object arg) {
            if ((this.modifyProxyFilterRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyProxyFilterRecordCompleted(this, new modifyProxyFilterRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("clientAuth")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://dnsapi.domaincontrol.com/dnsapi", ResponseNamespace="http://dnsapi.domaincontrol.com/dnsapi", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public protectedDomainResponseType getProtectedDomainInfo(string checkdomain) {
            object[] results = this.Invoke("getProtectedDomainInfo", new object[] {
                        checkdomain});
            return ((protectedDomainResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void getProtectedDomainInfoAsync(string checkdomain) {
            this.getProtectedDomainInfoAsync(checkdomain, null);
        }
        
        /// <remarks/>
        public void getProtectedDomainInfoAsync(string checkdomain, object userState) {
            if ((this.getProtectedDomainInfoOperationCompleted == null)) {
                this.getProtectedDomainInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProtectedDomainInfoOperationCompleted);
            }
            this.InvokeAsync("getProtectedDomainInfo", new object[] {
                        checkdomain}, this.getProtectedDomainInfoOperationCompleted, userState);
        }
        
        private void OngetProtectedDomainInfoOperationCompleted(object arg) {
            if ((this.getProtectedDomainInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProtectedDomainInfoCompleted(this, new getProtectedDomainInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    [System.Xml.Serialization.XmlRootAttribute("clientAuth", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
    public partial class authDataType : System.Web.Services.Protocols.SoapHeader {
        
        private string clientidField;
        
        private string tokenField;
        
        private string clientipField;
        
        /// <remarks/>
        public string clientid {
            get {
                return this.clientidField;
            }
            set {
                this.clientidField = value;
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string clientip {
            get {
                return this.clientipField;
            }
            set {
                this.clientipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class protectedDomainResponseType {
        
        private string protectedField;
        
        private string nameServersTypeField;
        
        private string nameServersField;
        
        private string zoneFileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string @protected {
            get {
                return this.protectedField;
            }
            set {
                this.protectedField = value;
            }
        }
        
        /// <remarks/>
        public string nameServersType {
            get {
                return this.nameServersTypeField;
            }
            set {
                this.nameServersTypeField = value;
            }
        }
        
        /// <remarks/>
        public string nameServers {
            get {
                return this.nameServersField;
            }
            set {
                this.nameServersField = value;
            }
        }
        
        /// <remarks/>
        public string zoneFile {
            get {
                return this.zoneFileField;
            }
            set {
                this.zoneFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxyFilterParameterArrayType {
        
        private string filterField;
        
        private string[] parametersField;
        
        /// <remarks/>
        public string filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameters")]
        public string[] parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxyFilterDataType {
        
        private int idField;
        
        private string filterField;
        
        private int siteField;
        
        private string anycastField;
        
        private string instanceField;
        
        private string zoneField;
        
        private string parameterField;
        
        private string pvalueField;
        
        private int activeField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public int site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string anycast {
            get {
                return this.anycastField;
            }
            set {
                this.anycastField = value;
            }
        }
        
        /// <remarks/>
        public string instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
            }
        }
        
        /// <remarks/>
        public string zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        public string parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public string pvalue {
            get {
                return this.pvalueField;
            }
            set {
                this.pvalueField = value;
            }
        }
        
        /// <remarks/>
        public int active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxyFilterDataResponseArrayType {
        
        private proxyFilterDataType[] proxyfiltersField;
        
        private string[] anycastlistField;
        
        private proxyFilterParameterArrayType[] parameterlistField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("proxyfilters")]
        public proxyFilterDataType[] proxyfilters {
            get {
                return this.proxyfiltersField;
            }
            set {
                this.proxyfiltersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anycastlist")]
        public string[] anycastlist {
            get {
                return this.anycastlistField;
            }
            set {
                this.anycastlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameterlist")]
        public proxyFilterParameterArrayType[] parameterlist {
            get {
                return this.parameterlistField;
            }
            set {
                this.parameterlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class proxySiteArrayType {
        
        private int siteField;
        
        private string[] serversField;
        
        /// <remarks/>
        public int site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("servers")]
        public string[] servers {
            get {
                return this.serversField;
            }
            set {
                this.serversField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class configDataType {
        
        private int idField;
        
        private string applicationField;
        
        private int siteField;
        
        private string anycastField;
        
        private string instanceField;
        
        private string classField;
        
        private string parameterField;
        
        private string pvalueField;
        
        private int activeField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public int site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string anycast {
            get {
                return this.anycastField;
            }
            set {
                this.anycastField = value;
            }
        }
        
        /// <remarks/>
        public string instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public string parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public string pvalue {
            get {
                return this.pvalueField;
            }
            set {
                this.pvalueField = value;
            }
        }
        
        /// <remarks/>
        public int active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class configDataResponseArrayType {
        
        private configDataType[] proxyconfigField;
        
        private string[] anycastlistField;
        
        private string[] parameterlistField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("proxyconfig")]
        public configDataType[] proxyconfig {
            get {
                return this.proxyconfigField;
            }
            set {
                this.proxyconfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anycastlist")]
        public string[] anycastlist {
            get {
                return this.anycastlistField;
            }
            set {
                this.anycastlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameterlist")]
        public string[] parameterlist {
            get {
                return this.parameterlistField;
            }
            set {
                this.parameterlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneHealthCheckResponseType {
        
        private string domainField;
        
        private string accountUidField;
        
        private string[] nameServersField;
        
        private string problemDetectedField;
        
        private string recommendedFixField;
        
        private string fixPerformedField;
        
        private int flagsField;
        
        private string[] errorsField;
        
        private string[] debugField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string accountUid {
            get {
                return this.accountUidField;
            }
            set {
                this.accountUidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameServers")]
        public string[] nameServers {
            get {
                return this.nameServersField;
            }
            set {
                this.nameServersField = value;
            }
        }
        
        /// <remarks/>
        public string problemDetected {
            get {
                return this.problemDetectedField;
            }
            set {
                this.problemDetectedField = value;
            }
        }
        
        /// <remarks/>
        public string recommendedFix {
            get {
                return this.recommendedFixField;
            }
            set {
                this.recommendedFixField = value;
            }
        }
        
        /// <remarks/>
        public string fixPerformed {
            get {
                return this.fixPerformedField;
            }
            set {
                this.fixPerformedField = value;
            }
        }
        
        /// <remarks/>
        public int flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errors")]
        public string[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("debug")]
        public string[] debug {
            get {
                return this.debugField;
            }
            set {
                this.debugField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class zoneType {
        
        private string domainField;
        
        private string accountuidField;
        
        private string sourcetypeField;
        
        private string statusField;
        
        private rrecordType[] rrecordsField;
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string accountuid {
            get {
                return this.accountuidField;
            }
            set {
                this.accountuidField = value;
            }
        }
        
        /// <remarks/>
        public string sourcetype {
            get {
                return this.sourcetypeField;
            }
            set {
                this.sourcetypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("rrecord", IsNullable=false)]
        public rrecordType[] rrecords {
            get {
                return this.rrecordsField;
            }
            set {
                this.rrecordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class rrecordType {
        
        private string typeField;
        
        private string attributeUidField;
        
        private string nameField;
        
        private string nameUidField;
        
        private string dataField;
        
        private string dataUidField;
        
        private string serviceField;
        
        private string serviceUidField;
        
        private string protocolField;
        
        private string protocolUidField;
        
        private int portField;
        
        private bool portFieldSpecified;
        
        private string portUidField;
        
        private int weightField;
        
        private bool weightFieldSpecified;
        
        private string weightUidField;
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private string priorityUidField;
        
        private int ttlField;
        
        private bool ttlFieldSpecified;
        
        private string ttlUidField;
        
        private string statusField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string attributeUid {
            get {
                return this.attributeUidField;
            }
            set {
                this.attributeUidField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string nameUid {
            get {
                return this.nameUidField;
            }
            set {
                this.nameUidField = value;
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string dataUid {
            get {
                return this.dataUidField;
            }
            set {
                this.dataUidField = value;
            }
        }
        
        /// <remarks/>
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public string serviceUid {
            get {
                return this.serviceUidField;
            }
            set {
                this.serviceUidField = value;
            }
        }
        
        /// <remarks/>
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public string protocolUid {
            get {
                return this.protocolUidField;
            }
            set {
                this.protocolUidField = value;
            }
        }
        
        /// <remarks/>
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool portSpecified {
            get {
                return this.portFieldSpecified;
            }
            set {
                this.portFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string portUid {
            get {
                return this.portUidField;
            }
            set {
                this.portUidField = value;
            }
        }
        
        /// <remarks/>
        public int weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weightSpecified {
            get {
                return this.weightFieldSpecified;
            }
            set {
                this.weightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string weightUid {
            get {
                return this.weightUidField;
            }
            set {
                this.weightUidField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string priorityUid {
            get {
                return this.priorityUidField;
            }
            set {
                this.priorityUidField = value;
            }
        }
        
        /// <remarks/>
        public int ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ttlSpecified {
            get {
                return this.ttlFieldSpecified;
            }
            set {
                this.ttlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ttlUid {
            get {
                return this.ttlUidField;
            }
            set {
                this.ttlUidField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class soaType {
        
        private string originField;
        
        private int ttlField;
        
        private string nsField;
        
        private string mboxField;
        
        private int serialField;
        
        private int refreshField;
        
        private int retryField;
        
        private int expireField;
        
        private int minimumField;
        
        /// <remarks/>
        public string origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public int ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <remarks/>
        public string ns {
            get {
                return this.nsField;
            }
            set {
                this.nsField = value;
            }
        }
        
        /// <remarks/>
        public string mbox {
            get {
                return this.mboxField;
            }
            set {
                this.mboxField = value;
            }
        }
        
        /// <remarks/>
        public int serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public int refresh {
            get {
                return this.refreshField;
            }
            set {
                this.refreshField = value;
            }
        }
        
        /// <remarks/>
        public int retry {
            get {
                return this.retryField;
            }
            set {
                this.retryField = value;
            }
        }
        
        /// <remarks/>
        public int expire {
            get {
                return this.expireField;
            }
            set {
                this.expireField = value;
            }
        }
        
        /// <remarks/>
        public int minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class responseinfoType {
        
        private int infocodeField;
        
        private bool infocodeFieldSpecified;
        
        private string[] infoField;
        
        /// <remarks/>
        public int infocode {
            get {
                return this.infocodeField;
            }
            set {
                this.infocodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool infocodeSpecified {
            get {
                return this.infocodeFieldSpecified;
            }
            set {
                this.infocodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("info")]
        public string[] info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    public partial class booleanResponseType {
        
        private bool resultField;
        
        private int errorcodeField;
        
        private bool errorcodeFieldSpecified;
        
        private string errortextField;
        
        private responseinfoType[] responseinfoField;
        
        /// <remarks/>
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                this.errorcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorcodeSpecified {
            get {
                return this.errorcodeFieldSpecified;
            }
            set {
                this.errorcodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string errortext {
            get {
                return this.errortextField;
            }
            set {
                this.errortextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("responseinfo")]
        public responseinfoType[] responseinfo {
            get {
                return this.responseinfoField;
            }
            set {
                this.responseinfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dnsapi.domaincontrol.com/dnsapi")]
    [System.Xml.Serialization.XmlRootAttribute("custInfo", Namespace="http://dnsapi.domaincontrol.com/dnsapi", IsNullable=false)]
    public partial class custDataType : System.Web.Services.Protocols.SoapHeader {
        
        private string shopperidField;
        
        private int reselleridField;
        
        private string originField;
        
        private string enduseripField;
        
        private int offsiteField;
        
        private bool offsiteFieldSpecified;
        
        /// <remarks/>
        public string shopperid {
            get {
                return this.shopperidField;
            }
            set {
                this.shopperidField = value;
            }
        }
        
        /// <remarks/>
        public int resellerid {
            get {
                return this.reselleridField;
            }
            set {
                this.reselleridField = value;
            }
        }
        
        /// <remarks/>
        public string origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public string enduserip {
            get {
                return this.enduseripField;
            }
            set {
                this.enduseripField = value;
            }
        }
        
        /// <remarks/>
        public int offsite {
            get {
                return this.offsiteField;
            }
            set {
                this.offsiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsiteSpecified {
            get {
                return this.offsiteFieldSpecified;
            }
            set {
                this.offsiteFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void returnTimeCompletedEventHandler(object sender, returnTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void echoAuthCompletedEventHandler(object sender, echoAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class echoAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal echoAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public authDataType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authDataType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void echoCustCompletedEventHandler(object sender, echoCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class echoCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal echoCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public custDataType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((custDataType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMXRecordsCompletedEventHandler(object sender, getMXRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMXRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMXRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNSRecordsCompletedEventHandler(object sender, getNSRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNSRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNSRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSRVRecordsCompletedEventHandler(object sender, getSRVRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSRVRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSRVRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRRecordsCompletedEventHandler(object sender, getRRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rrecordType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rrecordType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setMXRecordsCompletedEventHandler(object sender, setMXRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMXRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMXRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createRecordsCompletedEventHandler(object sender, createRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyRecordsCompletedEventHandler(object sender, modifyRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteRecordsCompletedEventHandler(object sender, deleteRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public booleanResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((booleanResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSOACompletedEventHandler(object sender, getSOACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSOACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSOACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public soaType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((soaType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNameServersCompletedEventHandler(object sender, getNameServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBindFileCompletedEventHandler(object sender, getBindFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBindFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBindFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getZoneCompletedEventHandler(object sender, getZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void fixZoneOwnershipCompletedEventHandler(object sender, fixZoneOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fixZoneOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fixZoneOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createDefaultZoneCompletedEventHandler(object sender, createDefaultZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDefaultZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDefaultZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void zoneHealthCheckCompletedEventHandler(object sender, zoneHealthCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zoneHealthCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zoneHealthCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public zoneHealthCheckResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((zoneHealthCheckResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void refreshZoneCompletedEventHandler(object sender, refreshZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refreshZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refreshZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getForwardingDataCompletedEventHandler(object sender, getForwardingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForwardingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForwardingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProxyConfigCompletedEventHandler(object sender, getProxyConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public configDataResponseArrayType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((configDataResponseArrayType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProxyInstancesCompletedEventHandler(object sender, getProxyInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public proxySiteArrayType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((proxySiteArrayType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveNewProxyConfigRecordCompletedEventHandler(object sender, saveNewProxyConfigRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveNewProxyConfigRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveNewProxyConfigRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeProxyConfigRecordCompletedEventHandler(object sender, removeProxyConfigRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeProxyConfigRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeProxyConfigRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyProxyConfigRecordCompletedEventHandler(object sender, modifyProxyConfigRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyProxyConfigRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyProxyConfigRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProxyFiltersCompletedEventHandler(object sender, getProxyFiltersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProxyFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProxyFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public proxyFilterDataResponseArrayType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((proxyFilterDataResponseArrayType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveNewProxyFilterRecordCompletedEventHandler(object sender, saveNewProxyFilterRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveNewProxyFilterRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveNewProxyFilterRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeProxyFilterRecordCompletedEventHandler(object sender, removeProxyFilterRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeProxyFilterRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeProxyFilterRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void modifyProxyFilterRecordCompletedEventHandler(object sender, modifyProxyFilterRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyProxyFilterRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyProxyFilterRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProtectedDomainInfoCompletedEventHandler(object sender, getProtectedDomainInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProtectedDomainInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProtectedDomainInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public protectedDomainResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((protectedDomainResponseType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591