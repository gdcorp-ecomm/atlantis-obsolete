//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.GetSurveyTakenInfo.Impl.SurveyWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PQCWSSoap", Namespace="http://tempuri.org/")]
    public partial class PQCWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSurveyQuestionAnswerXmlBySurveyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitSurveyAnswerXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnSurveyTakenInfobySurveyIDAndShopperIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PQCWS() {
            this.Url = global::Atlantis.Framework.GetSurveyTakenInfo.Impl.Properties.Settings.Default.Atlantis_Framework_GetSurveryTakenInfo_Impl_SurveyWS_PQCWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSurveyQuestionAnswerXmlBySurveyIDCompletedEventHandler GetSurveyQuestionAnswerXmlBySurveyIDCompleted;
        
        /// <remarks/>
        public event SubmitSurveyAnswerXmlCompletedEventHandler SubmitSurveyAnswerXmlCompleted;
        
        /// <remarks/>
        public event ReturnSurveyTakenInfobySurveyIDAndShopperIDCompletedEventHandler ReturnSurveyTakenInfobySurveyIDAndShopperIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSurveyQuestionAnswerXmlBySurveyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSurveyQuestionAnswerXmlBySurveyID(int surveyID) {
            object[] results = this.Invoke("GetSurveyQuestionAnswerXmlBySurveyID", new object[] {
                        surveyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurveyQuestionAnswerXmlBySurveyIDAsync(int surveyID) {
            this.GetSurveyQuestionAnswerXmlBySurveyIDAsync(surveyID, null);
        }
        
        /// <remarks/>
        public void GetSurveyQuestionAnswerXmlBySurveyIDAsync(int surveyID, object userState) {
            if ((this.GetSurveyQuestionAnswerXmlBySurveyIDOperationCompleted == null)) {
                this.GetSurveyQuestionAnswerXmlBySurveyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurveyQuestionAnswerXmlBySurveyIDOperationCompleted);
            }
            this.InvokeAsync("GetSurveyQuestionAnswerXmlBySurveyID", new object[] {
                        surveyID}, this.GetSurveyQuestionAnswerXmlBySurveyIDOperationCompleted, userState);
        }
        
        private void OnGetSurveyQuestionAnswerXmlBySurveyIDOperationCompleted(object arg) {
            if ((this.GetSurveyQuestionAnswerXmlBySurveyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurveyQuestionAnswerXmlBySurveyIDCompleted(this, new GetSurveyQuestionAnswerXmlBySurveyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitSurveyAnswerXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitSurveyAnswerXml(string xmlSurveyAnswers) {
            object[] results = this.Invoke("SubmitSurveyAnswerXml", new object[] {
                        xmlSurveyAnswers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitSurveyAnswerXmlAsync(string xmlSurveyAnswers) {
            this.SubmitSurveyAnswerXmlAsync(xmlSurveyAnswers, null);
        }
        
        /// <remarks/>
        public void SubmitSurveyAnswerXmlAsync(string xmlSurveyAnswers, object userState) {
            if ((this.SubmitSurveyAnswerXmlOperationCompleted == null)) {
                this.SubmitSurveyAnswerXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitSurveyAnswerXmlOperationCompleted);
            }
            this.InvokeAsync("SubmitSurveyAnswerXml", new object[] {
                        xmlSurveyAnswers}, this.SubmitSurveyAnswerXmlOperationCompleted, userState);
        }
        
        private void OnSubmitSurveyAnswerXmlOperationCompleted(object arg) {
            if ((this.SubmitSurveyAnswerXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitSurveyAnswerXmlCompleted(this, new SubmitSurveyAnswerXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnSurveyTakenInfobySurveyIDAndShopperID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReturnSurveyTakenInfobySurveyIDAndShopperID(int SurveyID, string ShopperID) {
            object[] results = this.Invoke("ReturnSurveyTakenInfobySurveyIDAndShopperID", new object[] {
                        SurveyID,
                        ShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnSurveyTakenInfobySurveyIDAndShopperIDAsync(int SurveyID, string ShopperID) {
            this.ReturnSurveyTakenInfobySurveyIDAndShopperIDAsync(SurveyID, ShopperID, null);
        }
        
        /// <remarks/>
        public void ReturnSurveyTakenInfobySurveyIDAndShopperIDAsync(int SurveyID, string ShopperID, object userState) {
            if ((this.ReturnSurveyTakenInfobySurveyIDAndShopperIDOperationCompleted == null)) {
                this.ReturnSurveyTakenInfobySurveyIDAndShopperIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnSurveyTakenInfobySurveyIDAndShopperIDOperationCompleted);
            }
            this.InvokeAsync("ReturnSurveyTakenInfobySurveyIDAndShopperID", new object[] {
                        SurveyID,
                        ShopperID}, this.ReturnSurveyTakenInfobySurveyIDAndShopperIDOperationCompleted, userState);
        }
        
        private void OnReturnSurveyTakenInfobySurveyIDAndShopperIDOperationCompleted(object arg) {
            if ((this.ReturnSurveyTakenInfobySurveyIDAndShopperIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnSurveyTakenInfobySurveyIDAndShopperIDCompleted(this, new ReturnSurveyTakenInfobySurveyIDAndShopperIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSurveyQuestionAnswerXmlBySurveyIDCompletedEventHandler(object sender, GetSurveyQuestionAnswerXmlBySurveyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurveyQuestionAnswerXmlBySurveyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurveyQuestionAnswerXmlBySurveyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubmitSurveyAnswerXmlCompletedEventHandler(object sender, SubmitSurveyAnswerXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitSurveyAnswerXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitSurveyAnswerXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnSurveyTakenInfobySurveyIDAndShopperIDCompletedEventHandler(object sender, ReturnSurveyTakenInfobySurveyIDAndShopperIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnSurveyTakenInfobySurveyIDAndShopperIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnSurveyTakenInfobySurveyIDAndShopperIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591