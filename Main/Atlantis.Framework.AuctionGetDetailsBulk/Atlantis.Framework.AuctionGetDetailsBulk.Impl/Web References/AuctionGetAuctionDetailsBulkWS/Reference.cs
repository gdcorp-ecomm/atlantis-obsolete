//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.AuctionGetDetailsBulk.Impl.AuctionGetAuctionDetailsBulkWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="trpMemberItemServiceSoap", Namespace="trpMemberItemService")]
    public partial class trpMemberItemService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ItemNeedsToBeEscrowedOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAskPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAuctionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWebsiteIncludedFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAppraisalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditReservePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMemberItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMemberItemByDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMemberItemByDomainNameCPOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMemberItemByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkAuctionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindItemByDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindItemBidIDWFOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindActiveListingByDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainSalesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionListingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindExpiredNameByDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuctionBulkLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuctionBulkLoad1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AuctionBulkUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelAuctionBySourceSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppraisalLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppraisalByDomainNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppraisalsByShopperIDAndAppraisalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppraisalsByShopperIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppraisalsByAppraisalXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAuctionEndTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExpiredDomainNamesLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForceStratosphereCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPremiumAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBackorderOperationCompleted;
        
        private System.Threading.SendOrPostCallback StuffExpiredDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreLeadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRemoveWatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuctionDetailsBulkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public trpMemberItemService() {
            this.Url = global::Atlantis.Framework.AuctionGetDetailsBulk.Impl.Properties.Settings.Default.Atlantis_Framework_AuctionGetDetailsBulk_Impl_AuctionGetAuctionDetailsBulkWS_trpMemberItemService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ItemNeedsToBeEscrowedCompletedEventHandler ItemNeedsToBeEscrowedCompleted;
        
        /// <remarks/>
        public event EditAskPriceCompletedEventHandler EditAskPriceCompleted;
        
        /// <remarks/>
        public event EditAuctionTypeCompletedEventHandler EditAuctionTypeCompleted;
        
        /// <remarks/>
        public event EditWebsiteIncludedFlagCompletedEventHandler EditWebsiteIncludedFlagCompleted;
        
        /// <remarks/>
        public event EditAppraisalIDCompletedEventHandler EditAppraisalIDCompleted;
        
        /// <remarks/>
        public event EditReservePriceCompletedEventHandler EditReservePriceCompleted;
        
        /// <remarks/>
        public event CancelMemberItemCompletedEventHandler CancelMemberItemCompleted;
        
        /// <remarks/>
        public event CancelMemberItemByDomainNameCompletedEventHandler CancelMemberItemByDomainNameCompleted;
        
        /// <remarks/>
        public event CancelMemberItemByDomainNameCPCompletedEventHandler CancelMemberItemByDomainNameCPCompleted;
        
        /// <remarks/>
        public event CancelMemberItemByIDCompletedEventHandler CancelMemberItemByIDCompleted;
        
        /// <remarks/>
        public event BulkAuctionStatusCompletedEventHandler BulkAuctionStatusCompleted;
        
        /// <remarks/>
        public event FindItemByDomainNameCompletedEventHandler FindItemByDomainNameCompleted;
        
        /// <remarks/>
        public event FindItemBidIDWFCompletedEventHandler FindItemBidIDWFCompleted;
        
        /// <remarks/>
        public event FindActiveListingByDomainNameCompletedEventHandler FindActiveListingByDomainNameCompleted;
        
        /// <remarks/>
        public event GetDomainSalesInfoCompletedEventHandler GetDomainSalesInfoCompleted;
        
        /// <remarks/>
        public event GetAuctionListingCompletedEventHandler GetAuctionListingCompleted;
        
        /// <remarks/>
        public event FindExpiredNameByDomainNameCompletedEventHandler FindExpiredNameByDomainNameCompleted;
        
        /// <remarks/>
        public event AuctionBulkLoadCompletedEventHandler AuctionBulkLoadCompleted;
        
        /// <remarks/>
        public event AuctionBulkLoad1CompletedEventHandler AuctionBulkLoad1Completed;
        
        /// <remarks/>
        public event AuctionBulkUpdateCompletedEventHandler AuctionBulkUpdateCompleted;
        
        /// <remarks/>
        public event CancelAuctionBySourceSystemCompletedEventHandler CancelAuctionBySourceSystemCompleted;
        
        /// <remarks/>
        public event GetAppraisalLocationCompletedEventHandler GetAppraisalLocationCompleted;
        
        /// <remarks/>
        public event GetAppraisalByDomainNameCompletedEventHandler GetAppraisalByDomainNameCompleted;
        
        /// <remarks/>
        public event GetAppraisalsByShopperIDAndAppraisalIDCompletedEventHandler GetAppraisalsByShopperIDAndAppraisalIDCompleted;
        
        /// <remarks/>
        public event GetAppraisalsByShopperIDCompletedEventHandler GetAppraisalsByShopperIDCompleted;
        
        /// <remarks/>
        public event GetAppraisalsByAppraisalXMLCompletedEventHandler GetAppraisalsByAppraisalXMLCompleted;
        
        /// <remarks/>
        public event UpdateAuctionEndTimeCompletedEventHandler UpdateAuctionEndTimeCompleted;
        
        /// <remarks/>
        public event ExpiredDomainNamesLoadCompletedEventHandler ExpiredDomainNamesLoadCompleted;
        
        /// <remarks/>
        public event ForceStratosphereCallCompletedEventHandler ForceStratosphereCallCompleted;
        
        /// <remarks/>
        public event GetPremiumAppraisalCompletedEventHandler GetPremiumAppraisalCompleted;
        
        /// <remarks/>
        public event PlaceBackorderCompletedEventHandler PlaceBackorderCompleted;
        
        /// <remarks/>
        public event StuffExpiredDomainsCompletedEventHandler StuffExpiredDomainsCompleted;
        
        /// <remarks/>
        public event StoreLeadDataCompletedEventHandler StoreLeadDataCompleted;
        
        /// <remarks/>
        public event AddRemoveWatchCompletedEventHandler AddRemoveWatchCompleted;
        
        /// <remarks/>
        public event GetAuctionDetailsCompletedEventHandler GetAuctionDetailsCompleted;
        
        /// <remarks/>
        public event GetAuctionDetailsBulkCompletedEventHandler GetAuctionDetailsBulkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/ItemNeedsToBeEscrowed", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ItemNeedsToBeEscrowed(string sInputString) {
            object[] results = this.Invoke("ItemNeedsToBeEscrowed", new object[] {
                        sInputString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ItemNeedsToBeEscrowedAsync(string sInputString) {
            this.ItemNeedsToBeEscrowedAsync(sInputString, null);
        }
        
        /// <remarks/>
        public void ItemNeedsToBeEscrowedAsync(string sInputString, object userState) {
            if ((this.ItemNeedsToBeEscrowedOperationCompleted == null)) {
                this.ItemNeedsToBeEscrowedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemNeedsToBeEscrowedOperationCompleted);
            }
            this.InvokeAsync("ItemNeedsToBeEscrowed", new object[] {
                        sInputString}, this.ItemNeedsToBeEscrowedOperationCompleted, userState);
        }
        
        private void OnItemNeedsToBeEscrowedOperationCompleted(object arg) {
            if ((this.ItemNeedsToBeEscrowedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemNeedsToBeEscrowedCompleted(this, new ItemNeedsToBeEscrowedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/EditAskPrice", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditAskPrice(string sMemberItemID, string sAskPrice) {
            object[] results = this.Invoke("EditAskPrice", new object[] {
                        sMemberItemID,
                        sAskPrice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditAskPriceAsync(string sMemberItemID, string sAskPrice) {
            this.EditAskPriceAsync(sMemberItemID, sAskPrice, null);
        }
        
        /// <remarks/>
        public void EditAskPriceAsync(string sMemberItemID, string sAskPrice, object userState) {
            if ((this.EditAskPriceOperationCompleted == null)) {
                this.EditAskPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAskPriceOperationCompleted);
            }
            this.InvokeAsync("EditAskPrice", new object[] {
                        sMemberItemID,
                        sAskPrice}, this.EditAskPriceOperationCompleted, userState);
        }
        
        private void OnEditAskPriceOperationCompleted(object arg) {
            if ((this.EditAskPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAskPriceCompleted(this, new EditAskPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/EditAuctionType", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditAuctionType(string sMemberItemID, string sAuctionType) {
            object[] results = this.Invoke("EditAuctionType", new object[] {
                        sMemberItemID,
                        sAuctionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditAuctionTypeAsync(string sMemberItemID, string sAuctionType) {
            this.EditAuctionTypeAsync(sMemberItemID, sAuctionType, null);
        }
        
        /// <remarks/>
        public void EditAuctionTypeAsync(string sMemberItemID, string sAuctionType, object userState) {
            if ((this.EditAuctionTypeOperationCompleted == null)) {
                this.EditAuctionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAuctionTypeOperationCompleted);
            }
            this.InvokeAsync("EditAuctionType", new object[] {
                        sMemberItemID,
                        sAuctionType}, this.EditAuctionTypeOperationCompleted, userState);
        }
        
        private void OnEditAuctionTypeOperationCompleted(object arg) {
            if ((this.EditAuctionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAuctionTypeCompleted(this, new EditAuctionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/EditWebsiteIncludedFlag", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditWebsiteIncludedFlag(string sMemberItemID, string sFlag) {
            object[] results = this.Invoke("EditWebsiteIncludedFlag", new object[] {
                        sMemberItemID,
                        sFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWebsiteIncludedFlagAsync(string sMemberItemID, string sFlag) {
            this.EditWebsiteIncludedFlagAsync(sMemberItemID, sFlag, null);
        }
        
        /// <remarks/>
        public void EditWebsiteIncludedFlagAsync(string sMemberItemID, string sFlag, object userState) {
            if ((this.EditWebsiteIncludedFlagOperationCompleted == null)) {
                this.EditWebsiteIncludedFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWebsiteIncludedFlagOperationCompleted);
            }
            this.InvokeAsync("EditWebsiteIncludedFlag", new object[] {
                        sMemberItemID,
                        sFlag}, this.EditWebsiteIncludedFlagOperationCompleted, userState);
        }
        
        private void OnEditWebsiteIncludedFlagOperationCompleted(object arg) {
            if ((this.EditWebsiteIncludedFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWebsiteIncludedFlagCompleted(this, new EditWebsiteIncludedFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/EditAppraisalID", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditAppraisalID(string sMemberItemID, string sAppraisalID) {
            object[] results = this.Invoke("EditAppraisalID", new object[] {
                        sMemberItemID,
                        sAppraisalID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditAppraisalIDAsync(string sMemberItemID, string sAppraisalID) {
            this.EditAppraisalIDAsync(sMemberItemID, sAppraisalID, null);
        }
        
        /// <remarks/>
        public void EditAppraisalIDAsync(string sMemberItemID, string sAppraisalID, object userState) {
            if ((this.EditAppraisalIDOperationCompleted == null)) {
                this.EditAppraisalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAppraisalIDOperationCompleted);
            }
            this.InvokeAsync("EditAppraisalID", new object[] {
                        sMemberItemID,
                        sAppraisalID}, this.EditAppraisalIDOperationCompleted, userState);
        }
        
        private void OnEditAppraisalIDOperationCompleted(object arg) {
            if ((this.EditAppraisalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAppraisalIDCompleted(this, new EditAppraisalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/EditReservePrice", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditReservePrice(string sMemberItemID, string sReservePrice) {
            object[] results = this.Invoke("EditReservePrice", new object[] {
                        sMemberItemID,
                        sReservePrice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditReservePriceAsync(string sMemberItemID, string sReservePrice) {
            this.EditReservePriceAsync(sMemberItemID, sReservePrice, null);
        }
        
        /// <remarks/>
        public void EditReservePriceAsync(string sMemberItemID, string sReservePrice, object userState) {
            if ((this.EditReservePriceOperationCompleted == null)) {
                this.EditReservePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditReservePriceOperationCompleted);
            }
            this.InvokeAsync("EditReservePrice", new object[] {
                        sMemberItemID,
                        sReservePrice}, this.EditReservePriceOperationCompleted, userState);
        }
        
        private void OnEditReservePriceOperationCompleted(object arg) {
            if ((this.EditReservePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditReservePriceCompleted(this, new EditReservePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/CancelMemberItem", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelMemberItem(string sMemberItemID) {
            object[] results = this.Invoke("CancelMemberItem", new object[] {
                        sMemberItemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelMemberItemAsync(string sMemberItemID) {
            this.CancelMemberItemAsync(sMemberItemID, null);
        }
        
        /// <remarks/>
        public void CancelMemberItemAsync(string sMemberItemID, object userState) {
            if ((this.CancelMemberItemOperationCompleted == null)) {
                this.CancelMemberItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMemberItemOperationCompleted);
            }
            this.InvokeAsync("CancelMemberItem", new object[] {
                        sMemberItemID}, this.CancelMemberItemOperationCompleted, userState);
        }
        
        private void OnCancelMemberItemOperationCompleted(object arg) {
            if ((this.CancelMemberItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMemberItemCompleted(this, new CancelMemberItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/CancelMemberItemByDomainName", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelMemberItemByDomainName(string sDomainName, string sReasonCode) {
            object[] results = this.Invoke("CancelMemberItemByDomainName", new object[] {
                        sDomainName,
                        sReasonCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelMemberItemByDomainNameAsync(string sDomainName, string sReasonCode) {
            this.CancelMemberItemByDomainNameAsync(sDomainName, sReasonCode, null);
        }
        
        /// <remarks/>
        public void CancelMemberItemByDomainNameAsync(string sDomainName, string sReasonCode, object userState) {
            if ((this.CancelMemberItemByDomainNameOperationCompleted == null)) {
                this.CancelMemberItemByDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMemberItemByDomainNameOperationCompleted);
            }
            this.InvokeAsync("CancelMemberItemByDomainName", new object[] {
                        sDomainName,
                        sReasonCode}, this.CancelMemberItemByDomainNameOperationCompleted, userState);
        }
        
        private void OnCancelMemberItemByDomainNameOperationCompleted(object arg) {
            if ((this.CancelMemberItemByDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMemberItemByDomainNameCompleted(this, new CancelMemberItemByDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/CancelMemberItemByDomainNameCP", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelMemberItemByDomainNameCP(string sDomainName, string sShopperID, string sReasonCode) {
            object[] results = this.Invoke("CancelMemberItemByDomainNameCP", new object[] {
                        sDomainName,
                        sShopperID,
                        sReasonCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelMemberItemByDomainNameCPAsync(string sDomainName, string sShopperID, string sReasonCode) {
            this.CancelMemberItemByDomainNameCPAsync(sDomainName, sShopperID, sReasonCode, null);
        }
        
        /// <remarks/>
        public void CancelMemberItemByDomainNameCPAsync(string sDomainName, string sShopperID, string sReasonCode, object userState) {
            if ((this.CancelMemberItemByDomainNameCPOperationCompleted == null)) {
                this.CancelMemberItemByDomainNameCPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMemberItemByDomainNameCPOperationCompleted);
            }
            this.InvokeAsync("CancelMemberItemByDomainNameCP", new object[] {
                        sDomainName,
                        sShopperID,
                        sReasonCode}, this.CancelMemberItemByDomainNameCPOperationCompleted, userState);
        }
        
        private void OnCancelMemberItemByDomainNameCPOperationCompleted(object arg) {
            if ((this.CancelMemberItemByDomainNameCPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMemberItemByDomainNameCPCompleted(this, new CancelMemberItemByDomainNameCPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/CancelMemberItemByID", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelMemberItemByID(int iMemberItemID, string sReasonCode) {
            object[] results = this.Invoke("CancelMemberItemByID", new object[] {
                        iMemberItemID,
                        sReasonCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelMemberItemByIDAsync(int iMemberItemID, string sReasonCode) {
            this.CancelMemberItemByIDAsync(iMemberItemID, sReasonCode, null);
        }
        
        /// <remarks/>
        public void CancelMemberItemByIDAsync(int iMemberItemID, string sReasonCode, object userState) {
            if ((this.CancelMemberItemByIDOperationCompleted == null)) {
                this.CancelMemberItemByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMemberItemByIDOperationCompleted);
            }
            this.InvokeAsync("CancelMemberItemByID", new object[] {
                        iMemberItemID,
                        sReasonCode}, this.CancelMemberItemByIDOperationCompleted, userState);
        }
        
        private void OnCancelMemberItemByIDOperationCompleted(object arg) {
            if ((this.CancelMemberItemByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMemberItemByIDCompleted(this, new CancelMemberItemByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/BulkAuctionStatus", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BulkAuctionStatus() {
            object[] results = this.Invoke("BulkAuctionStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BulkAuctionStatusAsync() {
            this.BulkAuctionStatusAsync(null);
        }
        
        /// <remarks/>
        public void BulkAuctionStatusAsync(object userState) {
            if ((this.BulkAuctionStatusOperationCompleted == null)) {
                this.BulkAuctionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkAuctionStatusOperationCompleted);
            }
            this.InvokeAsync("BulkAuctionStatus", new object[0], this.BulkAuctionStatusOperationCompleted, userState);
        }
        
        private void OnBulkAuctionStatusOperationCompleted(object arg) {
            if ((this.BulkAuctionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkAuctionStatusCompleted(this, new BulkAuctionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/FindItemByDomainName", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindItemByDomainName(string sDomainName) {
            object[] results = this.Invoke("FindItemByDomainName", new object[] {
                        sDomainName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindItemByDomainNameAsync(string sDomainName) {
            this.FindItemByDomainNameAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void FindItemByDomainNameAsync(string sDomainName, object userState) {
            if ((this.FindItemByDomainNameOperationCompleted == null)) {
                this.FindItemByDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindItemByDomainNameOperationCompleted);
            }
            this.InvokeAsync("FindItemByDomainName", new object[] {
                        sDomainName}, this.FindItemByDomainNameOperationCompleted, userState);
        }
        
        private void OnFindItemByDomainNameOperationCompleted(object arg) {
            if ((this.FindItemByDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindItemByDomainNameCompleted(this, new FindItemByDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/FindItemBidIDWF", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindItemBidIDWF(string sBidID) {
            object[] results = this.Invoke("FindItemBidIDWF", new object[] {
                        sBidID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindItemBidIDWFAsync(string sBidID) {
            this.FindItemBidIDWFAsync(sBidID, null);
        }
        
        /// <remarks/>
        public void FindItemBidIDWFAsync(string sBidID, object userState) {
            if ((this.FindItemBidIDWFOperationCompleted == null)) {
                this.FindItemBidIDWFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindItemBidIDWFOperationCompleted);
            }
            this.InvokeAsync("FindItemBidIDWF", new object[] {
                        sBidID}, this.FindItemBidIDWFOperationCompleted, userState);
        }
        
        private void OnFindItemBidIDWFOperationCompleted(object arg) {
            if ((this.FindItemBidIDWFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindItemBidIDWFCompleted(this, new FindItemBidIDWFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/FindActiveListingByDomainName", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindActiveListingByDomainName(string sDomainName) {
            object[] results = this.Invoke("FindActiveListingByDomainName", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindActiveListingByDomainNameAsync(string sDomainName) {
            this.FindActiveListingByDomainNameAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void FindActiveListingByDomainNameAsync(string sDomainName, object userState) {
            if ((this.FindActiveListingByDomainNameOperationCompleted == null)) {
                this.FindActiveListingByDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindActiveListingByDomainNameOperationCompleted);
            }
            this.InvokeAsync("FindActiveListingByDomainName", new object[] {
                        sDomainName}, this.FindActiveListingByDomainNameOperationCompleted, userState);
        }
        
        private void OnFindActiveListingByDomainNameOperationCompleted(object arg) {
            if ((this.FindActiveListingByDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindActiveListingByDomainNameCompleted(this, new FindActiveListingByDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetDomainSalesInfo", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDomainSalesInfo(string sDomainName) {
            object[] results = this.Invoke("GetDomainSalesInfo", new object[] {
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainSalesInfoAsync(string sDomainName) {
            this.GetDomainSalesInfoAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void GetDomainSalesInfoAsync(string sDomainName, object userState) {
            if ((this.GetDomainSalesInfoOperationCompleted == null)) {
                this.GetDomainSalesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainSalesInfoOperationCompleted);
            }
            this.InvokeAsync("GetDomainSalesInfo", new object[] {
                        sDomainName}, this.GetDomainSalesInfoOperationCompleted, userState);
        }
        
        private void OnGetDomainSalesInfoOperationCompleted(object arg) {
            if ((this.GetDomainSalesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainSalesInfoCompleted(this, new GetDomainSalesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAuctionListing", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionListing(string sDomainName, string sShopperID, string sSection) {
            object[] results = this.Invoke("GetAuctionListing", new object[] {
                        sDomainName,
                        sShopperID,
                        sSection});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionListingAsync(string sDomainName, string sShopperID, string sSection) {
            this.GetAuctionListingAsync(sDomainName, sShopperID, sSection, null);
        }
        
        /// <remarks/>
        public void GetAuctionListingAsync(string sDomainName, string sShopperID, string sSection, object userState) {
            if ((this.GetAuctionListingOperationCompleted == null)) {
                this.GetAuctionListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionListingOperationCompleted);
            }
            this.InvokeAsync("GetAuctionListing", new object[] {
                        sDomainName,
                        sShopperID,
                        sSection}, this.GetAuctionListingOperationCompleted, userState);
        }
        
        private void OnGetAuctionListingOperationCompleted(object arg) {
            if ((this.GetAuctionListingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionListingCompleted(this, new GetAuctionListingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/FindExpiredNameByDomainName", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindExpiredNameByDomainName(string sDomainName) {
            object[] results = this.Invoke("FindExpiredNameByDomainName", new object[] {
                        sDomainName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindExpiredNameByDomainNameAsync(string sDomainName) {
            this.FindExpiredNameByDomainNameAsync(sDomainName, null);
        }
        
        /// <remarks/>
        public void FindExpiredNameByDomainNameAsync(string sDomainName, object userState) {
            if ((this.FindExpiredNameByDomainNameOperationCompleted == null)) {
                this.FindExpiredNameByDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindExpiredNameByDomainNameOperationCompleted);
            }
            this.InvokeAsync("FindExpiredNameByDomainName", new object[] {
                        sDomainName}, this.FindExpiredNameByDomainNameOperationCompleted, userState);
        }
        
        private void OnFindExpiredNameByDomainNameOperationCompleted(object arg) {
            if ((this.FindExpiredNameByDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindExpiredNameByDomainNameCompleted(this, new FindExpiredNameByDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/AuctionBulkLoad", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuctionBulkLoad(int sourceSystemID, string shopperID, string trpXML) {
            object[] results = this.Invoke("AuctionBulkLoad", new object[] {
                        sourceSystemID,
                        shopperID,
                        trpXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuctionBulkLoadAsync(int sourceSystemID, string shopperID, string trpXML) {
            this.AuctionBulkLoadAsync(sourceSystemID, shopperID, trpXML, null);
        }
        
        /// <remarks/>
        public void AuctionBulkLoadAsync(int sourceSystemID, string shopperID, string trpXML, object userState) {
            if ((this.AuctionBulkLoadOperationCompleted == null)) {
                this.AuctionBulkLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuctionBulkLoadOperationCompleted);
            }
            this.InvokeAsync("AuctionBulkLoad", new object[] {
                        sourceSystemID,
                        shopperID,
                        trpXML}, this.AuctionBulkLoadOperationCompleted, userState);
        }
        
        private void OnAuctionBulkLoadOperationCompleted(object arg) {
            if ((this.AuctionBulkLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuctionBulkLoadCompleted(this, new AuctionBulkLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/AuctionBulkLoad1", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuctionBulkLoad1(int sourceSystemID, string shopperID, string trpXML) {
            object[] results = this.Invoke("AuctionBulkLoad1", new object[] {
                        sourceSystemID,
                        shopperID,
                        trpXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuctionBulkLoad1Async(int sourceSystemID, string shopperID, string trpXML) {
            this.AuctionBulkLoad1Async(sourceSystemID, shopperID, trpXML, null);
        }
        
        /// <remarks/>
        public void AuctionBulkLoad1Async(int sourceSystemID, string shopperID, string trpXML, object userState) {
            if ((this.AuctionBulkLoad1OperationCompleted == null)) {
                this.AuctionBulkLoad1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuctionBulkLoad1OperationCompleted);
            }
            this.InvokeAsync("AuctionBulkLoad1", new object[] {
                        sourceSystemID,
                        shopperID,
                        trpXML}, this.AuctionBulkLoad1OperationCompleted, userState);
        }
        
        private void OnAuctionBulkLoad1OperationCompleted(object arg) {
            if ((this.AuctionBulkLoad1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuctionBulkLoad1Completed(this, new AuctionBulkLoad1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/AuctionBulkUpdate", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuctionBulkUpdate(int sourceSystemID, string shopperID, string trpXML) {
            object[] results = this.Invoke("AuctionBulkUpdate", new object[] {
                        sourceSystemID,
                        shopperID,
                        trpXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuctionBulkUpdateAsync(int sourceSystemID, string shopperID, string trpXML) {
            this.AuctionBulkUpdateAsync(sourceSystemID, shopperID, trpXML, null);
        }
        
        /// <remarks/>
        public void AuctionBulkUpdateAsync(int sourceSystemID, string shopperID, string trpXML, object userState) {
            if ((this.AuctionBulkUpdateOperationCompleted == null)) {
                this.AuctionBulkUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuctionBulkUpdateOperationCompleted);
            }
            this.InvokeAsync("AuctionBulkUpdate", new object[] {
                        sourceSystemID,
                        shopperID,
                        trpXML}, this.AuctionBulkUpdateOperationCompleted, userState);
        }
        
        private void OnAuctionBulkUpdateOperationCompleted(object arg) {
            if ((this.AuctionBulkUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuctionBulkUpdateCompleted(this, new AuctionBulkUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/CancelAuctionBySourceSystem", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelAuctionBySourceSystem(int sourceSystemID, string sDomainName, string sReasonCode) {
            object[] results = this.Invoke("CancelAuctionBySourceSystem", new object[] {
                        sourceSystemID,
                        sDomainName,
                        sReasonCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelAuctionBySourceSystemAsync(int sourceSystemID, string sDomainName, string sReasonCode) {
            this.CancelAuctionBySourceSystemAsync(sourceSystemID, sDomainName, sReasonCode, null);
        }
        
        /// <remarks/>
        public void CancelAuctionBySourceSystemAsync(int sourceSystemID, string sDomainName, string sReasonCode, object userState) {
            if ((this.CancelAuctionBySourceSystemOperationCompleted == null)) {
                this.CancelAuctionBySourceSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelAuctionBySourceSystemOperationCompleted);
            }
            this.InvokeAsync("CancelAuctionBySourceSystem", new object[] {
                        sourceSystemID,
                        sDomainName,
                        sReasonCode}, this.CancelAuctionBySourceSystemOperationCompleted, userState);
        }
        
        private void OnCancelAuctionBySourceSystemOperationCompleted(object arg) {
            if ((this.CancelAuctionBySourceSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelAuctionBySourceSystemCompleted(this, new CancelAuctionBySourceSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAppraisalLocation", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppraisalLocation(string sDomainName, string sShopper) {
            object[] results = this.Invoke("GetAppraisalLocation", new object[] {
                        sDomainName,
                        sShopper});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppraisalLocationAsync(string sDomainName, string sShopper) {
            this.GetAppraisalLocationAsync(sDomainName, sShopper, null);
        }
        
        /// <remarks/>
        public void GetAppraisalLocationAsync(string sDomainName, string sShopper, object userState) {
            if ((this.GetAppraisalLocationOperationCompleted == null)) {
                this.GetAppraisalLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppraisalLocationOperationCompleted);
            }
            this.InvokeAsync("GetAppraisalLocation", new object[] {
                        sDomainName,
                        sShopper}, this.GetAppraisalLocationOperationCompleted, userState);
        }
        
        private void OnGetAppraisalLocationOperationCompleted(object arg) {
            if ((this.GetAppraisalLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppraisalLocationCompleted(this, new GetAppraisalLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAppraisalByDomainName", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppraisalByDomainName(string ShopperID, string DomainName) {
            object[] results = this.Invoke("GetAppraisalByDomainName", new object[] {
                        ShopperID,
                        DomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppraisalByDomainNameAsync(string ShopperID, string DomainName) {
            this.GetAppraisalByDomainNameAsync(ShopperID, DomainName, null);
        }
        
        /// <remarks/>
        public void GetAppraisalByDomainNameAsync(string ShopperID, string DomainName, object userState) {
            if ((this.GetAppraisalByDomainNameOperationCompleted == null)) {
                this.GetAppraisalByDomainNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppraisalByDomainNameOperationCompleted);
            }
            this.InvokeAsync("GetAppraisalByDomainName", new object[] {
                        ShopperID,
                        DomainName}, this.GetAppraisalByDomainNameOperationCompleted, userState);
        }
        
        private void OnGetAppraisalByDomainNameOperationCompleted(object arg) {
            if ((this.GetAppraisalByDomainNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppraisalByDomainNameCompleted(this, new GetAppraisalByDomainNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAppraisalsByShopperIDAndAppraisalID", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppraisalsByShopperIDAndAppraisalID(string ShopperID, int PageNumber, int RowsPerPage, string SortColumn, string SortDirection, string AppraisalId) {
            object[] results = this.Invoke("GetAppraisalsByShopperIDAndAppraisalID", new object[] {
                        ShopperID,
                        PageNumber,
                        RowsPerPage,
                        SortColumn,
                        SortDirection,
                        AppraisalId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppraisalsByShopperIDAndAppraisalIDAsync(string ShopperID, int PageNumber, int RowsPerPage, string SortColumn, string SortDirection, string AppraisalId) {
            this.GetAppraisalsByShopperIDAndAppraisalIDAsync(ShopperID, PageNumber, RowsPerPage, SortColumn, SortDirection, AppraisalId, null);
        }
        
        /// <remarks/>
        public void GetAppraisalsByShopperIDAndAppraisalIDAsync(string ShopperID, int PageNumber, int RowsPerPage, string SortColumn, string SortDirection, string AppraisalId, object userState) {
            if ((this.GetAppraisalsByShopperIDAndAppraisalIDOperationCompleted == null)) {
                this.GetAppraisalsByShopperIDAndAppraisalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppraisalsByShopperIDAndAppraisalIDOperationCompleted);
            }
            this.InvokeAsync("GetAppraisalsByShopperIDAndAppraisalID", new object[] {
                        ShopperID,
                        PageNumber,
                        RowsPerPage,
                        SortColumn,
                        SortDirection,
                        AppraisalId}, this.GetAppraisalsByShopperIDAndAppraisalIDOperationCompleted, userState);
        }
        
        private void OnGetAppraisalsByShopperIDAndAppraisalIDOperationCompleted(object arg) {
            if ((this.GetAppraisalsByShopperIDAndAppraisalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppraisalsByShopperIDAndAppraisalIDCompleted(this, new GetAppraisalsByShopperIDAndAppraisalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAppraisalsByShopperID", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppraisalsByShopperID(string ShopperID, int PageNumber, int RowsPerPage, string SortColumn, string SortDirection, bool ReturnAllFlags, string AppraisalId) {
            object[] results = this.Invoke("GetAppraisalsByShopperID", new object[] {
                        ShopperID,
                        PageNumber,
                        RowsPerPage,
                        SortColumn,
                        SortDirection,
                        ReturnAllFlags,
                        AppraisalId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppraisalsByShopperIDAsync(string ShopperID, int PageNumber, int RowsPerPage, string SortColumn, string SortDirection, bool ReturnAllFlags, string AppraisalId) {
            this.GetAppraisalsByShopperIDAsync(ShopperID, PageNumber, RowsPerPage, SortColumn, SortDirection, ReturnAllFlags, AppraisalId, null);
        }
        
        /// <remarks/>
        public void GetAppraisalsByShopperIDAsync(string ShopperID, int PageNumber, int RowsPerPage, string SortColumn, string SortDirection, bool ReturnAllFlags, string AppraisalId, object userState) {
            if ((this.GetAppraisalsByShopperIDOperationCompleted == null)) {
                this.GetAppraisalsByShopperIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppraisalsByShopperIDOperationCompleted);
            }
            this.InvokeAsync("GetAppraisalsByShopperID", new object[] {
                        ShopperID,
                        PageNumber,
                        RowsPerPage,
                        SortColumn,
                        SortDirection,
                        ReturnAllFlags,
                        AppraisalId}, this.GetAppraisalsByShopperIDOperationCompleted, userState);
        }
        
        private void OnGetAppraisalsByShopperIDOperationCompleted(object arg) {
            if ((this.GetAppraisalsByShopperIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppraisalsByShopperIDCompleted(this, new GetAppraisalsByShopperIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAppraisalsByAppraisalXML", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppraisalsByAppraisalXML(string ShopperID, string AppraisalXML) {
            object[] results = this.Invoke("GetAppraisalsByAppraisalXML", new object[] {
                        ShopperID,
                        AppraisalXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppraisalsByAppraisalXMLAsync(string ShopperID, string AppraisalXML) {
            this.GetAppraisalsByAppraisalXMLAsync(ShopperID, AppraisalXML, null);
        }
        
        /// <remarks/>
        public void GetAppraisalsByAppraisalXMLAsync(string ShopperID, string AppraisalXML, object userState) {
            if ((this.GetAppraisalsByAppraisalXMLOperationCompleted == null)) {
                this.GetAppraisalsByAppraisalXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppraisalsByAppraisalXMLOperationCompleted);
            }
            this.InvokeAsync("GetAppraisalsByAppraisalXML", new object[] {
                        ShopperID,
                        AppraisalXML}, this.GetAppraisalsByAppraisalXMLOperationCompleted, userState);
        }
        
        private void OnGetAppraisalsByAppraisalXMLOperationCompleted(object arg) {
            if ((this.GetAppraisalsByAppraisalXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppraisalsByAppraisalXMLCompleted(this, new GetAppraisalsByAppraisalXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/UpdateAuctionEndTime", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAuctionEndTime(int iAuctionID) {
            object[] results = this.Invoke("UpdateAuctionEndTime", new object[] {
                        iAuctionID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAuctionEndTimeAsync(int iAuctionID) {
            this.UpdateAuctionEndTimeAsync(iAuctionID, null);
        }
        
        /// <remarks/>
        public void UpdateAuctionEndTimeAsync(int iAuctionID, object userState) {
            if ((this.UpdateAuctionEndTimeOperationCompleted == null)) {
                this.UpdateAuctionEndTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAuctionEndTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateAuctionEndTime", new object[] {
                        iAuctionID}, this.UpdateAuctionEndTimeOperationCompleted, userState);
        }
        
        private void OnUpdateAuctionEndTimeOperationCompleted(object arg) {
            if ((this.UpdateAuctionEndTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAuctionEndTimeCompleted(this, new UpdateAuctionEndTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/ExpiredDomainNamesLoad", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExpiredDomainNamesLoad() {
            object[] results = this.Invoke("ExpiredDomainNamesLoad", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExpiredDomainNamesLoadAsync() {
            this.ExpiredDomainNamesLoadAsync(null);
        }
        
        /// <remarks/>
        public void ExpiredDomainNamesLoadAsync(object userState) {
            if ((this.ExpiredDomainNamesLoadOperationCompleted == null)) {
                this.ExpiredDomainNamesLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpiredDomainNamesLoadOperationCompleted);
            }
            this.InvokeAsync("ExpiredDomainNamesLoad", new object[0], this.ExpiredDomainNamesLoadOperationCompleted, userState);
        }
        
        private void OnExpiredDomainNamesLoadOperationCompleted(object arg) {
            if ((this.ExpiredDomainNamesLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpiredDomainNamesLoadCompleted(this, new ExpiredDomainNamesLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/ForceStratosphereCall", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ForceStratosphereCall() {
            object[] results = this.Invoke("ForceStratosphereCall", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForceStratosphereCallAsync() {
            this.ForceStratosphereCallAsync(null);
        }
        
        /// <remarks/>
        public void ForceStratosphereCallAsync(object userState) {
            if ((this.ForceStratosphereCallOperationCompleted == null)) {
                this.ForceStratosphereCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForceStratosphereCallOperationCompleted);
            }
            this.InvokeAsync("ForceStratosphereCall", new object[0], this.ForceStratosphereCallOperationCompleted, userState);
        }
        
        private void OnForceStratosphereCallOperationCompleted(object arg) {
            if ((this.ForceStratosphereCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForceStratosphereCallCompleted(this, new ForceStratosphereCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetPremiumAppraisal", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPremiumAppraisal(string sShopperId, string sDomainName) {
            object[] results = this.Invoke("GetPremiumAppraisal", new object[] {
                        sShopperId,
                        sDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPremiumAppraisalAsync(string sShopperId, string sDomainName) {
            this.GetPremiumAppraisalAsync(sShopperId, sDomainName, null);
        }
        
        /// <remarks/>
        public void GetPremiumAppraisalAsync(string sShopperId, string sDomainName, object userState) {
            if ((this.GetPremiumAppraisalOperationCompleted == null)) {
                this.GetPremiumAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPremiumAppraisalOperationCompleted);
            }
            this.InvokeAsync("GetPremiumAppraisal", new object[] {
                        sShopperId,
                        sDomainName}, this.GetPremiumAppraisalOperationCompleted, userState);
        }
        
        private void OnGetPremiumAppraisalOperationCompleted(object arg) {
            if ((this.GetPremiumAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPremiumAppraisalCompleted(this, new GetPremiumAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/PlaceBackorder", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceBackorder(bool isGoDaddyBackorder, string backorderXML) {
            object[] results = this.Invoke("PlaceBackorder", new object[] {
                        isGoDaddyBackorder,
                        backorderXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBackorderAsync(bool isGoDaddyBackorder, string backorderXML) {
            this.PlaceBackorderAsync(isGoDaddyBackorder, backorderXML, null);
        }
        
        /// <remarks/>
        public void PlaceBackorderAsync(bool isGoDaddyBackorder, string backorderXML, object userState) {
            if ((this.PlaceBackorderOperationCompleted == null)) {
                this.PlaceBackorderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBackorderOperationCompleted);
            }
            this.InvokeAsync("PlaceBackorder", new object[] {
                        isGoDaddyBackorder,
                        backorderXML}, this.PlaceBackorderOperationCompleted, userState);
        }
        
        private void OnPlaceBackorderOperationCompleted(object arg) {
            if ((this.PlaceBackorderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBackorderCompleted(this, new PlaceBackorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/StuffExpiredDomains", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StuffExpiredDomains(string incomingExpiredDomainsXML) {
            object[] results = this.Invoke("StuffExpiredDomains", new object[] {
                        incomingExpiredDomainsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StuffExpiredDomainsAsync(string incomingExpiredDomainsXML) {
            this.StuffExpiredDomainsAsync(incomingExpiredDomainsXML, null);
        }
        
        /// <remarks/>
        public void StuffExpiredDomainsAsync(string incomingExpiredDomainsXML, object userState) {
            if ((this.StuffExpiredDomainsOperationCompleted == null)) {
                this.StuffExpiredDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStuffExpiredDomainsOperationCompleted);
            }
            this.InvokeAsync("StuffExpiredDomains", new object[] {
                        incomingExpiredDomainsXML}, this.StuffExpiredDomainsOperationCompleted, userState);
        }
        
        private void OnStuffExpiredDomainsOperationCompleted(object arg) {
            if ((this.StuffExpiredDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StuffExpiredDomainsCompleted(this, new StuffExpiredDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/StoreLeadData", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StoreLeadData(string domain, string first_name, string last_name, string email, string phone) {
            object[] results = this.Invoke("StoreLeadData", new object[] {
                        domain,
                        first_name,
                        last_name,
                        email,
                        phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StoreLeadDataAsync(string domain, string first_name, string last_name, string email, string phone) {
            this.StoreLeadDataAsync(domain, first_name, last_name, email, phone, null);
        }
        
        /// <remarks/>
        public void StoreLeadDataAsync(string domain, string first_name, string last_name, string email, string phone, object userState) {
            if ((this.StoreLeadDataOperationCompleted == null)) {
                this.StoreLeadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreLeadDataOperationCompleted);
            }
            this.InvokeAsync("StoreLeadData", new object[] {
                        domain,
                        first_name,
                        last_name,
                        email,
                        phone}, this.StoreLeadDataOperationCompleted, userState);
        }
        
        private void OnStoreLeadDataOperationCompleted(object arg) {
            if ((this.StoreLeadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreLeadDataCompleted(this, new StoreLeadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/AddRemoveWatch", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddRemoveWatch(string xmlInput) {
            object[] results = this.Invoke("AddRemoveWatch", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRemoveWatchAsync(string xmlInput) {
            this.AddRemoveWatchAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void AddRemoveWatchAsync(string xmlInput, object userState) {
            if ((this.AddRemoveWatchOperationCompleted == null)) {
                this.AddRemoveWatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRemoveWatchOperationCompleted);
            }
            this.InvokeAsync("AddRemoveWatch", new object[] {
                        xmlInput}, this.AddRemoveWatchOperationCompleted, userState);
        }
        
        private void OnAddRemoveWatchOperationCompleted(object arg) {
            if ((this.AddRemoveWatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRemoveWatchCompleted(this, new AddRemoveWatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAuctionDetails", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionDetails(string xmlInput) {
            object[] results = this.Invoke("GetAuctionDetails", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionDetailsAsync(string xmlInput) {
            this.GetAuctionDetailsAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetAuctionDetailsAsync(string xmlInput, object userState) {
            if ((this.GetAuctionDetailsOperationCompleted == null)) {
                this.GetAuctionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAuctionDetails", new object[] {
                        xmlInput}, this.GetAuctionDetailsOperationCompleted, userState);
        }
        
        private void OnGetAuctionDetailsOperationCompleted(object arg) {
            if ((this.GetAuctionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionDetailsCompleted(this, new GetAuctionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("trpMemberItemService/GetAuctionDetailsBulk", RequestNamespace="trpMemberItemService", ResponseNamespace="trpMemberItemService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuctionDetailsBulk(string xmlInput) {
            object[] results = this.Invoke("GetAuctionDetailsBulk", new object[] {
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuctionDetailsBulkAsync(string xmlInput) {
            this.GetAuctionDetailsBulkAsync(xmlInput, null);
        }
        
        /// <remarks/>
        public void GetAuctionDetailsBulkAsync(string xmlInput, object userState) {
            if ((this.GetAuctionDetailsBulkOperationCompleted == null)) {
                this.GetAuctionDetailsBulkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuctionDetailsBulkOperationCompleted);
            }
            this.InvokeAsync("GetAuctionDetailsBulk", new object[] {
                        xmlInput}, this.GetAuctionDetailsBulkOperationCompleted, userState);
        }
        
        private void OnGetAuctionDetailsBulkOperationCompleted(object arg) {
            if ((this.GetAuctionDetailsBulkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuctionDetailsBulkCompleted(this, new GetAuctionDetailsBulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ItemNeedsToBeEscrowedCompletedEventHandler(object sender, ItemNeedsToBeEscrowedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ItemNeedsToBeEscrowedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ItemNeedsToBeEscrowedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditAskPriceCompletedEventHandler(object sender, EditAskPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAskPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAskPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditAuctionTypeCompletedEventHandler(object sender, EditAuctionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAuctionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAuctionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditWebsiteIncludedFlagCompletedEventHandler(object sender, EditWebsiteIncludedFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWebsiteIncludedFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWebsiteIncludedFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditAppraisalIDCompletedEventHandler(object sender, EditAppraisalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAppraisalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAppraisalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditReservePriceCompletedEventHandler(object sender, EditReservePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditReservePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditReservePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelMemberItemCompletedEventHandler(object sender, CancelMemberItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelMemberItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelMemberItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelMemberItemByDomainNameCompletedEventHandler(object sender, CancelMemberItemByDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelMemberItemByDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelMemberItemByDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelMemberItemByDomainNameCPCompletedEventHandler(object sender, CancelMemberItemByDomainNameCPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelMemberItemByDomainNameCPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelMemberItemByDomainNameCPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelMemberItemByIDCompletedEventHandler(object sender, CancelMemberItemByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelMemberItemByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelMemberItemByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BulkAuctionStatusCompletedEventHandler(object sender, BulkAuctionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkAuctionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkAuctionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindItemByDomainNameCompletedEventHandler(object sender, FindItemByDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindItemByDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindItemByDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindItemBidIDWFCompletedEventHandler(object sender, FindItemBidIDWFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindItemBidIDWFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindItemBidIDWFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindActiveListingByDomainNameCompletedEventHandler(object sender, FindActiveListingByDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindActiveListingByDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindActiveListingByDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDomainSalesInfoCompletedEventHandler(object sender, GetDomainSalesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainSalesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainSalesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionListingCompletedEventHandler(object sender, GetAuctionListingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindExpiredNameByDomainNameCompletedEventHandler(object sender, FindExpiredNameByDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindExpiredNameByDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindExpiredNameByDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuctionBulkLoadCompletedEventHandler(object sender, AuctionBulkLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuctionBulkLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuctionBulkLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuctionBulkLoad1CompletedEventHandler(object sender, AuctionBulkLoad1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuctionBulkLoad1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuctionBulkLoad1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuctionBulkUpdateCompletedEventHandler(object sender, AuctionBulkUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuctionBulkUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuctionBulkUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelAuctionBySourceSystemCompletedEventHandler(object sender, CancelAuctionBySourceSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelAuctionBySourceSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelAuctionBySourceSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAppraisalLocationCompletedEventHandler(object sender, GetAppraisalLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppraisalLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppraisalLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAppraisalByDomainNameCompletedEventHandler(object sender, GetAppraisalByDomainNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppraisalByDomainNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppraisalByDomainNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAppraisalsByShopperIDAndAppraisalIDCompletedEventHandler(object sender, GetAppraisalsByShopperIDAndAppraisalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppraisalsByShopperIDAndAppraisalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppraisalsByShopperIDAndAppraisalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAppraisalsByShopperIDCompletedEventHandler(object sender, GetAppraisalsByShopperIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppraisalsByShopperIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppraisalsByShopperIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAppraisalsByAppraisalXMLCompletedEventHandler(object sender, GetAppraisalsByAppraisalXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppraisalsByAppraisalXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppraisalsByAppraisalXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAuctionEndTimeCompletedEventHandler(object sender, UpdateAuctionEndTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAuctionEndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAuctionEndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExpiredDomainNamesLoadCompletedEventHandler(object sender, ExpiredDomainNamesLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExpiredDomainNamesLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExpiredDomainNamesLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ForceStratosphereCallCompletedEventHandler(object sender, ForceStratosphereCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForceStratosphereCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForceStratosphereCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPremiumAppraisalCompletedEventHandler(object sender, GetPremiumAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPremiumAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPremiumAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceBackorderCompletedEventHandler(object sender, PlaceBackorderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBackorderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBackorderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StuffExpiredDomainsCompletedEventHandler(object sender, StuffExpiredDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StuffExpiredDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StuffExpiredDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StoreLeadDataCompletedEventHandler(object sender, StoreLeadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreLeadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreLeadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddRemoveWatchCompletedEventHandler(object sender, AddRemoveWatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRemoveWatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRemoveWatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionDetailsCompletedEventHandler(object sender, GetAuctionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuctionDetailsBulkCompletedEventHandler(object sender, GetAuctionDetailsBulkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuctionDetailsBulkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuctionDetailsBulkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591