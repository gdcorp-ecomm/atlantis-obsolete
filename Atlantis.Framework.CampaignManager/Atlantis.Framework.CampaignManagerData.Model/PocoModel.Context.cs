//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace Atlantis.Framework.CampaignManagerData.Model
{
    public partial class goDaddyMarketingCampaignsEntities : ObjectContext
    {
        public const string ConnectionString = "name=goDaddyMarketingCampaignsEntities";
        public const string ContainerName = "goDaddyMarketingCampaignsEntities";
    
        #region Constructors
    
        public goDaddyMarketingCampaignsEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public goDaddyMarketingCampaignsEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public goDaddyMarketingCampaignsEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<AudienceType> AudienceTypes
        {
            get { return _audienceTypes  ?? (_audienceTypes = CreateObjectSet<AudienceType>("AudienceTypes")); }
        }
        private ObjectSet<AudienceType> _audienceTypes;
    
        public ObjectSet<Campaign> Campaigns
        {
            get { return _campaigns  ?? (_campaigns = CreateObjectSet<Campaign>("Campaigns")); }
        }
        private ObjectSet<Campaign> _campaigns;
    
        public ObjectSet<CampaignAudienceTypeMap> CampaignAudienceTypeMaps
        {
            get { return _campaignAudienceTypeMaps  ?? (_campaignAudienceTypeMaps = CreateObjectSet<CampaignAudienceTypeMap>("CampaignAudienceTypeMaps")); }
        }
        private ObjectSet<CampaignAudienceTypeMap> _campaignAudienceTypeMaps;
    
        public ObjectSet<CampaignCompanyMap> CampaignCompanyMaps
        {
            get { return _campaignCompanyMaps  ?? (_campaignCompanyMaps = CreateObjectSet<CampaignCompanyMap>("CampaignCompanyMaps")); }
        }
        private ObjectSet<CampaignCompanyMap> _campaignCompanyMaps;
    
        public ObjectSet<CampaignObjectiveMap> CampaignObjectiveMaps
        {
            get { return _campaignObjectiveMaps  ?? (_campaignObjectiveMaps = CreateObjectSet<CampaignObjectiveMap>("CampaignObjectiveMaps")); }
        }
        private ObjectSet<CampaignObjectiveMap> _campaignObjectiveMaps;
    
        public ObjectSet<CampaignProductMap> CampaignProductMaps
        {
            get { return _campaignProductMaps  ?? (_campaignProductMaps = CreateObjectSet<CampaignProductMap>("CampaignProductMaps")); }
        }
        private ObjectSet<CampaignProductMap> _campaignProductMaps;
    
        public ObjectSet<CampaignStatusType> CampaignStatusTypes
        {
            get { return _campaignStatusTypes  ?? (_campaignStatusTypes = CreateObjectSet<CampaignStatusType>("CampaignStatusTypes")); }
        }
        private ObjectSet<CampaignStatusType> _campaignStatusTypes;
    
        public ObjectSet<CampaignType> CampaignTypes
        {
            get { return _campaignTypes  ?? (_campaignTypes = CreateObjectSet<CampaignType>("CampaignTypes")); }
        }
        private ObjectSet<CampaignType> _campaignTypes;
    
        public ObjectSet<CampaignUserResourceMap> CampaignUserResourceMaps
        {
            get { return _campaignUserResourceMaps  ?? (_campaignUserResourceMaps = CreateObjectSet<CampaignUserResourceMap>("CampaignUserResourceMaps")); }
        }
        private ObjectSet<CampaignUserResourceMap> _campaignUserResourceMaps;
    
        public ObjectSet<Company> Companies
        {
            get { return _companies  ?? (_companies = CreateObjectSet<Company>("Companies")); }
        }
        private ObjectSet<Company> _companies;
    
        public ObjectSet<Objective> Objectives
        {
            get { return _objectives  ?? (_objectives = CreateObjectSet<Objective>("Objectives")); }
        }
        private ObjectSet<Objective> _objectives;
    
        public ObjectSet<OfferType> OfferTypes
        {
            get { return _offerTypes  ?? (_offerTypes = CreateObjectSet<OfferType>("OfferTypes")); }
        }
        private ObjectSet<OfferType> _offerTypes;
    
        public ObjectSet<Product> Products
        {
            get { return _products  ?? (_products = CreateObjectSet<Product>("Products")); }
        }
        private ObjectSet<Product> _products;
    
        public ObjectSet<UserResource> UserResources
        {
            get { return _userResources  ?? (_userResources = CreateObjectSet<UserResource>("UserResources")); }
        }
        private ObjectSet<UserResource> _userResources;

        #endregion
    }
}
